sdwdate(8) -- Secure Distributed Web Date
=============================================

<span class="comment">
# This file is part of Whonix.
# Copyright (C) 2012 - 2014 Patrick Schleizer adrelanos@riseup.net
# See the file COPYING for copying conditions.

# Not using angle brackets in copyright notice for e-mail address, because
# angle brackets would result in this file being non-deterministic. (There
# must be a bug in Debian wheezy in ruby-ronn.)

# Not using "##", because for some reason this comment would be visible in the
# resulting man page.
</span>

## SYNOPSIS
`sdwdate` [option]

## DESCRIPTION
Sets mediate time after asking 3 https servers out of 3 different pools.

## OPTIONS
  * -d --debug

    debug

  * --help

    print usage message and exit

  * -q --quiet

    quiet

  * -x --dont_set_date

    do not set the time (only show)

  * -a --user_agent user_agent

    http user agent to use

  * -l --log_file file

    log to this file rather than to STDOUT

  * -D --done_file file

    create this file after one cycle of sdwdate

  * -T --success_file file

    create this file after setting time successfully

  * --pal_pool hostnames

    Friendly distrusted hostnames.

  * --neutral_pool hostnames

    Neutral distrusted hostnames.

  * --foe_pool hostnames

    Distrusted distrusted hostnames.

  * --allowed_per_pool_failure_ratio ratio

    ratio (0.0-1.0) of allowed per-pool failure

  * -p --proxy proxy

    what to pass to curl's --socks5-hostname

  * -i --interval minutes

    Continuously run every x minutes. (Daemon mode.) When not set or when set
    to 0, just do one shot, then exit.

  * --mininterval minutes

    Wait minimum minutes between intervals.

  * -r --randomize

    randomize interval

  * -n --noconfig

    ignore /etc/sdwdate.d/ config folder

  * -w --dispatchpre command

    exec before run

  * -y --dispatchprerequisite command

    Check before run. See default config for which exit codes are expected
    in which situations.

  * -x --dispatchpostsuccess command

    exec after successful run

  * -z --dispatchpostfailure command

    exec after unsuccessful run

  * -m --dispatchposterror command

    exec when an error is caught

  * --dispatch_pre_pal command

    exec before run of curl

  * --dispatch_post_pal command

    exec after run of curl

  * --dispatch_pre_neutral command

    exec before run of curl

  * --dispatch_post_neutral command

    exec after run of curl

  * --dispatch_pre_foe command

    exec before first run of curl

  * --dispatch_post_foe command

    exec after run of curl"

## DISPATCHER
Can be commands or scripts.

## ENVIRONMENT VARIABLES
Many. All options that can be given by command line can also be given by
environment variables. See /etc/sdwdate.d/30_sdwdate_default to learn about
the names of the environment variables and their possible values.

## CONFIG FILE
Read the comments in `/etc/sdwdate.d/30_sdwdate_default`.

## ERROR TEST FILE
For testing sdwdate's error handling, you can test-wise cause an error by
creating an empty file /var/lib/sdw_error. ("sudo touch
/var/lib/whonix/sdw_error" should be enough.)

## RETURN VALUES
0 Success

1 Error

## EXAMPLES

`sudo sdwdate`

## WWW
https://www.whonix.org/wiki/Dev/TimeSync

## CREDITS
* sdwdate is a rewrite of tails_htp in bash
* defaults taken from tails_htp
* options inspired by tails_htp
* log file layout inspired by tails_htp

## AUTHOR
This man page has been written by Patrick Schleizer (adrelanos@riseup.net).
