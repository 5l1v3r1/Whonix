#!/bin/bash

set -x

true "Currently running script: $0"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source variables
source pre

create-debian-img() {
   trap "error_handler_general" ERR INT TERM

   mkdir --parents /home/"$USERNAME"/whonix_binary/
   chown --recursive user:user /home/"$USERNAME"/whonix_binary/

   ## If whonix_build is run with -fast switch.
   if [ "$FAST" = "1" ]; then
      echo "create-debian-img: run with -fast switch. Skipping image creation step."
      exit 0
   fi

   ## vmsize 100 GB does not matter because only space,
   ## which gets actually filled up, will take disk space.

   ## Default architecture.
   local ARCH="i386"
   
   ## Interesting architecture for custom builds: 64 bit
   ## Despite it's name, works on AMD and Intel.
   #local ARCH="amd64"

   ## Also interesting architectures for custom builds: Kernel of FreeBSD
   ## Will not work out of the box for Whonix-Gateway, because Whonix Firewall
   ## is based on iptables (Linux) and the FreeBSD does not support iptables,
   ## its firewall is pf. The Whonix iptables rules would have to be rewritten in pf.
   #local ARCH="kfreebsd-amd64"
   #local ARCH="kfreebsd-i386"

   grml-debootstrap \
      --arch "$ARCH" \
      --filesystem ext4 \
      --force \
      --hostname host \
      --mirror http://127.0.0.1:3142/debian \
      --keep_src_list \
      --password changeme \
      --release wheezy \
      --verbose \
      --vmfile \
      --vmsize "100G" \
      --config ""$WHONIX_SOURCE_FOLDER"/grml_config" \
      --packages ""$WHONIX_SOURCE_FOLDER"/"$VMNAME"_packages" \
      --target /home/"$USERNAME"/whonix_binary/"$VMNAME".img

   chown --recursive user:user /home/"$USERNAME"/whonix_binary/
} 

create-debian-img

