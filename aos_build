#!/bin/bash
# build script: /home/user/aos/aos_build

# See LICENSE in root of aos source for copyright, license and authors.

script_help() {
echo \
"
# creates separate build folder
# FLAGS:
# -all (NOT YET IMPLEMENTED)
# build both Virtual machines
#
# -tg
# Builds aos-Gateway VBox machine.
#
# -tw
# assumes aos-Gateway is running because
# downloads go already through aos-Gateway.
# Builds aos-Workstation VBox machine.
#
# -clean
# deletes the whole content of the aos_binary folder
# (untested)
"
}



set -x

USERNAME="user"
AOS_SOURCE_FOLDER="/home/$USERNAME/aos"



root_check() {
######################################################
# Checking script environment
######################################################
# Check if we are root
if [ "$(id -u)" != "0" ]; then
     echo "ERROR: This must be run as root (sudo)!"
     exit 1
else
     echo "INFO: Script running as root."
fi
}



# If this file was created previously, delete it now.
rm /home/$USERNAME/aos_binary/AOS_BUILD_FAILED



################################################################ 
# tg                                                           #
################################################################ 
if [ "$1" = "-tg" ]; then
      root_check

      "$AOS_SOURCE_FOLDER"/aos_getiso -download
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_modifyiso -create
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tg-createvm
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tg-install-os
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tg-post-install-os
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_image -tg-copyinto-pre
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tg-install-script
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_image -tg-copyinto-post
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tg-export
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      echo "INFO: No errors."
      exit 0
fi



################################################################ 
# tw                                                           #
################################################################ 
if [[ "$1" = "-tw" ]]; then
      root_check

      : Assumes aos-Gateway has already been created, i.e.
      : operating system iso already downloaded and preseed added.

      "$AOS_SOURCE_FOLDER"/aos_createvm -tw-createvm
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tw-install-os
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tw-post-install-os
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_image -tw-copyinto-pre
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      : Assumes aos-Gateway is running, because downloads already go through aos-Gateway.

      "$AOS_SOURCE_FOLDER"/aos_createvm -tw-install-script
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_image -tw-copyinto-post
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      "$AOS_SOURCE_FOLDER"/aos_createvm -tw-export
      if [ -f /home/$USERNAME/aos_binary/AOS_BUILD_FAILED ]; then echo "BUILD SCRIPT ERROR: Failed!"; exit 0; fi

      exit 0
fi

################################################################ 
# -all                                                         #
################################################################ 
if [[ "$1" = "-all" ]]; then
root_check



exit 0
fi



################################################################ 
# -clean                                                       #
################################################################ 
if [[ "$1" = "-all" ]]; then
root_check

"$AOS_SOURCE_FOLDER"/aos_getiso -delete
"$AOS_SOURCE_FOLDER"/aos_modifyiso -delete
"$AOS_SOURCE_FOLDER"/aos_createvm -tg-unmount
"$AOS_SOURCE_FOLDER"/aos_createvm -tw-unmount
"$AOS_SOURCE_FOLDER"/aos_createvm -tg-delete
"$AOS_SOURCE_FOLDER"/aos_createvm -tw-delete

echo "aos_Build: Done."
exit 0
fi



################################################################ 
# -help                                                        #
################################################################ 
if [[ "$1" = "-help" ]]; then
script_help
exit 0
fi



################################################################ 
# no option chosen                                             # 
################################################################ 
if [[ "$1" = "" ]]; then 
echo "
INFO: No option chosen.

Please append -help to find out more.
"
exit 0
fi
