#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x

true "Currently running script: $0 ${1+"$@"}"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source variables

create-debian-img() {
   trap "error_handler_general" ERR INT TERM

   mkdir --parents "$WHONIX_BINARY/"
   chown --recursive "$user_name:$user_name" "$WHONIX_BINARY/"

   ## If whonix_build is run with --fast1 switch.
   if [ "$WHONIX_BUILD_FAST1" = "1" ]; then
      echo "${bold}${cyan}INFO: run with --fast1 switch, skipping $0. ${reset}"
      exit 0
   fi

   ARCH="$(uname --machine)"
   true "${cyan}$0 INFO: Architecture $ARCH detected.${reset}"
   true "${cyan}INFO: WHONIX_TARGET_ARCH set to: $WHONIX_TARGET_ARCH${reset}"

   ## Create backup of grml-debootstrap's original chroot-script.
   cp --no-clobber "/etc/debootstrap/chroot-script" "/etc/debootstrap/chroot-script.backup"

   ## Use chroot-script with fixed DPKG_OPTIONS variable.
   ## This hack can be dropped as soon as
   ## https://github.com/grml/grml-debootstrap/pull/11 is lands in Debian.
   cp "$WHONIX_SOURCE_FOLDER/grml_chroot-script" "/etc/debootstrap/chroot-script"

   mkdir --parents "/etc/debootstrap/etc/apt/"
   cp "$WHONIX_SOURCE_FOLDER/$whonix_build_sources_list" "/etc/debootstrap/etc/apt/sources.list"

   ## Info.
   true "${cyan}INFO: Using the following /etc/apt/sources.list for grml-debootstrap: ${reset}"
   cat "/etc/debootstrap/etc/apt/sources.list"

   ## {{ grml-debootstrap variables

   ## grml-debootstrap variables are documented in grml_config.
   ## Using export, so grml-debootstrap can read it.

   export DPKG_OPTIONS="$apt_timeout_opts $apt_verify_opts"

   ## Not using grml-debootstrap to install a kernel. A chroot-post.d script
   ## will take care of that.
   export KERNEL="none"

   ## More variables in grml_config file. Unfortunately, grml-debootstrap does
   ## neither support using command line nor environment variables for all
   ## options.

   ## }}

   ## Implemented in help-steps/pre.
   maybe_enable_apt_cache

   ## vmsize 100 GB does not matter because only space,
   ## which gets actually filled up, will take disk space.

   grml-debootstrap \
      --debopt "--verbose" \
      --arch "$WHONIX_TARGET_ARCH" \
      --filesystem ext4 \
      --force \
      --hostname host \
      --password changeme \
      --release "$whonix_build_grml_release" \
      --keep_src_list \
      --verbose \
      --vmfile \
      --vmsize "100G" \
      --config "$WHONIX_SOURCE_FOLDER/grml_config" \
      --packages "$WHONIX_SOURCE_FOLDER/grml_packages" \
      --target "$WHONIX_BINARY/$VMNAME.img" \
      --mirror "$whonix_build_grml_sources_list"

   ## Implemented in help-steps/pre.
   disable_apt_cache

   chown --recursive "$user_name:$user_name" "$WHONIX_BINARY/"
}

if [ "$BARE_METAL" = "1" ]; then
   true "${green}INFO: Skipping $0, because BARE_METAL is set to 1.${reset}"
else
   true "${bold}INFO: Currently running script: $0 ${1+"$@"}${reset}"
   create-debian-img
   true "${bold}INFO: End of: $0 No error detected.${reset}"
fi
