#!/bin/bash

# This file is part of Whonix
# Copyright (C) 2012 - 2013 adrelanos <adrelanos at riseup dot net>
# See the file COPYING for copying conditions.

set -x

true "Currently running script: $0"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source variables

create-debian-img() {
   trap "error_handler_general" ERR INT TERM

   local vboxmanage_return="0"
   ## Do not use sudo -E or it will fail.
   sudo -u "$USERNAME" VBoxManage showvminfo "$VMNAME" >/dev/null 2>/dev/null || { local vboxmanage_return="$?" ; true; };

   if [ "$vboxmanage_return" = "0" ]; then
      true "${bold}${red}$0 ERROR: $VMNAME already exists! ${reset}"
      true "${cyan}$0 You most likely want to delete already existing Virtual Machines.
(Feel free to comment this check out, if you know what you are doing.)
To delete $VMNAME, run:${reset}
    sudo ./whonix_build --clean $vmname_lowercase_long_option

To delete both virtual machines, use:

    sudo ./whonix_build --clean --tor-gateway
    sudo ./whonix_build --clean --tor-workstation

${bold}${red}WARNING${reset}: This will delete the virtual machine(s) from VirtualBox as well!"
      error "$VMNAME already exists!"
   fi

   mkdir --parents "$WHONIX_BINARY/"
   chown --recursive "$USERNAME":"$USERNAME" "$WHONIX_BINARY/"

   ## If whonix_build is run with --fast1 switch.
   if [ "$WHONIX_BUILD_FAST1" = "1" ]; then
      echo "${bold}${cyan}INFO: run with --fast1 switch, skipping $0. ${reset}"
      exit 0
   fi

   ## vmsize 100 GB does not matter because only space,
   ## which gets actually filled up, will take disk space.

   if [ -z "$WHONIX_TARGET_ARCH" ]; then
      ## Default architecture.
      export WHONIX_TARGET_ARCH="i386"
   fi
   if [ "$WHONIX_TARGET_ARCH" = "" ]; then
      ## Default architecture.
      export WHONIX_TARGET_ARCH="i386"
   fi

   true "${cyan}INFO: WHONIX_TARGET_ARCH: $WHONIX_TARGET_ARCH${reset}"

   mkdir --parents "/etc/debootstrap/etc/apt/"
   cp "$WHONIX_SOURCE_FOLDER/$whonix_build_sources_list" "/etc/debootstrap/etc/apt/sources.list"

   ## Info.
   true "${cyan}INFO: Using the following /etc/apt/sources.list for grml-debootstrap: ${reset}"
   cat "/etc/debootstrap/etc/apt/sources.list"

   ## {{ grml-debootstrap variables

   ## grml-debootstrap variables are documented in grml_config.
   ## Using export, so grml-debootstrap can read it.

   export DPKG_OPTIONS="$apt_timeout_opts $apt_verify_opts"

   ## More variables in grml_config file. Unfortunately, grml-debootstrap does
   ## neither support using command line nor environment variables for all
   ## options.

   ## }}

   ## Enable apt-cacher-ng proxy.
   export http_proxy="http://127.0.0.1:3142"

   grml-debootstrap \
      --debopt "--verbose" \
      --arch "$WHONIX_TARGET_ARCH" \
      --filesystem ext4 \
      --force \
      --hostname host \
      --password changeme \
      --release "$whonix_build_grml_release" \
      --keep_src_list \
      --verbose \
      --vmfile \
      --vmsize "100G" \
      --config "$WHONIX_SOURCE_FOLDER/grml_config" \
      --packages "$WHONIX_SOURCE_FOLDER/grml_packages" \
      --target "$WHONIX_BINARY/$VMNAME.img" \
      --mirror "$whonix_build_grml_sources_list"

   ## Disable apt-cacher-ng proxy.
   unset http_proxy

   chown --recursive "$USERNAME":"$USERNAME" "$WHONIX_BINARY/"
}

if [ "$BARE_METAL" = "1" ]; then
   true "${green}INFO: Skipping $0, because BARE_METAL is set to 1.${reset}"
else
   true "${bold}INFO: Currently running script: $0${reset}"
   create-debian-img
   true "${bold}INFO: End of: $0 No error detected.${reset}"
fi
