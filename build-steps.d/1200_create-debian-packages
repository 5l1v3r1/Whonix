#!/bin/bash

## Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## example usage:
## TODO: always check packages/anon-shared-build-apt-sources-tpo/etc/apt/sources.list.d/torproject.list first!
## sudo -E ./build-steps.d/1200_create-debian-packages --build --allow-untagged true --allow-uncommitted true --internalrun --target root --function get_tpo_packages

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

VMNAME="internalrun"

source pre
source colors
source variables

cd "$MYDIR"
cd ..

get_backports_packages() {
   true "INFO: no backports packages required, ok."
   return 0

   if [ "$whonix_build_pkg_apparmor_only" = "true" ]; then
      true "${cyan}$BASH_SOURCE INFO: Skipping $FUNCNAME, because whonix_build_pkg_apparmor_only is set to $whonix_build_pkg_apparmor_only. ${reset}"
      return 0
   fi

   true "${cyan}$BASH_SOURCE INFO: Getting backports packages... ${reset}"

   ## Not using '-t "${whonix_build_apt_stable_release}-backports"' to workaround apt-get bug.
   local pkg_list bp
   bp="${whonix_build_apt_stable_release}-backports"

   ## No longer required. Can be removed/replaced if this function ever gets in use again.
   pkg_list+="spectre-meltdown-checker/$bp "

   rm --recursive --force "$WHONIX_BINARY/$FUNCNAME"
   sudo $SUDO_OPTS mkdir --parents "$WHONIX_BINARY/$FUNCNAME"
   pushd "$WHONIX_BINARY/$FUNCNAME"

   ## Workaround apt-get bug that is happening when using '--connection onion'.
   $apt_get_update_wrapper_source_path_full \
      ${APTGETOPT[@]} \
      -o Dir::Etc::sourcelist="$whonix_build_sources_list_primary" \
      -o Dir::Etc::sourceparts="-" \
      update

   ## Download backports packages from Debian backports repository.

   ## https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=441178
   sudo $SUDO_OPTS \
      apt-get source --yes \
         ${APTGETOPT[@]} \
         $apt_unattended_opts \
         -o Dir::Etc::sourcelist="$whonix_build_sources_list_primary" \
         -o Dir::Etc::sourceparts="-" \
         $pkg_list

   sudo $SUDO_OPTS \
      apt-get download --yes \
         ${APTGETOPT[@]} \
         $apt_unattended_opts \
         -o Dir::Etc::sourcelist="$whonix_build_sources_list_primary" \
         -o Dir::Etc::sourceparts="-" \
         $pkg_list

   local file_name package_absolute_path

   for file_name in ./*.deb ; do
      package_absolute_path="$(readlink -f "$file_name")"
      sudo $SUDO_OPTS -E "$whonix_dev_meta_files_folder/debug-steps/reprepro-wrapper" includedeb "$WHONIX_BUILD_APT_CODENAME" "$package_absolute_path"
   done

   for file_name in ./*.dsc ; do
      package_absolute_path="$(readlink -f "$file_name")"
      sudo $SUDO_OPTS -E "$whonix_dev_meta_files_folder/debug-steps/reprepro-wrapper" includedsc "$WHONIX_BUILD_APT_CODENAME" "$package_absolute_path"
   done

   popd

   true "${cyan}$BASH_SOURCE INFO: Got $FUNCNAME. ${reset}"
}

get_tpo_packages() {
   if [ "$whonix_build_pkg_apparmor_only" = "true" ]; then
      true "${cyan}$BASH_SOURCE INFO: Skipping $FUNCNAME, because whonix_build_pkg_apparmor_only is set to $whonix_build_pkg_apparmor_only. ${reset}"
      return 0
   fi

   local temp_newer_packages="$WHONIX_BINARY/temp_newer_packages"
   local whonix_build_tpo_repo_download_chroot_script="$WHONIX_SOURCE_HELP_STEPS_FOLDER/cowbuilder_repo_download_chroot_script"

   rm --recursive --force "$temp_newer_packages"
   sudo $SUDO_OPTS mkdir --parents "$temp_newer_packages"

   for whonix_build_multiarch_package_item in $make_cross_build_platform_list ; do
      export whonix_build_multiarch_package_item

      ## TODO: change that folder
      cow_folder="/var/cache/pbuilder/cow.cow_${whonix_build_multiarch_package_item}"
      base_folder="/var/cache/pbuilder/base.cow_${whonix_build_multiarch_package_item}"

      test -d "$base_folder"
      "$WHONIX_SOURCE_HELP_STEPS_FOLDER/umount_kill.sh" "$base_folder/"

      sudo $SUDO_OPTS mkdir -p "$base_folder/tmp/tpo_repo"

      cp "$WHONIX_SOURCE_FOLDER/packages/anon-shared-build-apt-sources-tpo/usr/share/anon-shared-build-apt-sources-tpo/tpoarchive-keys.d/torprojectarchive.asc" "$base_folder/tmp/tpo_repo/torprojectarchive.asc"
      cp "$whonix_build_sources_list_torproject" "$base_folder/tmp/tpo_repo/torproject.list"

      cowbuilder_exit_code=0
      $COWBUILDER_PREFIX \
      apt_get_update_wrapper_bin_path_full=$apt_get_update_wrapper_bin_path_full \
         cowbuilder \
            --execute "$whonix_build_tpo_repo_download_chroot_script" \
            --basepath "$base_folder" \
            --buildplace "$cow_folder" \
            --configfile "$whonix_build_pbuilder_config_file" \
            --bindmounts "$WHONIX_BINARY/temp_newer_packages" \
            || { cowbuilder_exit_code="$?" ; true; };

      if [ -d "$base_folder" ]; then
         "$WHONIX_SOURCE_HELP_STEPS_FOLDER/umount_kill.sh" "$base_folder/"
      fi

      if [ ! "$cowbuilder_exit_code" = "0" ]; then
         return "$cowbuilder_exit_code"
      fi
   done

   local file_name package_absolute_path

   for file_name in "$temp_newer_packages/"*".deb" ; do
      package_absolute_path="$(readlink -f "$file_name")"
      sudo $SUDO_OPTS -E "$whonix_dev_meta_files_folder/debug-steps/reprepro-wrapper" includedeb "$WHONIX_BUILD_APT_CODENAME" "$package_absolute_path"
   done

   for file_name in "$temp_newer_packages/"*".dsc" ; do
      package_absolute_path="$(readlink -f "$file_name")"
      sudo $SUDO_OPTS -E "$whonix_dev_meta_files_folder/debug-steps/reprepro-wrapper" includedsc "$WHONIX_BUILD_APT_CODENAME" "$package_absolute_path"
   done

   true "${cyan}$BASH_SOURCE INFO: Got tpo packages. ${reset}"
}

create_whonix_debian_packages() {
   true "${cyan}$BASH_SOURCE INFO: Creating Whonix Debian Packages... ${reset}"

   local number_folders_total number_folder_current benchmark_time_start benchmark_took_time
   ## Thanks to: l0b0 - http://unix.stackexchange.com/a/20855/49297
   number_folders_total="$(find "$WHONIX_SOURCE_FOLDER/packages" -mindepth 1 -maxdepth 1 -type d -printf '\n' | wc -l)" || true
   number_folder_current="0"

   shopt -s nullglob
   shopt -s dotglob

   for item in $pkg_list; do
      item="$WHONIX_SOURCE_FOLDER/packages/$item"
      if [ ! -d "$item" ]; then
         true "INFO: Not a folder: $item"
         continue
      fi
      pushd "$item"
      number_folder_current="$(( number_folder_current + 1 ))"
      local base_name
      base_name="${item##*/}"
      if [ "$base_name" = "whonix-developer-meta-files" ]; then
         true "${cyan}INFO: Skipping $base_name as expected.${reset}"
         popd
         continue
      fi
      if [ "$whonix_build_pkg_apparmor_only" = "true" ]; then
         if [ "$(echo "$base_name" | grep "apparmor-profile-")" ]; then
            true "${cyan}INFO: Building apparmor profile: $base_name ${reset}"
         else
            true "${cyan}INFO${reset}: Skipping $base_name as expected because using whonix_build_pkg_apparmor_only is set to $whonix_build_pkg_apparmor_only."
            popd
            continue
         fi
      fi
      true "${cyan}INFO: Will build now package ($number_folder_current / $number_folders_total): $base_name ${reset}"
      benchmark_time_start="$(date +%s)" || true
      ## The make_use_lintian is supported by the generic Makefile.
      #if [ "$base_name" = "qubes-whonix" ]; then
         #lintian_use_maybe="false"
      #else
      lintian_use_maybe="$make_use_lintian"
      #fi
      local make_file="Makefile"
      test -f "$make_file"
      sudo $SUDO_OPTS -E make -f "$make_file" reprepro-remove
      ## Using -E so environment variables make_use_lintian, make_use_cowbuilder, WHONIX_BUILD_APT_CODENAME gets passed.
      make -f "$make_file" deb-cleanup
      sudo $SUDO_OPTS -E make -f "$make_file" deb-pkg
      sudo $SUDO_OPTS -E make -f "$make_file" reprepro-add
      benchmark_took_time="$(benchmarktimeend "$benchmark_time_start")" || true
      popd
      true "${cyan}INFO: Done with build of package ($number_folder_current / $number_folders_total) (benchmark: $benchmark_took_time): $base_name ${reset}"
   done

   true "${cyan}$BASH_SOURCE INFO: Created Whonix Debian Packages. ${reset}"
}

create-debian-packages() {
   if [ "$WHONIX_BUILD_APT_CODENAME" = "" ]; then
      error "Variable WHONIX_BUILD_APT_CODENAME is empty!"
   fi
   true "${cyan}$BASH_SOURCE INFO: Going to update ${under}${WHONIX_BUILD_APT_CODENAME}${eunder} APT repository... ${reset}"
   sleep 3

   if [ ! "$FUNCTION" = "" ]; then
      eval $FUNCTION
      return 0
   fi

   source "$WHONIX_SOURCE_HELP_STEPS_FOLDER/git_sanity_test"

   git_sanity_test_main "$@"
   signing_key "$@"
   get_backports_packages
   get_tpo_packages "$@"
   create_whonix_debian_packages "$@"
}

main() {
   root_check "$@"
   if [ "$WHONIX_BUILD_FLAVOR" = "whonix-custom-workstation" ]; then
      true "${cyan}INFO: Skipping creation of packages for custom workstation.${reset}"
   else
      create-debian-packages "$@"
   fi
}

main "$@"
