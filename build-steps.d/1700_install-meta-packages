#!/bin/bash

# This file is part of Whonix
# Copyright (C) 2012 - 2013 adrelanos <adrelanos at riseup dot net>
# See the file COPYING for copying conditions.

set -x

true "Currently running script: $0"

TEMP_SCRIPTNAME="$0"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd "$MYDIR"
cd ..
cd help-steps

source pre
source variables

install-pkg() {
   pkg="$1"
   case $whonix_build_script_whonix_package in
      *$pkg*) true "${bold}${cyan}INFO: Skipping $pkg, because whonix_build_script_whonix_package includes it.${reset}"
              return 0
              ;;
   esac

   true "${cyan}INFO: Installing $pkg, because whonix_build_script_whonix_package does not include it.${reset}"
   $CHROOT apt-get $apt_dir_opts $apt_timeout_opts $apt_verify_opts --yes --no-install-recommends install "$pkg"
}

install-meta-packages() {
   trap "error_handler_unchroot_unprevent_unmount" ERR INT TERM

   ## If whonix_build is run with --fast2 switch.
   if [ "$WHONIX_BUILD_FAST2" = "1" ]; then
      echo "${bold}${cyan}INFO: run with --fast2 switch, skipping $0. ${reset}"
      exit 0
   fi

   if [ "$WHONIX_BUILD_USE_AUTO_LOCAL_SIGNING_KEY" = "1" ]; then
      if [ ! -f "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"/done ]; then
         error "${red}${bold}$0 ERROR: "$WHONIX_LOCAL_SIGNING_KEY_FOLDER"/done does not exist. Most likely build-steps.d/1200_create-debian-packages has not been run yet.${reset}"
      fi
   fi

   sync

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/mount-img
   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/prevent-daemons-from-starting

   sync

   ## Sanity tests.
   $CHROOT $update_grub_bin -v
   $CHROOT sync

   sync

   if [ "$BARE_METAL" = "1" ]; then
      ## Backup exiting /etc/apt/sources.list, might be useful for bare metal users.
      cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/apt/sources.list "$CHROOT_FOLDER"/etc/apt/sources.list.backup

      ## Backup exiting /etc/resolv.conf, so we can later use it in help-steps/chroot-img.
      cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/resolv.conf "$CHROOT_FOLDER"/etc/resolv.conf.backup

      ## Backup exiting /etc/hosts so we can later use it in help-steps/chroot-img.
      cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/hosts "$CHROOT_FOLDER"/etc/hosts.backup

      ## Backup exiting /etc/hostname so we can later use it in help-steps/chroot-img.
      cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/hostname "$CHROOT_FOLDER"/etc/hostname.backup

      ## Backup exiting /etc/network/interfaces so we can later use it in help-steps/chroot-img.
      cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/network/interfaces "$CHROOT_FOLDER"/etc/network/interfaces.backup
   fi

   ## We have to manually fix /etc/apt/sources.list, because the list which comes with
   ## grml-debootstrap is incomplete (does not complain debian security repository) and points to 127.0.0.1.
   cp "$WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/sources.list.whonix" "$CHROOT_FOLDER/etc/apt/sources.list"

   cp "$WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/preferences.d/"* "$CHROOT_FOLDER/etc/apt/preferences.d/"

   cp "$WHONIX_SOURCE_FOLDER/whonix_shared/etc/apt/apt.conf.d/90whonix-timeout" "$CHROOT_FOLDER/etc/apt/apt.conf.d/"

   sync

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/chroot-img

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/create-local-temp-apt-repo

   ## Debugging.
   $CHROOT ls -la /etc/apt/trusted.gpg.d
   $CHROOT apt-key finger

   ## Enable apt-cacher-ng.
   export http_proxy="http://127.0.0.1:3142"

   sync

   mkdir --parents "$WHONIX_SOURCES_LIST_TEMP_BUILD_FOLDER"
   cp "$WHONIX_SOURCE_FOLDER/$whonix_build_sources_list" "$CHROOT_FOLDER/$WHONIX_SOURCES_LIST_TEMP_BUILD_FOLDER/build_sources.list"

   sync

   ## Info.
   ls -la "$CHROOT_FOLDER/$WHONIX_SOURCES_LIST_TEMP_BUILD_FOLDER"
   cat "$CHROOT_FOLDER/$WHONIX_SOURCES_LIST_TEMP_BUILD_BASE"
   cat "$CHROOT_FOLDER/$WHONIX_SOURCES_LIST_TEMP_BUILD_FOLDER/build_sources.list"

   ## Debugging.
   ## || true, in case we ever remove that folder (implement it another way) or for custom builds.
   cat "$CHROOT_FOLDER/etc/apt/preferences.d/"* || true

   ## Debugging.
   $CHROOT apt-cache policy || true

   if [ "$CI" = "true" ]; then
      ## Debugging Travis CI.
      $CHROOT grep "Package: zenity" "/var/lib/apt/lists/"* || true
      $CHROOT apt-cache policy zenity || true
      $CHROOT apt-get $apt_dir_opts $apt_timeout_opts install zenity || true
   fi

   ## Debugging.
   $CHROOT apt-get clean
   $CHROOT apt-get autoclean
   $CHROOT apt-get -f install
   $CHROOT dpkg --configure -a

   ## Reading apt repository containing snapshot.debian.org and repository containing Whonix's packages.
   $CHROOT apt-get $apt_dir_opts $apt_timeout_opts $apt_verify_opts update


   ## Workaround for Travis CI.
   ## Not sure if that should be applied in any case. Should the build process
   ## ever require interaction with an interactive dpkg conflict resolution
   ## dialog, we can still think about that.
   if [ "$CI" = "true" ]; then
      local apt_unattended_opts='-o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold"'
   else
      local apt_unattended_opts=''
   fi

   ## While (grml-)debootstrap only used
   ## "deb http://snapshot.debian.org/archive/debian/[...]" we're now also
   ## including "deb http://snapshot.debian.org/archive/debian-security/[...]".
   ## Lets upgrade from the frozen snapshot debian-security repository (if
   ## anything). For whatever that's worth. (We're not using Debian's current
   ## repositories anyway, but can't hurt. More useful for custom builders who
   ## prefer to build from Debians's current repository.)
   if [ "$CI" = "true" ]; then
      true "INFO $0: skipping dist-upgrade, because CI detected."
      true "INFO $0: (Would try to upgrade from Ubuntu precise to saucy, which failed at time of writing.)"
      #$CHROOT apt-get $apt_dir_opts $apt_timeout_opts $apt_verify_opts $apt_unattended_opts --yes dist-upgrade
   else
      $CHROOT apt-get $apt_dir_opts $apt_timeout_opts $apt_verify_opts $apt_unattended_opts --yes dist-upgrade
   fi

   ## Debugging.
   $CHROOT apt-cache policy

   if [ "$CI" = "true" ]; then
      ## Debugging Travis CI.
      $CHROOT grep "Package: zenity" "/var/lib/apt/lists/"*
      $CHROOT apt-cache policy zenity
      $CHROOT apt-get $apt_dir_opts $apt_timeout_opts install zenity
   fi

   install-pkg whonix-shared-packages-dependencies
   install-pkg whonix-shared-packages-recommended

   install-pkg whonix-shared-desktop

   install-pkg whonix-shared-desktop-kde

   install-pkg whonix-shared-kde-accessibility

   if [ "$WHONIX_BUILD_GATEWAY" = "1" ]; then
      install-pkg whonix-gateway-packages-dependencies
      install-pkg whonix-gateway-packages-recommended
   elif [ "$WHONIX_BUILD_WORKSTATION" = "1" ]; then
      install-pkg whonix-workstation-packages-dependencies
      install-pkg whonix-workstation-packages-recommended

      install-pkg whonix-workstation-default-applications
   else
      bug "${red}${bold}ERROR: Neither WHONIX_BUILD_GATEWAY nor WHONIX_BUILD_WORKSTATION is set to 1. Please report this bug!${reset}"
   fi

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/remove-local-temp-apt-repo

   ## Forget about local repository containing Whonix's packages.
   #$CHROOT apt-get --no-download --list-cleanup update

   $CHROOT sync
   sync

   ## Disable apt-cacher-ng.
   unset http_proxy

   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/unchroot-img
   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/unprevent-daemons-from-starting
   "$WHONIX_SOURCE_HELP_STEPS_FOLDER"/unmount-img

   sync
}

true "${bold}INFO: Currently running script: $0${reset}"
install-meta-packages
true "${bold}INFO: End of: $0 No error detected.${reset}"
