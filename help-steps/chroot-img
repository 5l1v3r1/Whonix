#!/bin/bash

set -x

true "$0"

error_handler_run-chroot-script-img() {
: echo "
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
"

"$MYDIR"/unchroot-img
"$MYDIR"/unmount-img-force
"$MYDIR"/unmount-vdi-force

: echo "
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
"

exit 1
}

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "$MYDIR"/variables
source "$MYDIR"/pre

run-chroot-script-img() {
   trap "error_handler_run-chroot-script-img" ERR INT TERM

   ###############
   ## Discussion #
   ###############

   ## Discussion: we may also think about mounting everything,
   ##             i.e. recursively mounting.
   ##             i.e. mount --rbind

   ## Discussion: This would leak uuid of the host disk!
   ##  We would need to phrase it and somehow to remove the uuids. How?
   ##  And only use relevant stuff...
   ##  grep -v rootfs /proc/mounts > /etc/mtab

   ## No longer needed?
   ## Missing info on mounted /dev/loop, needs testing.
   ## (proper) Please elborate.
   #echo "/dev/sda1 / ext4 rw,noatime,errors=remount-ro 0 0
   #proc /proc proc rw,noexec,nosuid,nodev 0 0
   #sysfs /sys sysfs rw,noexec,nosuid,nodev 0 0
   #none /sys/fs/fuse/connections fusectl rw 0 0
   #none /sys/kernel/debug debugfs rw 0 0
   #none /sys/kernel/security securityfs rw 0 0
   #udev /dev devtmpfs rw,mode=0755 0 0
   #devpts /dev/pts devpts rw,noexec,nosuid,gid=5,mode=0620 0 0
   #tmpfs /run tmpfs rw,noexec,nosuid,size=10%,mode=0755 0 0
   #none /run/lock tmpfs rw,noexec,nosuid,nodev,size=5242880 0 0
   #none /run/shm tmpfs rw,nosuid,nodev 0 0" > /etc/mtab

   ## REVIEW: not sure if we better mount more or less of them.

   ################
   ## policy-rc.d #
   ################

   echo "int_whonix_image: copy policy-rc.d into /usr/sbin/ to prevent deamons from starting."
   cp --preserve --verbose "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/share/whonix/policy-rc.d "$CHROOT_FOLDER"/usr/sbin/policy-rc.d

   #########
   ## /dev #
   #########

   ## We need /dev for create_swap_file
   ## "dd if=/dev/zero of=/swapfile1 bs=1024 count=524288"
   mount --bind /dev "$CHROOT_FOLDER"/dev

   ##########
   ## /proc #
   ##########

   mount --bind /proc "$CHROOT_FOLDER"/proc

   #########
   ## /sys #
   #########

   #mount --bind /sys "$CHROOT_FOLDER"/sys

   #############
   ## /dev/pts #
   #############

   ## Fixes "Can not write log, openpty() failed (/dev/pts not mounted?)"
   ## Thanks to
   ## http://www.gentoo.org/proj/en/base/amd64/howtos/index.xml?part=1&chap=2
   ## for the idea.
   ## Would not be needed if we used mount --rbind.
   ## REVIEW: not sure if we better ommit it.
   #mount -o bind /dev/pts "$CHROOT_FOLDER"/dev/pts

   #####################
   ## /etc/resolv.conf #
   #####################

   ## /etc/resolv.conf controversy:
   ## When we are inside chroot, we need a functional /etc/resolv.conf,
   ## otherwise dns lookups and subsequently apt-get and wget would be defunct.
   ##
   ## On the other hand, we do not want to copy /etc/resolv.conf from the
   ## build machine into chroot, to prevent leaking personal data into chroot.
   ##
   ## Finally we also require to rewrite /etc/resolv.conf, so that after
   ## booting the Virtual Machine, localhost (Tor) gets used for dns lookups.

   ## We need two commands to remount an existing file read only.
   ## Thanks to
   ## https://lwn.net/Articles/281157/
   mount --bind /etc/resolv.conf "$CHROOT_FOLDER"/etc/resolv.conf

   ## Does not work on Debian Wheezy.
   ## Not required anymore. We are not starting any services, dhcp or
   ## networking inside the chroot, so the file should remain untouched.
   #mount -o remount,ro,noload "$CHROOT_FOLDER"/etc/resolv.conf
}

#################
## am_I_sourced #
#################

## Thanks to:
## Wirawan Purwanto
## http://stackoverflow.com/questions/2683279/how-to-detect-if-a-script-is-being-sourced

am_I_sourced() {
  if [ "${FUNCNAME[1]}" = source ]; then
    if [ "$1" = -v ]; then
      true
    fi
    return 0
  else
    if [ "$1" = -v ]; then
      true
    fi
    return 1
  fi
}

if am_I_sourced -v; then
  true
else
  run-chroot-script-img
fi

