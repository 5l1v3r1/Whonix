#!/bin/bash

set -x

if [ "$BARE_METAL" = "1" ]; then
   true "Skipping script, because BARE_METAL=1: $0"
   exit 0
else
   true "Currently running script: $0"
fi

error_handler_unchroot-img() {
: echo "
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
"

"$MYDIR"/unchroot-img
"$MYDIR"/unmount-img-force
#"$MYDIR"/unmount-vdi-force

: echo "
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
#!!! ERROR in `caller` !!!#
"

exit 1
}

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "$MYDIR"/variables
source "$MYDIR"/pre

do_unchroot() {
   trap "error_handler_unchroot-img" ERR INT TERM
   
   sync || true

   rm --verbose --force "$CHROOT_FOLDER"/usr/sbin/policy-rc.d || true
   sync || true

   #umount "$CHROOT_FOLDER"/dev/pts || true
   umount "$CHROOT_FOLDER"/dev || true
   umount "$CHROOT_FOLDER"/proc || true
   #umount "$CHROOT_FOLDER"/sys || true
   umount "$CHROOT_FOLDER"/etc/resolv.conf || true

   sync || true
}

do_unchroot

