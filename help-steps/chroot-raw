#!/bin/bash

## Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -e

true "INFO: Currently running script: $BASH_SOURCE $@"

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "$MYDIR/pre"
source "$MYDIR/colors"
source "$MYDIR/variables"

error_handler_chroot-raw() {
   : echo "
${red}${bold}BASH_COMMAND${reset}: $BASH_COMMAND
${red}${bold}ERROR $BASH_SOURCE: | caller: $(caller)${reset}
"
   exit 1
}

main() {
   trap "error_handler_chroot-raw" ERR INT TERM

   root_check

   sync

   if [ "$ANON_BUILD_INSTALL_TO_ROOT" = "1" ]; then
      true
   else

      #########
      ## /dev #
      #########

      ## We need /dev for create_swap_file
      ##  "dd if=/dev/zero of=/swapfile1 bs=1024 count=524288"
      mount --bind "/dev" "$CHROOT_FOLDER/dev"

      ##########
      ## /proc #
      ##########

      mount --bind "/proc" "$CHROOT_FOLDER/proc"

      #########
      ## /sys #
      #########

      #mount --bind "/sys" "$CHROOT_FOLDER/sys"

      #############
      ## /dev/pts #
      #############

      ## required by unbuffer
      ## (required by apt-get-wrapper)
      mount --bind "/dev/pts" "$CHROOT_FOLDER/dev/pts"
   fi

   ################
   ## mount files #
   ################

   ## controversy of:
   ## /etc/resolv.conf /etc/hosts /etc/hostname /etc/network/interfaces

   ## When we are inside chroot, we need a functional /etc/resolv.conf,
   ## otherwise DNS lookups and subsequently apt-get and curl would be defunct.
   ## On the other hand, we do not want to copy /etc/resolv.conf from the
   ## build machine into chroot, to prevent leaking personal data into chroot.
   ## Therefore we use /etc/resolv.conf from the host inside chroot,
   ## without ever writing it. (Mounting)

   ## When we are inside chroot, we need correct /etc/hosts and /etc/hostname
   ## files, otherwise commands such as:
   ##     sudo -u root echo 'This is a test echo.'
   ## would show for example
   ##     sudo: unable to resolve host debian
   ## and take a long time to complete.

   ## We need two commands to remount an existing file as read only.
   ## Thanks to: https://lwn.net/Articles/281157/
   ## Remount as read only...
   ## Does not work on Debian Wheezy.
   ## Not required anymore. We are not starting any services, DHCP or
   ## networking inside the chroot, so the file should remain untouched.
   #mount -o remount,ro,noload "$CHROOT_FOLDER/etc/resolv.conf"

   if [ "$WHONIX_CHROOT_MOUNT_RESOLV_CONF" = "0" ]; then
      true "${cyan}INFO $BASH_SOURCE: Not mounting /etc/resolv.conf and others inside chroot, because WHONIX_CHROOT_MOUNT_RESOLV_CONF is 0.${reset}"
   else
      if [ ! -f "$WHONIX_BINARY/system-files-backup/hostname" ]; then
         true "${cyan}INFO${reset}: $WHONIX_BINARY/system-files-backup/hostname does not exist. Creating..."
         hostname_temp="$(hostname)"
         sudo $SUDO_OPTS mkdir --parents "$WHONIX_BINARY/system-files-backup"
         echo "$hostname_temp" | \
            sudo $SUDO_OPTS \
               tee "$WHONIX_BINARY/system-files-backup/hostname" >/dev/null
         ## Debugging.
         cat "$WHONIX_BINARY/system-files-backup/hostname"
         true "${cyan}INFO${reset}: Done, created $WHONIX_BINARY/system-files-backup/hostname."
      fi

      ## Debugging.
      test -f "$WHONIX_BINARY/system-files-backup/resolv.conf"

      if diff "/etc/resolv.conf" "$CHROOT_FOLDER/etc/resolv.conf" >/dev/null ; then
         true "INFO: Host '/etc/resolv.conf' matches '$CHROOT_FOLDER/etc/resolv.conf', \
therefore shredding '$CHROOT_FOLDER/etc/resolv.conf'."
         ## Delete leaked host resolv.conf by grml-debootstrap inside image.
         shred -u --zero --force --random-source=/dev/random --verbose "$CHROOT_FOLDER/etc/resolv.conf"
      else
         true "INFO: Host '/etc/resolv.conf' does not match '$CHROOT_FOLDER/etc/resolv.conf', ok"
      fi

      if [ ! -f "$CHROOT_FOLDER/etc/resolv.conf" ]; then
         touch "$CHROOT_FOLDER/etc/resolv.conf"
      fi
      if [ ! -f "$CHROOT_FOLDER/etc/hosts" ]; then
         touch "$CHROOT_FOLDER/etc/hosts"
      fi
      if [ ! -f "$CHROOT_FOLDER/etc/hostname" ]; then
         touch "$CHROOT_FOLDER/etc/hostname"
      fi

      mount --bind "$WHONIX_BINARY/system-files-backup/resolv.conf" "$CHROOT_FOLDER/etc/resolv.conf"
      mount --bind "$WHONIX_BINARY/system-files-backup/hosts" "$CHROOT_FOLDER/etc/hosts"
      mount --bind "$WHONIX_BINARY/system-files-backup/hostname" "$CHROOT_FOLDER/etc/hostname"
   fi

   sync
}

main "$@"
