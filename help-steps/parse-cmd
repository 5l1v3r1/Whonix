#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

script_help() {
   true "
## creates separate build folder
## "$HOMEVAR"/whonix_binary
##
## For verbose documentation on build configuration parameters please have a
## look at the full build documentation.
##
## FLAGS:
## --build
## Build Whonix.
##
## --clean
## Deletes .raw, .ova and VirtualBox VM's.
##
## --virtualbox
## Use this to build VirtualBox .ovas.
##
## --qcow2
## Use this to build qcow2 images.
##
## --no-compress-qcow
## Do not compress qcow2 images to tar.gz.
##
## --bare-metal
## Use this for Whonix with physical isolation.
##
## --tor-gateway
## Builds Whonix-Gateway.
##
## --tor-workstation
## Builds Whonix-Workstation.
##
## --all (not yet implemented)
## Build both machines.
##
## vmram, vram, vmsize examples.
## --vmram 128
## --vram 12
## --vmsize 200G
##
## --terminal-only
## Terminal Only.
## Skip installation of KDE specific packages.
##
## --no-default-applications
## Install fewer packages.
## (Don't complain about missing packages then.)
##
## --current-sources
##
## --64bit-linux
## 64 bit builds
##
## --64bit-kfreebsd
## Entirely untested.
##
## --32bit-kfreebsd
## Entirely untested.
##
## --enable-whonix-apt-repository
## Whonix APT Repository.
## Disabled by default.
##
## --whonix-apt-repository-distribution stable
## --whonix-apt-repository-distribution testers
## --whonix-apt-repository-distribution developers
## Whonix APT Repository Distribution.
## Only useful in conjunction with --enable-whonix-apt-repository.
##
## --minimal-report
## Skip most of the create-report build step. (Related to Verifiable Builds.)
##
## --skip-verifiable
## Skip deletion of non-determinstic files in the cleanup chroot script.
## (These files are later automatically re-created by First Run Initializer.)
##
## --skip-sanity-tests
## Skip chroot script sanity tests.
"
}

whonix_build_cmdoptions() {
   trap "error_handler_general" ERR INT TERM

   ## Thanks to:
   ## http://mywiki.wooledge.org/BashFAQ/035

   if [ "$*" = "" ]; then
      error "${red}${bold}no option chosen. Use --help.${reset}"
   fi

   ## Using export, so scripts run by run-parts (run by whonix_build) can read
   ## these variables.

   while :
   do
       case $1 in
           -h | --help | -\?)
               script_help
               exit 0
               ;;
           -tg | --tor-gateway | --torgateway)
               export WHONIX_BUILD_GATEWAY="1"
               shift
               ;;
           -tw | --tor-workstation | --torworkstation)
               export WHONIX_BUILD_WORKSTATION="1"
               shift
               ;;
           -bm | --baremetal | --bare-metal)
               export BARE_METAL="1"
               shift
               ;;
           --vbox | --virtualbox | --virtual-box)
               export WHONIX_BUILD_VIRTUALBOX="true"
               shift
               ;;
           --qcow2)
               export WHONIX_BUILD_QCOW2="true"
               export whonix_build_script_create_qcow2="1"
               shift
               ;;
           -f1 | --fast1)
               export WHONIX_BUILD_FAST1="1"
               shift
               ;;
           -f2 | --fast2)
               export WHONIX_BUILD_FAST1="1"
               export WHONIX_BUILD_FAST2="1"
               shift
               ;;
           -c  | --clean)
               export WHONIX_BUILD_CLEAN="1"
               shift
               ;;
           -b  | --build)
               export WHONIX_BUILD_BUILD="1"
               shift
               ;;
           -i  | --internalrun)
               export WHONIX_BUILD_INTERNALRUN="1"
               shift
               ;;
           --vmram)
               export VMRAM="$2"
               shift 2
               if [ "$VMRAM" = "" ]; then
                  echo "${red}${bold}ERROR: You forgot to specify how much MB to use for --vmram."
                  exit 1
               fi
               ;;
           --vram)
               export VRAM="$2"
               shift 2
               if [ "$VRAM" = "" ]; then
                  echo "${red}${bold}ERROR: You forgot to specify how much MB to use for --vram."
                  exit 1
               fi
               ;;
           --vmsize)
               export VMSIZE="$2"
               shift 2
               if [ "$VMSIZE" = "" ]; then
                  echo "${red}${bold}ERROR: You forgot to specify how much GB to use for --vmsize."
                  exit 1
               fi
               ;;
           --terminal-only | --no-gui | --terminalonly | --nogui)
               whonix_build_script_whonix_package+=" whonix-shared-desktop "
               whonix_build_script_whonix_package+=" whonix-shared-desktop-kde "
               whonix_build_script_whonix_package+=" whonix-shared-kde-accessibility "
               export whonix_build_script_whonix_package
               shift
               ;;
           --no-default-applications | --nodefaultapplications)
               whonix_build_script_whonix_package+=" whonix-shared-packages-recommended "
               whonix_build_script_whonix_package+=" whonix-gateway-packages-recommended "
               whonix_build_script_whonix_package+=" whonix-workstation-packages-recommended "
               whonix_build_script_whonix_package+=" whonix-workstation-default-applications "
               export whonix_build_script_whonix_package
               shift
               ;;
           --current-sources | --currentsources)
               ## For more technical comments, see:
               ## buildconfig.d/30_apt
               export whonix_build_sources_list="build_sources/debian_stable_current.list"
               export whonix_build_grml_sources_list="http://ftp.us.debian.org/debian"
               ## Reset to default verification options.
               ## (Remove ignoring valid-until field.)
               export apt_verify_opts=""
               shift
               ;;
           --486-linux)
               export BUILD_TARGET_ARCH="i386"
               BUILD_KERNEL_PKGS="$BUILD_KERNEL_PKGS linux-image-486 linux-headers-486"
               shift
               ;;
           --32bit-linux)
               export BUILD_TARGET_ARCH="i386"
               BUILD_KERNEL_PKGS="$BUILD_KERNEL_PKGS linux-image-686-pae linux-headers-686-pae"
               shift
               ;;
           --64bit-linux)
               export BUILD_TARGET_ARCH="amd64"
               BUILD_KERNEL_PKGS="$BUILD_KERNEL_PKGS linux-image-amd64 linux-headers-amd64"
               shift
               ;;
           --64bit-kfreebsd)
               echo "${red}${bold}INFO: The parameter --64bit-kfreebsd is entirely untested and most likely needs work.${reset}"
               export BUILD_TARGET_ARCH="kfreebsd-amd64"
               shift
               ;;
           --32bit-kfreebsd)
               echo "${red}${bold}INFO: The parameter --32bit-kfreebsd is entirely untested and most likely needs work.${reset}"
               export BUILD_TARGET_ARCH="kfreebsd-i386"
               shift
               ;;
           --enable-whonix-apt-repository | --enablewhonixaptrepository)
               export WHONIX_APT_REPOSITORY_DISTRUST_ENV="0"
               shift
               ;;
           --whonix-apt-repository-distribution | --whonixaptrepositorydistribution)
               export WHONIX_APT_REPOSITORY_DISTRIBUTION_CONFIG="$2"
               shift 2
               ;;
           --minimal-report | --minimalreport)
              export whonix_build_script_minimal_report="1"
              shift
              ;;
           --skip-verifiable | --skipverifiable)
              export whonix_build_script_skip_verifiable="1"
              shift
              ;;
           --skip-sanity-tests | --skipsanitytests)
              export SKIP_SCRIPTS+=" 20_sanity_checks "
              shift
              ;;
           --)
               shift
               break
               ;;
           -*)
               error "${red}${bold}unknown option: $1${reset}"
               ;;
           *)
               break
               ;;
       esac
   done

   if [ "$BUILD_KERNEL_PKGS" = "" ]; then
      echo "${cyan}${bold}INFO: No build target (such as --486-linux, --32bit-linux, \
--64bit-linux, --64bit-kfreebsd [untested] or--32bit-kfreebsd [untested] \
has been chosen. Defaulting to BUILD_TARGET_ARCH ${under}i386${eunder} and \
setting BUILD_KERNEL_PKGS to:
${under}linux-image-486${eunder}
${under}linux-headers-486${eunder}
${under}linux-image-686-pae${eunder}
${under}linux-headers-686-pae${eunder}${reset}"
      BUILD_TARGET_ARCH="i386"
      BUILD_KERNEL_PKGS="linux-image-486 linux-headers-486 linux-image-686-pae linux-headers-686-pae"
   fi

   if [ "$BUILD_TARGET_ARCH" = "" ]; then
      echo "${cyan}${bold}INFO: Apparently environment variable BUILD_KERNEL_PKGS is set, but \
environment variable BUILD_TARGET_ARCH is not set. Defaulting BUILD_TARGET_ARCH to ${under}i386${eunder}. \
(Other possible values would be amd64, kfreebsd-amd64 [untested], kfreebsd-i386 [untested].)${reset}"
      BUILD_TARGET_ARCH="i386"
   fi

   ## If there are input files (for example) that follow the options, they
   ## will remain in the "$@" positional parameters.

   if [ "$WHONIX_BUILD_ALL" = "1" ]; then
      error="${red}${bold}--all not yet implemented. (Help welcome!)${reset}"
   fi

   if [ ! "$WHONIX_BUILD_INTERNALRUN" = "1" ]; then
      if [ ! "$WHONIX_BUILD_MAIN_SCRIPT_STARTED" = "1" ]; then
         if [ ! "$WHONIX_BUILD_BUILD" = "1" ] && [ ! "$WHONIX_BUILD_CLEAN" = "1" ]; then
            error "${red}${bold}You must either use --build or --clean.${reset}"
         fi
      fi
   fi

   if [ "$WHONIX_BUILD_ALL" = "1" ] && [ "$WHONIX_BUILD_GATEWAY" = "1" ]; then
      error "${red}${bold}You can not combine --all with --torgateway. You must either use --all or --torgateway.${reset}"
   fi

   if [ "$WHONIX_BUILD_ALL" = "1" ] && [ "$WHONIX_BUILD_WORKSTATION" = "1" ]; then
      error "${red}${bold}You can not combine --all with --torworkstation. You must either use --all or --torworkstation.${reset}"
   fi

   if [ "$WHONIX_BUILD_GATEWAY" = "1" ] && [ "$WHONIX_BUILD_WORKSTATION" = "1" ]; then
      error "${red}${bold}You can not combine --torgateway with --torworkstation. Use --all if that is what you want.${reset}"
   fi

   if [ "$WHONIX_BUILD_GATEWAY" = "1" ] || [ "$WHONIX_BUILD_WORKSTATION" = "1" ] || [ "$WHONIX_BUILD_ALL" = "1" ]; then
      true
   else
      error "${red}${bold}You must add --torgateway or --torworkstation or --all.${reset}"
   fi

   if [ "$BARE_METAL" = "1" ]; then
      true
   elif [ "$WHONIX_BUILD_VIRTUALBOX" = "true" ]; then
      true
   elif [ "$WHONIX_BUILD_QCOW2" = "true" ]; then
      true
   else
      error "${red}${bold}You must choose --bare-metal, --virtualbox or --qcow2.${reset}"
   fi
}
