#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x

error_handler_unmount-img() {
   true "${red}${bold}BASH_COMMAND${reset}: $BASH_COMMAND
${red}${bold}ERROR $0: | caller: $(caller)${reset}"
   exit 1
}

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source "$MYDIR"/pre
source "$MYDIR"/variables

unmount_img() {
   trap "error_handler_unmount-img" ERR INT TERM

   if [ "$mount_folder" = "" ]; then
      true
   else
      ## hack for help-steps/analyze-image
      CHROOT_FOLDER="$mount_folder"
   fi

   sync
   ## Sleep to work around some obscure bug.
   ## http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734794
   sleep 2 &
   wait "$!"
   sync
   umount "$CHROOT_FOLDER"
   sync

   if [ "$WHONIX_BUILD_MOUNT_IMG_FILE" = "" ]; then
      local img="$WHONIX_BINARY/$VMNAME.img"
   else
      local img="$WHONIX_BUILD_MOUNT_IMG_FILE"
   fi

   ## Sleep to work around some obscure bug.
   ## http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=734794
   sleep 2

   ## Debugging.
   losetup --all
   sync

   kpartx -d -s -v "$img"
   sync

   ## Debugging.
   losetup --all
   sync

   ## Delete temporary folder.
   ## It did not contain anything. It was only a mount point.
   rm -r "$CHROOT_FOLDER"
   sync
}


if [ "$BARE_METAL" = "1" ]; then
   true "${green}INFO: Skipping script, because BARE_METAL=1: $0${reset}"
   exit 0
else
   true "${bold}INFO: Currently running script: $0 ${1+"$@"}${reset}"
   unmount_img
   benchmark_time_end ## sets benchmark_took_time (implemented in help-steps/pre)
   true "${bold}INFO: End of: $0 No error detected. (benchmark: $benchmark_took_time)${reset}"
fi
