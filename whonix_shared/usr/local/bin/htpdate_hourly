#!/bin/bash

## Whonix /usr/local/bin/htpdate_hourly

## Useful for testing:
## run-parts /etc/cron.hourly/
## pgrep htpdate_hourly

set -x

## anacron runs this script every hour.
## Not exactly at hour:00:00, but somewhat predictible.
## We add a random delay before we run htpdate again,
## to prevent issuing leaving a clear network fingerprint.
## (Not always exactly at xx:yy:zz sending an request.)

## Create a random number between 0 and 3600.
##
## Thanks to
## http://linux.byexamples.com/archives/128/generating-random-numbers/
##
## One hour has 3600 seconds.
DELAY="$(( 100+(`od -An -N2 -i /dev/random` )%(3600-0+1) ))"

## Debugging:
#DELAY="30"
#echo "/usr/local/bin/htpdate_hourly: date: `date` | Sleeping for $DELAY seconds..." >> /home/user/htpdatelog

sleep "$DELAY"

## Debugging:
#echo "/usr/local/bin/htpdate_hourly: date: `date` | Restarting htpdate..." >> /home/user/htpdatelog

sudo -u user /usr/local/bin/timesync -cron

## Debugging:
#echo "/usr/local/bin/htpdate_hourly: date: `date` | Htpdate restarted. Sleeping for 60 seconds..." >> /home/user/htpdatelog
##
#sleep 60
##
#echo "/usr/local/bin/htpdate_hourly: date: `date` | Htpdate restarted. Clock should now be changed." >> /home/user/htpdatelog

exit 0

## End of Whonix /usr/local/bin/htpdate_hourly
