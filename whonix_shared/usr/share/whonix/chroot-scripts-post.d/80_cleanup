#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -o pipefail

error_handler() {
   echo "
###########################################################
## chroot script: ERROR detected. Please report this bug! #
###########################################################
"

   exit 1
}

trap "error_handler" ERR

own_filename="$(basename $0)"
for skip_script in $WHONIX_BUILD_SKIP_SCRIPTS; do
   if [ "$skip_script" = "$own_filename" ]; then
      true "INFO: Skipping $own_filename, because WHONIX_BUILD_SKIP_SCRIPTS includes it."
      exit 0
   fi
done
unset skip_script

maybe_run() {
   trap "error_handler" ERR

   local script basename_script package
   shopt -s nullglob dotglob

   for script in $1.prerm; do
      basename_script="$(basename "$script")"
      ## Example basename_script:
      ## libc6:i386.prerm
      package="$(echo "$basename_script" | tr ":" " " | awk '{print $1}')"
      ## Example package:
      ## libc6
      export DPKG_MAINTSCRIPT_PACKAGE="$package"
      if [ ! -e "$script" ]; then
         true "INFO: $script does not exist."
      elif [ ! -x "$script" ]; then
         true "INFO: $script not executable."
      else
         ## Example:
         ## /var/lib/dpkg/info/fontconfig.prerm remove
         "$script" remove
      fi
   done

   unset script basename_script package DPKG_MAINTSCRIPT_PACKAGE

   for script in $1.postrm; do
      basename_script="$(basename "$script")"
      ## Example basename_script:
      ## libc6:i386.prerm
      package="$(echo "$basename_script" | tr ":" " " | awk '{print $1}')"
      ## Example package:
      ## libc6
      export DPKG_MAINTSCRIPT_PACKAGE="$package"
      if [ ! -e "$script" ]; then
         true "INFO: $script does not exist."
      elif [ ! -x "$script" ]; then
         true "INFO: $script not executable."
      else
         ## Example:
         ## /var/lib/dpkg/info/fontconfig.postrm purge
         "$script" purge
      fi
   done

   unset script basename_script package DPKG_MAINTSCRIPT_PACKAGE

   shopt -u nullglob dotglob
}

echo "INFO: Cleaning up..."

## Kill dhclient3 to prevent rewrite of /var/lib/dhcp/*.
killall dhclient3 || true
## There are .leases.
rm /var/lib/dhcp/*.leases || true
## And there are .lease.
rm /var/lib/dhcp/*.lease || true
## We are best of deleting the whole folder.
rm -r /var/lib/dhcp/* || true

## Cleanup.
## || true to support re-running the script.
apt-get --yes autoremove --purge || true

## Get rid of /var/cache/apt/pkgcache.bin. (non-deterministic)
## || true to support re-running the script.
apt-get --yes clean || true

## No longer deleting /var/lib/tor. We install but forbid to run software such as Tor we install.
## Therefore /var/lib/tor should be empty.
## Ensure to delete /var/lib/tor. It contains sensitive stuff like the Tor consensus and the Tor entry guards.
## rm -r /var/lib/tor/* || true

## Delete logs and other stuff.
rm -r /tmp/* || true
rm /var/log/installer/* || true
rm -r /var/cache/apt/* || true
rm -r /var/lib/apt/lists/* || true
rm -r /var/log/installer || true
rm /var/lib/dpkg/*-old || true
rm /var/cache/debconf/*-old || true
## Erase rotated logs (usually wont appear unless you left your VM running for several days).
rm /var/log/*.[0-9] || true
rm /var/log/*.[0-9].gz || true

## non-deterministic [0]
## /var/lib/dpkg/available
## /var/lib/dpkg/available-old
dpkg --clear-avail
rm -f /var/lib/dpkg/available-old

## non-deterministic [1]
## /var/cache/fontconfig
## does not exist: /var/lib/dpkg/info/fontconfig.prerm remove
maybe_run /var/lib/dpkg/info/fontconfig

## non-deterministic [2]
## /var/cache/ldconfig/aux-cache
maybe_run /var/lib/dpkg/info/libc6*

## non-deterministic [3]
## /var/cache/man folder
maybe_run /var/lib/dpkg/info/man-db

## non-deterministic [14]
## /etc/xml/docbook-xsl.xml
## /var/lib/xml-core/docbook-xsl
maybe_run /var/lib/dpkg/info/docbook-xsl

## non-deterministic [7]
## /etc/xml/docbook-xml.xml
## /etc/xml/docbook-xml.xml.old
maybe_run /var/lib/dpkg/info/docbook-xml

## non-deterministic [5]
## /etc/xml/sgml-data
## /etc/xml/sgml-data.old
maybe_run /var/lib/dpkg/info/sgml-data

## non-deterministic [6]
## /var/lib/sgml-base/supercatalog
## /var/lib/sgml-base/supercatalog.old
maybe_run /var/lib/dpkg/info/sgml-base

## non-deterministic [4]
## /var/lib/xml-core folder
## /etc/xml/catalog
## /etc/xml/catalog.old
## /etc/xml/xml-core.xml
## /etc/xml/xml-core.xml.old
maybe_run /var/lib/dpkg/info/xml-core

## non-deterministic [8]
## There is no postrm script for the base-files package.
rm -f /usr/share/info/dir
rm -f /usr/share/info/dir.old ## no regeneration, since not required

## non-deterministic [9]
## /usr/lib/*/gdk-pixbuf*/*/loaders.cache
## ex: /usr/lib/i386-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders.cache
maybe_run /var/lib/dpkg/info/libgdk-pixbuf*

## non-deterministic [10]
## /usr/lib/i386-linux-gnu/gio/modules/giomodule.cache
maybe_run /var/lib/dpkg/info/libglib*

## non-deterministic [11]
## /usr/lib/i386-linux-gnu/*/*/immodules.cache
## /usr/lib/i386-linux-gnu/gtk-2.0/2.10.0/immodules.cache
## /usr/lib/i386-linux-gnu/gtk-3.0/3.0.0/immodules.cache
maybe_run /var/lib/dpkg/info/libgtk*

## non-deterministic [12]
## some /usr/lib/pymodules/python2.7/**/__init__.pyc
## does not exist: /var/lib/dpkg/info/python-support
maybe_run /var/lib/dpkg/info/python-support

## non-deterministic [13]
## /var/lib/gconf/defaults/%gconf-tree.xml
maybe_run /var/lib/dpkg/info/gconf2-common

## non-deterministic [14]
## /etc/init.d/.depend.boot
## /etc/init.d/.depend.start
## /etc/init.d/.depend.stop
## Recreate those and therefore hopefully come up with deterministic results.
##
## Only attempt to run `insserv` when it's installed. This ensures, that this
## works on CI systems (Ubuntu) and in modified Whonix versions as well.
if [ -x /sbin/insserv ]; then
   /sbin/insserv --showall
   /sbin/insserv --verbose
fi

## non-deterministic [15]
## /var/lib/urandom/random-seed
## This is no longer required for Debian Jessie?
rm --force /var/lib/urandom/random-seed

## non-deterministic [16]
## /etc/blkid.tab
## Although man blkid says /etc/blkid.tab is a cache file (and therefore should
## be rather in /var/cache) for historical reasons it is in /etc. Should be
## dispensable. (Gets automatically recreated if necessary.)
## Show the content of these files, just in case we ever need it for debugging.
## This is no longer required for Debian Jessie?
cat /etc/blkid.tab || true
cat /etc/blkid.tab.old || true
rm --force /etc/blkid.tab
rm --force /etc/blkid.tab.old

## non-deterministic [17]
## /etc/apt/trustdb.gpg
## Thanks to:
## https://unix.stackexchange.com/questions/110500/how-to-regenerate-etc-apt-trustdb-gpg-on-debian
## This is no longer required for Debian Jessie?
rm --force /etc/apt/trustdb.gpg

## Truncate all log files, keeping user groups and permissions.
find /var/log -type f -exec cp /dev/null {} \;

## This will not work in chroot.
## Take care of development leaks and make resulting ova image smaller.
## Since VBox export works below the FS level it will keep deleted files (and the ova will stay large).
## This also ensure that possible leaks we deleted before are really deleted.
#echo "INFO: Wiping free space. This can take a while."
## TODO CHROOT #dd if=/dev/zero of=/zerofile bs=1024 || true

## Flush the zero-file to disk before removing it.
sync

## Delete the zero-file.
rm /zerofile || true

## Flush again after rm.
sync

## Delete bash history.
rm "/home/$user_name/.bash_history" || true
history -c || true

sync
