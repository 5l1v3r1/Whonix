#!/bin/bash

# This file is part of Whonix
# Copyright (C) 2012 - 2013 adrelanos <adrelanos at riseup dot net>
# See the file COPYING for copying conditions.

## bash script fragment

TEMP_DIR_WHONIX_SCRIPT="$(mktemp --directory)"

[ -o xtrace ]
## returns:
## - 0, if -x is set
## - 1, if -x is not set
MINUS_X_SET="$?"

disable_echo() {
   exec 5>&1 >>"$TEMP_DIR_WHONIX_SCRIPT/output"
   exec 6>&2 2>>"$TEMP_DIR_WHONIX_SCRIPT/output"
}

enable_echo() {
   exec 1>&5
   exec 2>&6
}

if [ "$MINUS_X_SET" = "0" ]; then
   true "INFO: Setting WHONIX_DEB_DEBUG to 1, because -x is set."
   WHONIX_DEB_DEBUG="1"
fi

if [ "$WHONIX_DEB_DEBUG" = "1" ]; then
   set -x
   OUT_CMD_WHONIX_SCRIPT="true"
else
   OUT_CMD_WHONIX_SCRIPT="echo"
   disable_echo
fi

force_echo() {
   if [ ! "$WHONIX_DEB_DEBUG" = "1" ]; then
      enable_echo
   fi

   if [ ! "$WHONIX_DEB_DEBUG" = "1" ]; then
      echo "$@"
   fi
   ## No need to use "true" or "echo" in case WHONIX_DEB_DEBUG is set to 1,
   ## because in that case we saw the output anyway, because set -x was set.

   if [ ! "$WHONIX_DEB_DEBUG" = "1" ]; then
      disable_echo
   fi
}

error_handler() {
   local return_code="$?"
   local last_err="$BASH_COMMAND"

   if [ ! "$WHONIX_DEB_DEBUG" = "1" ]; then
      local output="$(cat "$TEMP_DIR_WHONIX_SCRIPT/output")"
   fi

   if [ "$output" = "" ]; then
      output="## See above."
   fi

   if [ ! "$WHONIX_DEB_DEBUG" = "1" ]; then
      exec 1>&5
      exec 2>&6
   fi

   force_echo "
#############################################################
## error:
$output
##
## postinst script: ERROR detected. Please report this bug! #
## scriptname: $0
## BASH_COMMAND: $BASH_COMMAND
## return_code: $return_code
#############################################################
" 1>&2

   exit 1
}

trap "error_handler" ERR

own_filename="$(basename $0)"
case $WHONIX_BUILD_SKIP_SCRIPTS in
   *$own_filename*) force_echo "INFO: Skipping $own_filename, because WHONIX_BUILD_SKIP_SCRIPTS includes it."
                    exit 0
                    ;;
esac
