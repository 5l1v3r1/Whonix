#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

#set -x
set -o pipefail

ICON="/usr/share/whonix/icons/timesync.ico"

SCRIPTNAME="$(basename $0)"
IDENTIFIER="timesync"
progressbaridx="$IDENTIFIER"
progressbaridx_main="$progressbaridx"

source /usr/lib/whonix/whonixcheck/help_error-handler
trap "error_handler" ERR

source /usr/lib/whonix/whonixcheck/help_parse-cmd-options
source /usr/lib/whonix/whonixcheck/10_preparation
source /usr/lib/whonix/whonixcheck/17_check_tor_enabled
source /usr/lib/whonix/whonixcheck/67_check_clock
source /usr/lib/whonix/whonixcheck/70_check-sdwdate

## Sourcing cleanup file, because signal trapping is implemented there.
source /usr/lib/whonix/whonixcheck/75_cleanup

timesync_pre_main() {
   trap "error_handler" ERR

   preparation ## 10_preparation
   parse_cmd_options "${1+"$@"}" ## help_parse-cmd-options

   $output ${output_opts[@]} --forget
   ## Sleep to prevent a race condition.
   sleep 2 &
   wait "$!"

   if [ "$FUNCTION" = "" ]; then
      true
   else
      $FUNCTION
      return 0
   fi

   ## returns: TOR_ENABLED
   check_tor_enabled_do ## 17_check_tor_enabled

   if [ "$TOR_ENABLED" = "0" ]; then
      true "TOR_ENABLED is 0. Whonixsetup has not been run yet. Exit 0, to prevent showing a progress bar before whonixsetup."
      exit 0
   fi

   ## The SDW_MODE variable gets set by /usr/bin/sdwdate.
   ## sdwdate is configured in /etc/sdwdate.d/31_timesync_plugin to run this
   ## script with the --mode $SDW_MODE parameter. The
   ## /usr/lib/whonix/whonixcheck/help_parse-cmd-options script parses --mode
   ## and sets the MODE variable.
   ##
   ## This will result in only showing a timesync progress bar (in X) and
   ## wait message (in CLI) after boot. It won't unnecessarily annoy the user
   ## with these messages in subsequent runs after boot. This is because, after
   ## boot, when the clock could still be wrong, it's important not to use the
   ## internet. But subsequent runs aren't that important, should the run fail,
   ## the user will be informed about the failure. In case it succeeded, there
   ## is nothing important to tell. (Interested ones could watch the logs.)
   if [ "$MODE" = "startup" ]; then
      ## Do not use < > inside zenity progress messages, zenity will mess that up.
      local MSG="Running Secure Network Time Synchronization (timesync)...
This will happen in background and if internet connectivity is functional it will take approximately 60 seconds.

If you like to watch the log, open a terminal and run:
    tail -f /var/log/sdwdate.log

For better anonymity, please do not use the internet in Whonix until timesync succeeded."
      $output ${output_opts[@]} --progressbaridx "$progressbaridx" --progressbarx --titlex "$TITLE" --message "$MSG" --done

      local MSG="Running Secure Network Time Synchronization (timesync)...
This will happen in background and if internet connectivity is functional it will take approximately 60 seconds.

If you like to watch the log, open a terminal and run:
    tail -f /var/log/sdwdate.log

For better anonymity, please do not use the internet in Whonix until timesync succeeded.
Please feel free to press <enter> to return back to your normal prompt."
      $output ${output_opts[@]} --waitmessagecli --typecli "info" --titlecli "$TITLE" --message "$MSG" --done
   else
      true "MODE: $MODE"
   fi

   check_bootclockrandomization ## 67_check_clock

   check_timesanitycheck ## 67_check_clock

   ## Not using cleanup. timesync_post_failure, timesync_post_success or timesync_post_error
   ## will keep care of that.
   #cleanup ## 75_cleanup
}

timesync_pre_main "${1+"$@"}"
