#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

#set -x
set -o pipefail

SCRIPTNAME="$(basename $0)"
IDENTIFIER="timesync"

source /usr/lib/whonix/whonixcheck/10_preparation
source /usr/lib/whonix/whonixcheck/17_check_tor_enabled
source /usr/lib/whonix/whonixcheck/19_2_1_check_package_manager_running
source /usr/lib/whonix/whonixcheck/19_2_check_tor_bootstrap

error_handler() {
   local return_code="$?"
   BUG="1"

   local MSG="\
BASH_COMMAND: $BASH_COMMAND
return_code: $return_code
"

   ## TODO: log.
}

timesync_prerequisite() {
   trap "error_handler" ERR

   if [ -f "/usr/share/whonix/whonix_gateway" ]; then
      VM="Whonix-Gateway"
   elif [ -f "/usr/share/whonix/whonix_workstation" ]; then
      VM="Whonix-Workstation"
   else
      VM="whonixcheck script could not determine if this is whonix_gateway or whonix_workstation. Please report this bug."
   fi

   ## Debugging.
   true "$FUNCNAME: CURL: $CURL"
   true "$FUNCNAME: LD_PRELOAD: $LD_PRELOAD"

   ## Somehow in rare cases libtorsocks is preloaded.
   ## Was the apt-get uwt wrapper.
   #export LD_PRELOAD=""

   ## Sets: TOR_ENABLED
   check_tor_enabled_do ## 17_check_tor_enabled

   if [ "$TOR_ENABLED" = "1" ]; then
      ## Ok.
      true
   else
      echo "Tor is disabled. Please enable Tor using whonixsetup. \
Start Menu -> Applications -> System -> whonixsetup - Connection Wizard or in Terminal: sudo whonixsetup"

      ## Exit 2, so sdwdate will wait until this has been fixed.
      exit "2"
   fi

   ## required by check_tor_bootstrap_helper
   VERIFY_TEMPDIR="$(mktemp --directory)"

   true "$FUNCNAME: CURL: $CURL"

   check_package_manager_running_helper ## 19_2_1_check_package_manager_running
   if [ "$apt_get_return" = "0" ]; then
      true "Package manager not busy, ok."
   else
      local MSG="A package manager is currently running. Waiting for it to finish..."

      ## Echo message, so sdwdate can integrate it into its log.
      echo "$MSG"

      ## Exit 2, so sdwdate will wait until this has been fixed.
      exit "2"
   fi

   ## sets: check_bootstrap_script
   ## sets: lastpid
   ## sets: check_tor_bootstrap_helper
   ## sets: TOR_BOOTSTRAP_TIME_START
   ## sets: TOR_BOOTSTRAP_TIME_NOW
   ## sets: TOR_BOOTSTRAP_TIME_PASSED
   ## sets: tor_bootstrap_percent
   ## sets: tor_bootstrap_status
   check_tor_bootstrap_helper ## 19_2_check_tor_bootstrap

   ## $tor_bootstrap_percent:
   ## `timeout` returns:
   ## - 124 if sigterm was sufficient
   ## - 137 if needed to use kill.

   if [ "$tor_bootstrap_percent" = "254" ]; then
      local MSG="Tor Bootstrap Result: \
/usr/lib/whonix/whonixcheck/help_check_tor_bootstrap.py ERROR ($tor_bootstrap_percent). Please report this bug!"
   elif [ "$tor_bootstrap_percent" = "255" ]; then
      if [ "$VM" = "Whonix-Gateway" ]; then
         local MSG="Tor Bootstrap Result: \
Tor's Control Port could not be reached. \
Please report this bug!"
      elif [ "$VM" = "Whonix-Workstation" ]; then
         local MSG="Tor Bootstrap Result: \
Tor's Control Port could not be reached. \
Did you start Whonix-Gateway beforehand? \
Please run whonixcheck on Whonix-Gateway."
      else
         local MSG="$FUNCNAME: This is neither Whonix-Gateway nor Whonix-Workstation. Please report this bug!"
      fi
   elif [ "$tor_bootstrap_percent" = "100" ]; then
      ## Only when manually testing this script using bash -x.
      local MSG="Tor fully bootstrapped."
   else
      local MSG="Tor is not yet fully bootstrapped. $tor_bootstrap_percent % done. Tor reports: $tor_bootstrap_status"
   fi

   if [ "$tor_bootstrap_percent" = "100" ]; then
      ## Ok.
      ## Exit 0, so sdwdate will continue.
      exit "0"
   else
      ## Echo message, so sdwdate can integrate it into its log.
      echo "$MSG"

      ## Exit 2, so sdwdate will wait until this has been fixed.
      exit "2"
   fi
}

timesync_prerequisite ${1+"$@"}
