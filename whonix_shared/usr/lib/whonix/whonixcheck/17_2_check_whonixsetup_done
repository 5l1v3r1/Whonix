#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

#set -x

check_whonixsetup_done_do() {
   trap "error_handler" ERR

   ## Check if /root/.whonix.d/35_aptrepository_autogenerated exists.
   ## There is an /etc/sudoers.d/ exception.
   local whonix_repo_r_config_exists_exit_code="0"
   sudo /usr/lib/whonix/whonix_repo_r_config_exists || { whonix_repo_r_config_exists_exit_code="$?" ; true; };
   if [ "$whonix_repo_r_config_exists_exit_code" = "0" ]; then
      ## /root/.whonix.d/35_aptrepository_autogenerated exists.
      ## whonixsetup already finished earlier, exit.
      whonixsetup_done="1"
      return 0
   elif [ "$whonix_repo_r_config_exists_exit_code" = "1" ]; then
      ## /root/.whonix.d/35_aptrepository_autogenerated does not exist.
      ## whonixsetup not finished yet, continue.
      whonixsetup_done="0"
   else
      ## Unexpected exit code.
      whonixsetup_done="-1"
      local MSG="\
/usr/lib/whonix/whonix_repo_r_config_exists exited $whonix_repo_r_config_exists_exit_code.
Please report this Whonix bug!"
      error "$MSG"
      return 0
   fi

   ## Fallback.
   whonixsetup_done="0"
   return 0
}

check_whonixsetup_done() {
   trap "error_handler" ERR

   ## sets: whonixsetup_done
   check_whonixsetup_done_do

   if [ "$whonixsetup_done" = "0" ]; then
      local MSG="Please close this window and finish whonixsetup!

    Start Menu -> Applications -> System -> Connection Wizard (Whonix)

    or in Terminal: sudo whonixsetup"

      if [ "$manualrun" = "1" ]; then
         $output ${output_opts[@]} --messagex --typex "warning" --titlex "$TITLE" --message "$MSG"
         $output ${output_opts[@]} --messagecli --typecli "warning" --titlecli "$TITLE" --message "$MSG"
      fi

      EXIT_CODE="1"
      cleanup "1"
      return 0
   else
      local MSG='Check whonixsetup Result: done, ok.'
      #$output ${output_opts[@]} --messagex --typex "info" --titlex "$TITLE" --message "$MSG"
      #$output ${output_opts[@]} --messagecli --typecli "info" --titlecli "$TITLE" --message "$MSG"
   fi
}
