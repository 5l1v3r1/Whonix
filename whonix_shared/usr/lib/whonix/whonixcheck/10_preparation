#!/bin/bash

# This file is part of Whonix
# Copyright (C) 2012 - 2013 adrelanos <adrelanos at riseup dot net>
# See the file COPYING for copying conditions.

## also used by timesync

whonixcheck_run_function() {
   trap "error_handler" ERR

   case $whonixcheck_skip_functions in
   *"${1+"$@"}"*) echo "INFO: Skipping ${1+"$@"}, because whonixcheck_skip_functions includes it."
                  return 0
                  ;;
   esac

   true "INFO: Running ${1+"$@"}, because whonixcheck_skip_functions does not include it."
   eval ${1+"$@"}
}

get_local_whonix_version() {
   trap "error_handler" ERR

   ## fallback
   whonix_deb_package_version="Could not read Whonix Deb Version File. (Code: 1) Please report this bug!"

   if [ -f "/usr/share/whonix/whonix_gateway" ]; then
      whonix_deb_package_version="$(dpkg-query --show --showformat='${Version}' "whonix-gateway-postinst")"
   elif [ -f "/usr/share/whonix/whonix_workstation" ]; then
      whonix_deb_package_version="$(dpkg-query --show --showformat='${Version}' "whonix-workstation-postinst")"
   fi

   ## Example: whonix_deb_package_version="2:6-debpackage1"

   ## Remove epoch from whonix_deb_package_version.
   whonix_deb_package_version="$(echo "$whonix_deb_package_version" | awk -F ":" '{ print $2 }')"

   ## Example: whonix_deb_package_version="6-debpackage1"

   ## fallback
   if [ "$whonix_deb_package_version" = "" ]; then
      whonix_deb_package_version="Could not read Whonix Deb Version File. (Code: 2) Please report this bug!"
   fi

   ## fallback
   whonix_build_version="Could not read Whonix Build Version File. (Code: 1) Please report this bug!"

   if [ -f "/usr/share/whonix/build_version" ]; then
      whonix_build_version="$(cat "/usr/share/whonix/build_version")"
   fi

   ## fallback
   if [ "$whonix_build_version" = "" ]; then
      whonix_build_version="Could not read Whonix Build Version File. (Code: 2) Please report this bug!"
   fi
}

preparation() {
   trap "error_handler" ERR

   if [ -e "/var/run/whonix/whonixcheck/${IDENTIFIER}_pid" ]; then
      local oldpid="$(cat "/var/run/whonix/whonixcheck/${IDENTIFIER}_pid")"
      kill -15 "$oldpid" > /dev/null 2>&1 || true
      kill -9 "$oldpid" > /dev/null 2>&1 || true
   fi

   rm --force "/var/run/whonix/whonixcheck/${IDENTIFIER}_done"
   rm --force "/var/run/whonix/whonixcheck/${IDENTIFIER}_recently_run"
   sudo -u user touch "/var/run/whonix/whonixcheck/${IDENTIFIER}_running"
   echo "$$" | sudo -u user tee "/var/run/whonix/whonixcheck/${IDENTIFIER}_pid" > /dev/null

   sync

   if [ "$display" = "" ]; then
      if [ "$DISPLAY" = "" ]; then
         display=":0"
      else
         display="$DISPLAY"
      fi
   fi

   local tty="$(tty)"

   ## hack
   ## Otherwise "not a tty" would not be correctly quoted.
   if [ "$tty" = "not a tty" ]; then
      local tty="none"
   fi

   output="/usr/lib/whonix/msgcollector"

   output_opt_1="--icon $ICON"
   output_opt_2="--parentpid $$"
   output_opt_3="--identifier $IDENTIFIER"
   output_opt_4="--parenttty $tty"
   #output_opt_5="--verbose"

   output_opts=( "$output_opt_1" "$output_opt_2" "$output_opt_3" "$output_opt_4" "$output_opt_5")

   if [ "$IDENTIFIER" = "whonixcheck" ]; then
      ## Expand output_opts.
      output_opt_extra_1="--lefttop"
      temp=( "$output_opt_extra_1" )
      output_opts=( "${output_opts[@]}" "$temp")
   fi

   USERNAME="user"
   WHONIX_HOMEPAGE="https://www.whonix.org"
   VERIFY_TEMPDIR="$(mktemp --directory)"

   ## returns: whonix_deb_package_version
   get_local_whonix_version

   ## Prepare temporary directory.
   mkdir --parents "$VERIFY_TEMPDIR"
   chmod 700 "$VERIFY_TEMPDIR"

   if [ -f "/usr/share/whonix/whonix_gateway" ]; then
      VM="Whonix-Gateway"
      vm_lower_case_short="gateway"
      GATEWAY_IP="127.0.0.1"
   elif [ -f "/usr/share/whonix/whonix_workstation" ]; then
      VM="Whonix-Workstation"
      vm_lower_case_short="workstation"
      GATEWAY_IP="192.168.0.10"
   else
      VM="whonixcheck script could not determine if this is whonix_gateway or whonix_workstation. Please report this bug."
      vm_lower_case_short="error"
      GATEWAY_IP="192.168.0.10"
   fi

   if [ -f "/etc/apt/sources.list.d/whonix.list" ]; then
      ## Fallback
      whonix_codename="unknown"

      local i
      while read i; do
         local first second third fourth
         read -r first second third fourth _ <<< "$i"
         if [ "$first" = "deb" ]; then
            whonix_codename="$third"
            break
         fi
      done < "/etc/apt/sources.list.d/whonix.list"

   else
      whonix_codename="No"
   fi

   whonix_codename_uppercase="${whonix_codename^^}"

   if [ "$DAEMON" = "1" ]; then
      true
   elif [ "$AUTOSTARTED" = "1" ]; then
      true
   else
      manualrun="1"
   fi

   ## ARCH="x86_64"
   ## ARCH="i686"
   ARCH="$(uname --machine)"

   TITLE="$IDENTIFIER | $VM | $whonix_deb_package_version | $(date)"

   for i in /etc/whonix.d/*; do
      if [ -f "$i" ]; then
         ## If the last character is a ~, ignore that file,
         ## because it was created by some editor,
         ## which creates backup files.
         if [ "${i: -1}" = "~" ]; then
            continue
         fi
         ## Skipping files such as .dpkg-old and .dpkg-dist.
         if ( echo "$i" | grep -q ".dpkg-" ); then
            true "skip $i"
            continue
         fi
         source "$i"
      fi
   done

   TIME_START="$(date +%s)"
}
