#!/bin/bash

# This file is part of Whonix
# Copyright (C) 2012 - 2013 adrelanos <adrelanos at riseup dot net>
# See the file COPYING for copying conditions.

check_tor_bootstrap() {
   trap "error_handler" ERR

   ## Small check if Control Port Filter Proxy is functional.
   ## Only testing on Whonix-Gateway, because Control Port Filter Proxy only
   ## runs on Whonix-Gateway.
   local i="0"
   if [ "$VM" = "Whonix-Gateway" ]; then
      while [ ! -f "/var/run/controlportfilt/ownrunning" ]; do
         local i="$(expr "$i" + "1")" || true
         if [ "$i" -ge "30" ]; then
            break
         fi
         sleep "1" &
         wait "$!"
      done
      if [ ! -f "/var/run/controlportfilt/ownrunning" ]; then
         local MSG="Control Port Filter Proxy Test Result:
File /var/run/controlportfilt/ownrunning does not exist. Please report this Whonix bug!"
         $output ${output_opts[@]} --channel "both" --type "error" --title "$TITLE" --message "$MSG"
         EXIT_CODE="1"
         cleanup "1"
         return 0
      else
         local MSG="Control Port Filter Proxy Test Result: OK"
      fi
   fi

   local kill_after="5s"
   local timeout_after="5s"
   local script="/usr/lib/whonix/whonixcheck/help_check_tor_bootstrap.py"

   ## Sometimes it does not work on the first run. Small hack.
   local bootstrap_file="$VERIFY_TEMPDIR/tor_bootstrap_temp"
   local temp_return="0"
   timeout --kill-after="$kill_after" "$timeout_after" "$script" 2>&1 >"$bootstrap_file" &
   wait "$!" || { local temp_return="$?" ; true; }

   if [ -f "$bootstrap_file" ]; then
      local temp_status="$(cat "$bootstrap_file")"
      if [ "$temp_status" = "" ]; then
         local temp_status="ERROR: Variable temp_status is empty. Please report this Whonix bug!"
      fi
   else
      local temp_status="ERROR: File "$bootstrap_file" does not exist. Please report this Whonix bug!"
   fi

   if [ "$TOR_BOOTSTRAP_TIME_START" = "" ]; then
      TOR_BOOTSTRAP_TIME_START="$(date +%s)"
   fi
   TOR_BOOTSTRAP_TIME_NOW="$(date +%s)"
   TOR_BOOTSTRAP_TIME_PASSED="$(expr "$TOR_BOOTSTRAP_TIME_NOW" - "$TOR_BOOTSTRAP_TIME_START")" || true

   local bootstrap_file="$VERIFY_TEMPDIR/tor_bootstrap_file"
   tor_bootstrap_percent="0"
   timeout --kill-after="$kill_after" "$timeout_after" "$script" 2>&1 >"$bootstrap_file" &
   wait "$!" || { tor_bootstrap_percent="$?" ; true; }

   if [ -f "$bootstrap_file" ]; then
      tor_bootstrap_status="$(cat "$bootstrap_file")"
      if [ "$tor_bootstrap_status" = "" ]; then
         tor_bootstrap_status="ERROR: Variable tor_bootstrap_status is empty. Please report this Whonix bug!"
      fi
   else
      tor_bootstrap_status="ERROR: File $bootstrap_file does not exist. Please report this Whonix bug!"
   fi

   ## `timeout` returns:
   ## - 124 if sigterm was sufficient
   ## - 137 if needed to use kill.

   local MSG="tor_bootstrap_percent: $tor_bootstrap_percent"
   #$output ${output_opts[@]} --channel "debug" --type "info" --title "$TITLE" --message "$MSG"
   local MSG="tor_bootstrap_status: $tor_bootstrap_status"
   #$output ${output_opts[@]} --channel "debug" --type "info" --title "$TITLE" --message "$MSG"

   if [ "$tor_bootstrap_percent" = "255" ] || [ "$tor_bootstrap_percent" = "124" ] || [ "$tor_bootstrap_percent" = "137" ]; then
      if [ "$VM" = "Whonix-Gateway" ]; then
         local MSG="Tor Bootstrap Result:
Tor's Control Port could not be reached. (Code: "$tor_bootstrap_percent")
(tor_bootstrap_status: $tor_bootstrap_status)
Please report this Whonix bug!"
      elif [ "$VM" = "Whonix-Workstation" ]; then
         local MSG="Tor Bootstrap Result:
Tor's Control Port could not be reached. (Code: "$tor_bootstrap_percent")
(tor_bootstrap_status: $tor_bootstrap_status)
Did you start Whonix-Gateway beforehand?
Please run whonixcheck on Whonix-Gateway."
      else
         local MSG="$FUNCNAME: This is neither Whonix-Gateway nor Whonix-Workstation. Please report this Whonix bug!"
      fi
      $output ${output_opts[@]} --channel "both" --type "error" --title "$TITLE" --message "$MSG"
      EXIT_CODE="1"
      cleanup "1"
      return 0
   fi

   if [ "$tor_bootstrap_percent" -gt "100" ] || [ "$tor_bootstrap_percent" -lt "0" ]; then
      local MSG="Tor Bootstrap Result:
"$script" ERROR ($tor_bootstrap_percent).
(tor_bootstrap_status: $tor_bootstrap_status)
Please report this Whonix bug!"
      $output ${output_opts[@]} --channel "both" --type "error" --title "$TITLE" --message "$MSG"
      EXIT_CODE="1"
      cleanup "1"
      return 0
   fi

   if [ "$tor_bootstrap_percent" = "100" ]; then
      local MSG="Tor Bootstrap Result: Connected to Tor."
      $output ${output_opts[@]} --channel "both" --type "info" --title "$TITLE" --message "$MSG"
      return 0
   fi

   if [ "$TOR_BOOTSTRAP_TIME_PASSED" -lt "60" ]; then
      if [ "$tor_bootstrap_percent" -lt "100" ]; then
         if [ "$PROGRESS" = "" ]; then
            PROGRESS="5"
         fi
         PROGRESS="$(expr $PROGRESS + 1)" || true

         if [ "$TOR_BOOTSTRAP_PERCENT_OLD" = "" ]; then
            TOR_BOOTSTRAP_PERCENT_OLD="$tor_bootstrap_percent"
         fi

         if [ "$TOR_BOOTSTRAP_PERCENT_OLD" = "$tor_bootstrap_percent" ]; then
            ## no progress has been made
            TOR_BOOTSTRAP_PERCENT_OLD="$tor_bootstrap_percent"

            local MSG="Tor Bootstrap Result: Bootstrapping for $TOR_BOOTSTRAP_TIME_PASSED seconds. $tor_bootstrap_percent % done. Tor reports: $tor_bootstrap_status"
            $output ${output_opts[@]} --channel "echo" --type "info" --title "$TITLE" --message "$MSG"

            $output ${output_opts[@]} --progress "$PROGRESS"

            sleep "2" &
            wait "$!" || true

            check_tor_bootstrap
            return 0
         else
            ## progress has been made
            TOR_BOOTSTRAP_PERCENT_OLD="$tor_bootstrap_percent"

            local MSG="Tor Bootstrap Result: Bootstrapping $TOR_BOOTSTRAP_TIME_PASSED seconds. Progress has been made. $tor_bootstrap_percent % done. Tor reports: $tor_bootstrap_status"
            $output ${output_opts[@]} --channel "echo" --type "info" --title "$TITLE" --message "$MSG"

            $output ${output_opts[@]} --progress "$PROGRESS"

            sleep "2" &
            wait "$!" || true

            check_tor_bootstrap
            return 0
         fi
      fi
   fi

   if [ "$VM" = "Whonix-Gateway" ]; then

      local MSG="\
Tor Bootstrap Result:
Whonixcheck gave up waiting after $TOR_BOOTSTRAP_TIME_PASSED seconds.
Bootstrapping $tor_bootstrap_percent % done.
Tor reports: $tor_bootstrap_status

Possible issues:
- Is the host's internet connection working?
- Whonix-Gateway will need a few moments for bootstrapping the Tor network.
- Do you live in a censored area?

Recommendations:

1)
Shut down Whonix and try to get the Tor Browser Bundle from https://www.torproject.org working on your host. If you can not get the Tor Browser Bundle to work, you will most certainly not get Whonix to work either.

The Tor Browser Bundle is great for testing if you live in a censored area. If you need bridges for the Tor Browser Bundle, you will need them for Whonix as well.

2)
Try again: Start menu -> Applications -> System -> Whonix Check
           or in Terminal: whonixcheck
           or in Terminal with debugging: bash -x whonixcheck --verbose

3)
Use arm, connection page two, to see if Tor is connected:
   Start menu -> Applications -> System -> Arm
   or in Terminal: armwrapper"

   elif [ "$VM" = "Whonix-Workstation" ]; then

      local MSG="\
Tor Bootstrap Result:
Whonixcheck gave up waiting after $TOR_BOOTSTRAP_TIME_PASSED seconds.
Bootstrapping $tor_bootstrap_percent % done.
Tor reports: $tor_bootstrap_status.

Possible issues:
- Is the host's internet connection working?
- Whonix-Gateway will need a few moments for bootstrapping the Tor network.
- Did you start Whonix-Gateway beforehand?

Recommendations:

1)
Try again: Start menu -> Applications -> System -> Whonix Check
           or in Terminal: whonixcheck
           or in Terminal with debugging: bash -x whonixcheck --verbose

2)
Run whonixcheck on Whonix-Gateway as well."

   else

      local MSG="$FUNCNAME: This is neither Whonix-Gateway nor Whonix-Workstation. Please report this Whonix bug!"

   fi

   $output ${output_opts[@]} --channel "both" --type "error" --title "$TITLE" --message "$MSG"
   EXIT_CODE="1"
   cleanup "1"
   return 0
}
