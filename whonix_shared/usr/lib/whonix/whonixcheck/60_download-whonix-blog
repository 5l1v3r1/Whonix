#!/bin/bash

download_important_blog() {
   trap "error_handler" ERR

   BLOG_NAME="Whonix Important Blog"
   BLOG_URL="https://anonymousoperatingsystem.wordpress.com/category/important/feed/"
   RAWDOG_CONFIG="/etc/whonixcheck_rawdog/importantblog.conf"
   FEED_FILE="/var/lib/whonix/whonixcheck/importantblog.feed"
   
   BLOG_SUCCESS=0
  
   download_blog
   parse_blog
}

download_feature_blog() {
   trap "error_handler" ERR

   BLOG_NAME="Whonix Feature Blog"
   BLOG_URL="https://anonymousoperatingsystem.wordpress.com/feed/"
   RAWDOG_CONFIG="/etc/whonixcheck_rawdog/featureblog.conf"
   FEED_FILE="/var/lib/whonix/whonixcheck/featureblog.feed"
  
   download_blog
   parse_blog
}

download_blog() {
   trap "error_handler" ERR

   local MSG="Whonix Blog Download: Downloading "$BLOG_NAME"..."
   output "--info" "$MSG" "echo"

   rm -f "$FEED_FILE"
   
   local DOWNLOAD_BLOG_RETURN="0"

   ## --tlsv1 --proto =https \
   
   $CURL \
      $CURL_VERBOSE \
      --socks5-hostname socks5h://"$GATEWAY_IP":"$SOCKS_PORT_WHONIX_NEWS"/ \
      --max-time 180 \
      --location \
      --output "$FEED_FILE" \
      "$BLOG_URL" \
      || { local DOWNLOAD_BLOG_RETURN="$?" ; true; };
      
   if [ "$DOWNLOAD_BLOG_RETURN" = "0" ]; then
      return 0
   fi

   local MSG="Whonix Blog Download Result: Could not download "$BLOG_NAME". (curl return code: "$DOWNLOAD_BLOG_RETURN")"
   output "--error" "$MSG" "both"
}

parse_blog() {
   trap "error_handler" ERR

   ## rawdog unfortunately always requires a config file in /home/$user/.rawdog/config,
   ## see man rawdog.
   cp /etc/whonixcheck_rawdog/config /home/rawdog/.rawdog/config
   
   ## rawdog default config file suggest to place a style.css in the same folder as the
   ## output file.
   cp /etc/whonixcheck_rawdog/style.css /var/lib/whonix/whonixcheck/
   
   ## Delete the style file, because we use curl to download the feed and
   ## our own interval anyway. Maybe not necessary.
   rm -f /home/rawdog/.rawdog/state

   local RAWDOG_RETURN="0"
   
   sudo -u rawdog $RAWDOG \
      --config "$RAWDOG_CONFIG" \
      $RAWDOG_VERBOSE \
      --update \
      --write \
      || { local RAWDOG_RETURN="$?" ; true; };

   if [ "$RAWDOG_RETURN" = "0" ]; then
      BLOG_SUCCESS="$(expr "$BLOG_SUCCESS" + 1)"
      
      ## Lets make just one success message, not two.
      if [ "$BLOG_SUCCESS" = "2" ]; then   
         local MSG="Whonix Blog Download Result: Success."
         output "--info" "$MSG" "both"
         return 0
      fi
   else
      local MSG="Whonix Blog Download Result: Could not parse "$BLOG_NAME". (rawdog return code: "$RAWDOG_RETURN")"
      output "--error" "$MSG" "both"
   fi
}

