#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

set -x
set -o pipefail

## NOTE:
## /usr/share/whonix/postinst.d/70_legacy prevents this script from getting run
## on older versions not supporting the verifiable builds feature.

error_handler() {
   ## Debugging.
   true "WARNING: exited with non-zero exit code: $?"
}

trap "error_handler" ERR

if [ "$(id -u)" != "0" ]; then
    echo "ERROR: This must be run as root (sudo)!"
    exit 1
else
    true "INFO: Script running as root."
fi

export DEBIAN_FRONTEND="noninteractive"

## {{{ /var/lib/whonix/initial-packages

install_initial_packages() {
   trap "error_handler" ERR

   shopt -s nullglob dotglob

   for file_name in "/var/lib/whonix/initial-packages/"*; do
      ## Example file_name:
      ## /var/lib/whonix/initial-packages/nano_2.2.6-1+b1_i386.deb
      file_basename="$(basename "$file_name")"
      ## Example file_name:
      ## nano_2.2.6-1+b1_i386.deb
      package="$(echo "$file_basename" | tr "_" " " | awk '{print $1}')"
      ## Example package:
      ## nano
      dpkg_status="$(dpkg-query --show --showformat='${db:Status-Abbrev}' "$package")"
      ## Example dpkg_status:
      ## ii
      status_second_char="${dpkg_status:1:1}"
      ## Example status_second_char:
      ## i
      if [ "$status_second_char" = "i" ]; then
         ## Installed. Reinstall...
         true "INFO: Reinstalling $package ($file_name)..."
         dpkg --install "$file_name"
      else
         ## Not installed. Skipping.
         true "INFO: $package ($file_name) not installed, skipping."
      fi
   done

   shopt -u nullglob dotglob
}

## Deactivated for now. Let's see if we can substitute that we dpkg.
#install_initial_packages

## Using a simpler method to install initial packages.
## Leaving dependency resolution to dpkg.
##
## Modifications comment:
## It has a little disadvantage, it may re-install packages, which have been
## uninstalled by advanced users between running chroot-post.d scripts and
## finalizing/importing the image. It should not hinder creation modifications
## of Whonix, because in the cleanup chroot-post.d script, we do not download
## packages (for later re-installation at this point), which are not installed
## at that point.
dpkg --install "/var/lib/whonix/initial-packages/"*

## This may not be necessary.
## Re-running the same command, so we can see in the log, if it runs without
## any warnings the second time.
dpkg --install "/var/lib/whonix/initial-packages/"*

## }}}

## {{{ dpkg-reconfigure

#cp --preserve --verbose /usr/share/whonix/policy-rc.d /usr/sbin/policy-rc.d

#dpkg-reconfigure --force --all

#rm --verbose --force /usr/sbin/policy-rc.d

## }}}

## non-deterministic [14]
## /etc/init.d/.depend.boot
## /etc/init.d/.depend.start
## /etc/init.d/.depend.stop
if [ -x /sbin/insserv ]; then
   /sbin/insserv --showall
   /sbin/insserv --verbose
fi

## non-deterministic [17]
## /etc/apt/trustdb.gpg
## Thanks to:
## https://unix.stackexchange.com/questions/110500/how-to-regenerate-etc-apt-trustdb-gpg-on-debian
## This is no longer required for Debian Jessie?
apt-key update

dpkg --configure -a

## exit 0 would not be required, but that makes it easier to check the last
## command in the log using a script.
exit 0
