#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## Whonix /usr/lib/whonix/ram_adjusted_desktop_starter

## This script gets run by the /etc/profile.d/80_desktop.sh hook.

## Using this script and not directly using /etc/profile.d/80_desktop.sh
## because /etc/profile.d/80_desktop.sh gets sourced, so return would have to
## be used and exit would not be available (without stopping /etc/profile to
## source the /etc/profile.d/. Using this script has also the advantage, that
## /bin/bash's features can be used.

#set -x
set -o pipefail

error_handler_rads() {
   echo "[${red}${bold}ERROR${reset}] [RAM Adjusted Desktop Starter] \
ret: $? | BASH_COMMAND: $BASH_COMMAND | Please report this Whonix bug!"
}

trap "error_handler_rads" ERR

sigterm_rads() {
   #echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] SIGTERM received!"
   true "INFO: [RAM Adjusted Desktop Starter] SIGTERM received!"
}

trap "sigterm_rads" SIGTERM
trap "sigterm_rads" SIGINT

colors() {
   trap "error_handler_rads" ERR

## Thanks to:
## http://mywiki.wooledge.org/BashFAQ/037
## Variables for terminal requests.
[[ -t 2 ]] && {
    alt=$(      tput smcup  || tput ti      ) # Start alt display
    ealt=$(     tput rmcup  || tput te      ) # End   alt display
    hide=$(     tput civis  || tput vi      ) # Hide cursor
    show=$(     tput cnorm  || tput ve      ) # Show cursor
    save=$(     tput sc                     ) # Save cursor
    load=$(     tput rc                     ) # Load cursor
    bold=$(     tput bold   || tput md      ) # Start bold
    stout=$(    tput smso   || tput so      ) # Start stand-out
    estout=$(   tput rmso   || tput se      ) # End stand-out
    under=$(    tput smul   || tput us      ) # Start underline
    eunder=$(   tput rmul   || tput ue      ) # End   underline
    reset=$(    tput sgr0   || tput me      ) # Reset cursor
    blink=$(    tput blink  || tput mb      ) # Start blinking
    italic=$(   tput sitm   || tput ZH      ) # Start italic
    eitalic=$(  tput ritm   || tput ZR      ) # End   italic
[[ $TERM != *-m ]] && {
    red=$(      tput setaf 1|| tput AF 1    )
    green=$(    tput setaf 2|| tput AF 2    )
    yellow=$(   tput setaf 3|| tput AF 3    )
    blue=$(     tput setaf 4|| tput AF 4    )
    magenta=$(  tput setaf 5|| tput AF 5    )
    cyan=$(     tput setaf 6|| tput AF 6    )
}
    white=$(    tput setaf 7|| tput AF 7    )
    default=$(  tput op                     )
    eed=$(      tput ed     || tput cd      )   # Erase to end of display
    eel=$(      tput el     || tput ce      )   # Erase to end of line
    ebl=$(      tput el1    || tput cb      )   # Erase to beginning of line
    ewl=$eel$ebl                                # Erase whole line
    draw=$(     tput -S <<< '   enacs
                                smacs
                                acsc
                                rmacs' || { \
                tput eA; tput as;
                tput ac; tput ae;         } )   # Drawing characters
    back=$'\b'
} 2>/dev/null ||:
}

maybe_start_whonixsetup() {
   trap "error_handler_rads" ERR

   ## Checking if Tor has been enabled.
   ## (For now, always 1 (yes) on Whonix-Workstation, so is skipped on Whonix-Workstation.)
   ## And if Tor has not been enabled, auto start whonixsetup.
   ## This function only gets called, if we are not booting into a graphical desktop environment.
   ## Eventually auto starting whonixsetup in a graphical desktop environment is implemented
   ## through /etc/xdg/...

   source /usr/lib/whonix/whonixcheck/17_check_tor_enabled

   ## disable trap /usr/lib/whonix/whonixcheck/17_check_tor_enabled may have enabled
   trap "error_handler_rads" ERR

   ## Check if Tor is enabled.
   ## returns: TOR_ENABLED
   check_tor_enabled_do

   ## disable trap of check_tor_enabled_do
   trap "error_handler_rads" ERR

   if [ "$TOR_ENABLED" = "0" ]; then
      ## Sleep, so the following message comes after "waiting for results from timesync"
      ## and to prevent the background message "waiting for results from timesync" from
      ## interfering with whonixsetup.
      sleep 5 &
      wait "$!" || true

      echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Tor has not been enabled yet. Starting whonixsetup..."

      ## Sleep just for the look and feel, so the following message comes after, so the previous
      ## message can be read.
      sleep 5 &
      wait "$!" || true

      ## This has a sudoers exception in /etc/sudoers.d/whonixsetup.
      sudo /usr/bin/whonixsetup
   fi
}

ram-adjusted-desktop-starter() {
   trap "error_handler_rads" ERR

   for i in "/etc/whonix.d/"*; do
      if [ -f "$i" ]; then
         ## If the last character is a ~, ignore that file,
         ## because it was created by some editor,
         ## which creates backup files.
         if [ "${i: -1}" = "~" ]; then
            continue
         fi
         ## Skipping files such as .dpkg-old and .dpkg-dist.
         if ( echo "$i" | grep -q ".dpkg-" ); then
            true "skip $i"
            continue
         fi
         source "$i"
      fi
   done

   ## Sanity Tests, Defaults, Debugging
   if [ -z "$whonixdesktop_debug" ]; then
      whonixdesktop_debug="0"
   fi
   if [ "$whonixdesktop_debug" = "1" ]; then
      set -x
   fi
   if [ -z "$x_default_dm_config_file" ]; then
      x_default_dm_config_file="/etc/X11/default-display-manager"
   fi
   if [ -z "$whonixdesktop_display_manager" ]; then
      if [ -f "$x_default_dm_config_file" ]; then
         whonixdesktop_display_manager="$(basename "$(cat "$x_default_dm_config_file")")"
         if [ "$whonixdesktop_display_manager" = "" ]; then
            whonixdesktop_display_manager="kdm"
         fi
      else
         whonixdesktop_no_x_default_dm="1"
      fi
   fi
   if [ -z "$whonixdesktop_minium_ram" ]; then
      whonixdesktop_minium_ram="500"
   fi
   if [ -z "$whonixdesktop_start_display_manager" ]; then
      whonixdesktop_start_display_manager="1"
   fi
   if [ -z "$whonixdesktop_skip_ram_test" ]; then
      whonixdesktop_skip_ram_test="0"
   fi
   if [ -z "$whonixdesktop_wait" ]; then
      whonixdesktop_wait="1"
   fi
   if [ -z "$whonixdesktop_wait_seconds" ]; then
      whonixdesktop_wait_seconds="10"
   fi
   if [ -z "$whonixdesktop_autostart_decision_feature" ]; then
      whonixdesktop_autostart_decision_feature="1"
   fi

   if [ ! "$whonixdesktop_autostart_decision_feature" = "1" ]; then
      if [ "$whonixdesktop_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] whonixdesktop_autostart_decision_feature is not set to 1, doing nothing."
      fi
      exit 0
   fi

   ## {{ Expand PATH variable. Otherwise for example "/usr/sbin/lightdm" could
   ## not be detected below using "command -v".
   PATH_OLD="$PATH"
   PATH="$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
   export PATH
   ## }}

   command_v_exit_code="0"
   command -v "$whonixdesktop_display_manager" >/dev/null || { command_v_exit_code="$?" ; true; };

   if [ ! "$command_v_exit_code" = "0" ]; then
      if [ "$whonixdesktop_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] display manager \
$whonixdesktop_display_manager configured in /etc/whonix.d/ \
configuration folder does not exist. Not starting a desktop environment."
      fi
      maybe_start_whonixsetup
      exit 0
   fi

   if [ "$whonixdesktop_no_x_default_dm" = "1" ]; then
      if [ "$whonixdesktop_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] config file \
$x_default_dm_config_file \
does not exist. Probably no desktop environment installed. Not starting a desktop environment."
      fi
      maybe_start_whonixsetup
      exit 0
   fi

   service_1_exit_code="0"
   ## There is a /etc/sudoers.d/kdm exception for this.
   sudo service "$whonixdesktop_display_manager" status >/dev/null || { service_1_exit_code="$?" ; true; };

   if [ "$service_1_exit_code" = "0" ]; then
      if [ "$whonixdesktop_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] \
Not starting kdm, already running."
      fi
      exit 0
   fi

   if [ "$whonixdesktop_debug" = "1" ]; then
      temp="INFO: [RAM Adjusted Desktop Starter] $(/bin/date) | \
      whoami: $(/usr/bin/whoami) | caller: $0 | path: $PATH"
      true "$temp"
      echo "$temp" >> ~/whonixdesktop
      chown --recursive user:user ~/whonixdesktop
      chmod --recursive g+w ~/whonixdesktop
      chmod --recursive o+w ~/whonixdesktop
   fi

   ## Check how much RAM the system has in total.
   ## Thanks to:
   ## http://stackoverflow.com/a/10277712
   total_ram="$(free -m | sed  -n -e '/^Mem:/s/^[^0-9]*\([0-9]*\) .*/\1/p')"

   if [ "$whonixdesktop_start_display_manager" = "0" ]; then
      if [ "$whonixdesktop_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] \
whonixdesktop_start_display_manager is set to 0 in /etc/whonix.d/ \
configuration folder, not starting a desktop environment."
      fi
      maybe_start_whonixsetup
      exit 0
   fi

   if [ ! "$whonixdesktop_skip_ram_test" = "1" ]; then
      if [ "$total_ram" -lt "$whonixdesktop_minium_ram" ]; then
         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Not starting login manager \
(graphical desktop environment) ($whonixdesktop_display_manager), \
because there is only $total_ram MB total RAM. (A minimum of \
$whonixdesktop_minium_ram MB total RAM is configured in /etc/whonix.d/ \
configuration folder.)"
         maybe_start_whonixsetup
         exit 0
      fi
   fi

   if [ "$whonixdesktop_wait" = "0" ]; then
      if [ "$whonixdesktop_debug" = "1" ]; then
         true "INFO: Waiting feature disabled."
      fi
   else
      echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Starting login manager \
(graphical desktop environment) $whonixdesktop_display_manager in \
$whonixdesktop_wait_seconds seconds, unless you abort using ctrl + c. \
This can be disabled or configured in /etc/whonix.d/ configuration folder."
   fi

   if [ -e "/usr/share/whonix/whonix_gateway" ]; then
      echo "If your host has little RAM, you are advised to reduce Whonix-Gateway \
RAM to 128 MB. No graphical desktop environment will be started in that case. \
A Whonix-Gateway without graphical desktop environment works as good as one with, \
it's just not that convenient. If you want, you can sometimes start a graphical \
desktop environment and sometimes only a terminal by toggling how much RAM is \
available to Whonix-Gateway. Documentation about this feature can be found \
here: https://www.whonix.org/wiki/Desktop"
   fi

   ## Fallback.
   sleep_1_exit_code="0"

   ## Returns 0, if sleep was not terminated (CTRL + C not pressed) , otherwise 1.
   ## This is implemented in a separate script, because `sh` does not support `trap`s.
   sleep "$whonixdesktop_wait_seconds" &
   wait "$!" || { sleep_1_exit_code="$?" ; true; };

   if [ "$sleep_1_exit_code" = "0" ]; then
      service_2_exit_code="0"
      ## There is a /etc/sudoers.d/kdm exception for this.
      sudo service "$whonixdesktop_display_manager" status >/dev/null || { service_2_exit_code="$?" ; true; };

      if [ "$service_2_exit_code" = "0" ]; then
         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] $whonixdesktop_display_manager already running, not starting."
      else
         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Trying to start login manager \
(graphical desktop environment) $whonixdesktop_display_manager..."

         ## Sleep for the look and feel. Users should be able to see"Trying to start login manager..."
         sleep_3_exit_code="0"
         sleep 5 &
         wait "$!" || { sleep_3_exit_code="$?" ; true; };

         service_3_exit_code="0"
         ## There is a /etc/sudoers.d/kdm exception for this.
         sudo service "$whonixdesktop_display_manager" start || { service_3_exit_code="$?" ; true; };

         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Starting login manager \
(graphical desktop environment) $whonixdesktop_display_manager..."

         if [ "$service_3_exit_code" = "0" ]; then
            true "INFO: [RAM Adjusted Desktop Starter] Successfully started $whonixdesktop_display_manager."
         else
            echo "[${red}${bold}ERROR${reset}] [RAM Adjusted Desktop Starter] \
Could not start $whonixdesktop_display_manager. Please report this Whonix bug!"
         fi
      fi
   else
      ## We will not boot into a graphical desktop environment.
      ## Make a new line so the ^C stands alone.
      echo ""
      echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Manually aborted start of login manager \
(graphical desktop environment) $whonixdesktop_display_manager."
      echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Feel free to manually start a login manager \
(graphical desktop environment) later.
    sudo service $whonixdesktop_display_manager start"

      maybe_start_whonixsetup
   fi

   if [ "$whonixdesktop_debug" = "1" ]; then
      true "INFO: End."
   fi
}

colors
ram-adjusted-desktop-starter

## End of /usr/lib/whonix/ram_adjusted_desktop_starter
