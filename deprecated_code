# See LICENSE in root of Whonix source for copyright, license and authors.

# Removed code for various reasons.
# Subject for discussion about being readded.

# Maximize Tor Browser windows.
#
# Out commented due to fingerprinting risks.
# Javascript is enabeld in Tor Browser by default and javascript
# can read the resolution.
#
# ( echo '/<applications>/a'; echo '<application class="Tor*" role="browser"> <maximized>yes</maximized> </application>'; echo '.'; echo 'wq') | sudo -u $USERNAME ed -s .config/openbox/rc.xml

# Win+Space shows Openbox menu.
#
# Out commented. We never advertised this feature and its
# probable better if the user decides to activate it.
#
# ( echo '/<keyboard>/a'; echo '<keybind key="W-space"><action name="ShowMenu"><menu>root-menu</menu></action></keybind>'; echo '.'; echo 'wq') | sudo -u $USERNAME ed -s .config/openbox/rc.xml 

# Fix ugly corners in tint2rc.
#
# Out commented. Its up to the user to decide which
# style settings to choose.
#
# sudo -u $USERNAME ed -s .config/tint2/tint2rc <<< $',s/rounded = 7/rounded = 0/g\nw' 


# No longer deleting /var/lib/tor. We install but forbid to run software such as Tor we install.
# Therefore /var/lib/tor should be empty.
# Ensure to delete /var/lib/tor. It contains sensitive stuff like the Tor consensus and the Tor entry guards.
# rm -r /var/lib/tor/* || true

# Tor Borwser gpg verification

SOCKS_PORT_TBB_GPG="9116"
UWT_VAR="/usr/local/bin/uwt -t 5 -i "$GATEWAY_IP" -p "$SOCKS_PORT_TBB_GPG""
KEYSERVER="x-hkp://pool.sks-keyservers.net"

gpg_key_verification_error() {
trap "tb_error_handler" ERR

ZENITY_TYPE="--error"
output "\
ERROR: Could not verify GPG key.
ERROR: Tor Browser update failed! Try again later.\
"
progress_bar 100
exit 1
}

## Importing GPG keys...
debug "\
INFO: Importing GPG keys to the temporary directory gpgtmpdir...
INFO: The GPG keys will not be permanently added to your keyring.\
"
mkdir "gpgtmpdir"
chmod 700 "gpgtmpdir/"

## !!!VERIFY!!!
debug "\
INFO: Getting the GPG keys... Verify the fingerprints.
https://www.torproject.org/docs/signing-keys.html.en
http://idnxcnkne4qt76tg.onion/docs/signing-keys.html.en\
"

## !!!VERIFY!!!
debug "INFO: Getting Erinn Clark's GPG key..."
ERINN_FINGERPRINT="8738A680B84B3031A630F2DB416F061063FEE659"
debug "INFO: ERINN_FINGERPRINT: $ERINN_FINGERPRINT"
debug "INFO: You can ignore the libtorsocks warning about the DNS leak. See Design. There can be no DNS leaks."
$UWT_VAR /usr/bin/gpg \
--homedir gpgtmpdir --keyserver "$KEYSERVER" --recv "$ERINN_FINGERPRINT" || NETWORK_DOWN="1"

# Check if gpg failed.
if [ "$NETWORK_DOWN" = "1" ]; then
   ZENITY_TYPE="--error"
   output "Failed to fetch gpg key: "$ERINN_FINGERPRINT"
from keyserver: "$KEYSERVER"
Maybe the keyserver is down.

$DOWNLOAD_FAIL_HELP"
   progress_bar 100
   exit 1
fi

 ## !!!VERIFY!!!
debug "INFO: Getting Sebastian Hahn's GPG key..."
SEBASTIAN_FINGERPRINT="261C5FBE77285F88FB0C343266C8C2D7C5AA446D"
debug "INFO: SEBASTIAN_FINGERPRINT: $SEBASTIAN_FINGERPRINT"
debug "INFO: You can ignore the libtorsocks warning about the DNS leak. See Design. There can be no DNS leaks."
$UWT_VAR /usr/bin/gpg \
--homedir gpgtmpdir --keyserver "$KEYSERVER" --recv "$SEBASTIAN_FINGERPRINT" || NETWORK_DOWN="1"

# Check if gpg failed.
if [ "$NETWORK_DOWN" = "1" ]; then
   ZENITY_TYPE="--error"
   output "Failed to fetch gpg key: "$SEBASTIAN_FINGERPRINT"
from keyserver: "$KEYSERVER"
Maybe the keyserver is down.

$DOWNLOAD_FAIL_HELP"
   progress_bar 100
   exit 1
fi

## !!!VERIFY!!!
debug "INFO: Verifying Erinn Clark's GPG key..."
trap "gpg_key_verification_error" ERR
gpg --homedir "gpgtmpdir" --fingerprint "$ERINN_FINGERPRINT"
debug "INFO: Successfully verified Erinn Clark's GPG key."

## !!!VERIFY!!!
debug "INFO: Verifying Sebastian Hahn's GPG key..."
trap "gpg_key_verification_error" ERR
gpg --homedir "gpgtmpdir" --fingerprint "$SEBASTIAN_FINGERPRINT"
debug "INFO: Successfully verified Sebastian Hahn's GPG key."

# This assumes you rebooted after the last kernel update.
# Can not be used together with debootstrap!
# Not needed when using debootstrap.
#apt-get --config-file /usr/local/share/whonix/apt.conf --yes remove --purge $(dpkg -l|egrep '^ii  linux-(im|he)'|awk '{print $2}'|grep -v `uname -r`) || true

# This assumes you rebooted after the last kernel update.
# Can not be used together with debootstrap!
# Not needed when using debootstrap.
#apt-get --config-file /usr/local/share/whonix/apt.conf --yes remove --purge $(dpkg -l|egrep '^ii  linux-(im|he)'|awk '{print $2}'|grep -v `uname -r`) || true


