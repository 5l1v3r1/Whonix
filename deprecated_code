# See LICENSE in root of Whonix source for copyright, license and authors.

# Removed code for various reasons.
# Subject for discussion about being readded.

# Maximize Tor Browser windows.
#
# Out commented due to fingerprinting risks.
# Javascript is enabeld in Tor Browser by default and javascript
# can read the resolution.
#
# ( echo '/<applications>/a'; echo '<application class="Tor*" role="browser"> <maximized>yes</maximized> </application>'; echo '.'; echo 'wq') | sudo -u $USERNAME ed -s .config/openbox/rc.xml

# Win+Space shows Openbox menu.
#
# Out commented. We never advertised this feature and its
# probable better if the user decides to activate it.
#
# ( echo '/<keyboard>/a'; echo '<keybind key="W-space"><action name="ShowMenu"><menu>root-menu</menu></action></keybind>'; echo '.'; echo 'wq') | sudo -u $USERNAME ed -s .config/openbox/rc.xml 

# Fix ugly corners in tint2rc.
#
# Out commented. Its up to the user to decide which
# style settings to choose.
#
# sudo -u $USERNAME ed -s .config/tint2/tint2rc <<< $',s/rounded = 7/rounded = 0/g\nw' 


# No longer deleting /var/lib/tor. We install but forbid to run software such as Tor we install.
# Therefore /var/lib/tor should be empty.
# Ensure to delete /var/lib/tor. It contains sensitive stuff like the Tor consensus and the Tor entry guards.
# rm -r /var/lib/tor/* || true

# Tor Borwser gpg verification

SOCKS_PORT_TBB_GPG="9116"
UWT_VAR="/usr/local/bin/uwt -t 5 -i "$GATEWAY_IP" -p "$SOCKS_PORT_TBB_GPG""
KEYSERVER="x-hkp://pool.sks-keyservers.net"

gpg_key_verification_error() {
trap "tb_error_handler" ERR

ZENITY_TYPE="--error"
output "\
ERROR: Could not verify GPG key.
ERROR: Tor Browser update failed! Try again later.\
"
progress_bar 100
exit 1
}

## Importing GPG keys...
debug "\
INFO: Importing GPG keys to the temporary directory gpgtmpdir...
INFO: The GPG keys will not be permanently added to your keyring.\
"
mkdir "gpgtmpdir"
chmod 700 "gpgtmpdir/"

## !!!VERIFY!!!
debug "\
INFO: Getting the GPG keys... Verify the fingerprints.
https://www.torproject.org/docs/signing-keys.html.en
http://idnxcnkne4qt76tg.onion/docs/signing-keys.html.en\
"

## !!!VERIFY!!!
debug "INFO: Getting Erinn Clark's GPG key..."
ERINN_FINGERPRINT="8738A680B84B3031A630F2DB416F061063FEE659"
debug "INFO: ERINN_FINGERPRINT: $ERINN_FINGERPRINT"
debug "INFO: You can ignore the libtorsocks warning about the DNS leak. See Design. There can be no DNS leaks."
$UWT_VAR /usr/bin/gpg \
--homedir gpgtmpdir --keyserver "$KEYSERVER" --recv "$ERINN_FINGERPRINT" || NETWORK_DOWN="1"

# Check if gpg failed.
if [ "$NETWORK_DOWN" = "1" ]; then
   ZENITY_TYPE="--error"
   output "Failed to fetch gpg key: "$ERINN_FINGERPRINT"
from keyserver: "$KEYSERVER"
Maybe the keyserver is down.

$DOWNLOAD_FAIL_HELP"
   progress_bar 100
   exit 1
fi

 ## !!!VERIFY!!!
debug "INFO: Getting Sebastian Hahn's GPG key..."
SEBASTIAN_FINGERPRINT="261C5FBE77285F88FB0C343266C8C2D7C5AA446D"
debug "INFO: SEBASTIAN_FINGERPRINT: $SEBASTIAN_FINGERPRINT"
debug "INFO: You can ignore the libtorsocks warning about the DNS leak. See Design. There can be no DNS leaks."
$UWT_VAR /usr/bin/gpg \
--homedir gpgtmpdir --keyserver "$KEYSERVER" --recv "$SEBASTIAN_FINGERPRINT" || NETWORK_DOWN="1"

# Check if gpg failed.
if [ "$NETWORK_DOWN" = "1" ]; then
   ZENITY_TYPE="--error"
   output "Failed to fetch gpg key: "$SEBASTIAN_FINGERPRINT"
from keyserver: "$KEYSERVER"
Maybe the keyserver is down.

$DOWNLOAD_FAIL_HELP"
   progress_bar 100
   exit 1
fi

## !!!VERIFY!!!
debug "INFO: Verifying Erinn Clark's GPG key..."
trap "gpg_key_verification_error" ERR
gpg --homedir "gpgtmpdir" --fingerprint "$ERINN_FINGERPRINT"
debug "INFO: Successfully verified Erinn Clark's GPG key."

## !!!VERIFY!!!
debug "INFO: Verifying Sebastian Hahn's GPG key..."
trap "gpg_key_verification_error" ERR
gpg --homedir "gpgtmpdir" --fingerprint "$SEBASTIAN_FINGERPRINT"
debug "INFO: Successfully verified Sebastian Hahn's GPG key."

# This assumes you rebooted after the last kernel update.
# Can not be used together with debootstrap!
# Not needed when using debootstrap.
#apt-get --config-file /usr/local/share/whonix/apt.conf --yes remove --purge $(dpkg -l|egrep '^ii  linux-(im|he)'|awk '{print $2}'|grep -v `uname -r`) || true

# This assumes you rebooted after the last kernel update.
# Can not be used together with debootstrap!
# Not needed when using debootstrap.
#apt-get --config-file /usr/local/share/whonix/apt.conf --yes remove --purge $(dpkg -l|egrep '^ii  linux-(im|he)'|awk '{print $2}'|grep -v `uname -r`) || true

config_home() {
trap "error_handler" ERR INT TERM

# Thanks to:
# https://bbs.archlinux.org/viewtopic.php?id=116451
# http://askubuntu.com/questions/98135/gnome-terminal-ignores-gtk-theme

# Fixing black on black for gnome-terminal.
# Thanks to: http://ubuntuforums.org/showthread.php?t=1513791
# Thanks to: https://gist.github.com/1397104
sudo -u "$USERNAME" gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
sudo -u "$USERNAME" gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
sudo -u "$USERNAME" gconftool-2 --set "/apps/gnome-terminal/profiles/Default/foreground_color" --type string "#FFFFFFFFFFFF"
}

# Remove unnecessary packages to slim down the system.
# This list contains only packages, which waste space and are not required.
#apt-get --config-file /usr/local/share/whonix/apt.conf --yes remove --purge \
#vim vim-tiny vim-common ufw telnet tcpdump tasksel* strace ppp pppconfig \
#pppoeconf pciutils ntfs-3g mtr-tiny mlocate man-db manpages lshw libpci3 fuse-utils iso-codes \
#dosfstools logrotate aptitude || true

# No longer removing friendly-recovery. Quite useful in case disk got filled up
# and also errors on virtual disks happen sometimes.

# Remove unnecessary packages to slim down the system.
# This list contains only packages, which waste space and are not required.
#apt-get --yes remove --purge xserver-xorg-video-all xserver-xorg-video-ati xserver-xorg-video-fbdev \
#xserver-xorg-video-geode xserver-xorg-video-intel xserver-xorg-video-mach64 xserver-xorg-video-mga \
#xserver-xorg-video-neomagic xserver-xorg-video-nouveau xserver-xorg-video-openchrome \
#xserver-xorg-video-qxl xserver-xorg-video-r128  xserver-xorg-video-radeon xserver-xorg-video-s3 \
#xserver-xorg-video-savage xserver-xorg-video-siliconmotion xserver-xorg-video-sis xserver-xorg-video-sisusb \
#xserver-xorg-video-tdfx xserver-xorg-video-trident xserver-xorg-video-vmware fuse \
#geoip-database sound-theme-freedesktop fuse-utils aptitude pciutils hdparm lshw ftp parted telnet \
#mlocate ppp pppconfig pppoeconf bind9-host dosfstools strace mtr-tiny

# Tell bash-completion about missing man package because apt-get is not doing its job...
rm -r /etc/bash_completion.d/man/* || true

# Killing rsyslog so we can remove logs.
service rsyslog stop || true

# TODO
# Which are safe?
# rm /usr/share/icons/nuoveXT2/icon-theme.cache
# cd /usr/share/locale &&  ls | grep -v en | xargs rm -r && cd /home/$USERNAME
# rm -r /usr/share/doc/* #(are we even allowed to do that, see licenses?)

config_vidalia() {
trap "error_handler" ERR INT TERM

# Not in use yet.
# Waiting for Vialia 0.3.

echo "
######################################################
config_vidalia
######################################################
"

# Vidalia config file gets copied by copyinto.

# Lift permissions to edit torrc to allow Vidalia editing torrc.
# There should be no security implications, since Whonix-Gateway is
# not a multi user environment, its solely used to host Tor. On the
# other hand, for the Tor Browser Bundle, Tor, Vidalia and Tor Browser
# run under the very same user account.
chmod --recursive g+rw /etc/tor/torrc
chmod --recursive o+rw /etc/tor/torrc
}

usermod -a -G audio "$USERNAME"
sudo -u "$USERNAME" amixer
sudo -u "$USERNAME" amixer set Master 70 unmute
sudo -u "$USERNAME" amixer set PCM 70 unmute