#########################################
# aos torrc                             #
#########################################
# You can find a backup of the original torrc under /etc/tor/torrc.backup.

# https://www.torproject.org/docs/tor-manual.html.en Tor stable manual.
# https://www.torproject.org/docs/tor-manual-dev.html.en Tor alpha manual.

# The "stable" repository now contains Tor 0.2.3, refer to the
# "alpha" manual until they completed transition.

#########################################
# Leak Tests                            #
#########################################

#+# #OptionalFeatureNr.6# Leak Testing.
#+#
#+# Manual Leak Testing:
#+# See aos/LeakTests. Activate this while testing for leaks. (Step 0)
#+# Deactivate after you are done! (Important!) (Step 9)
#+#
#+# Scripted Leak Testing:
#+# If you change the following two lines, beside removing the hash (#),
#+# beside commenting them in, you break the integrated leaktest script.
#+# See leaktest_aos_gateway() ed.
#+# See /aos/LeakTests
#+# on information, how to use the integrated leaktest script.
#+#
#ReachableDirAddresses *:80
#ReachableORAddresses *:443

#########################################
# General Settings                      #
#########################################

# ControlPort is necessary for tor-arm and Vidalia.
# - Vidalia has to set /var/run/tor/control (default) as
#   Control Cookie.
# - Arm autodetects the Control Cookie.
# - Not using HashedControlPassword or CookieAuthentication.
#   aos-Gateway is no multi purpose machine. It is solely a
#   Tor Gateway. As soon as an adversary has physical access
#   or compromised aos-Gateway, its Game Over anyway.
ControlPort 9051
ControlListenAddress 127.0.0.1

Log notice syslog
#Log notice file /var/log/tor/log

User debian-tor

# Not required:
#DataDirectory /...
#PidFile /...
#ControlSocket /...
#ControlSocketsGroupWritable 1
#CookieAuthentication 1
#CookieAuthFileGroupReadable 1
#CookieAuthFile /...

#########################################
# Proxy Settings                        #
#########################################

VirtualAddrNetwork 10.192.0.0/10
AutomapHostsOnResolve 1

TransPort '$INT_IP':'$TRANS_PORT_AOSW'
DnsPort '$INT_IP':53

TransPort 127.0.0.1:'$TRANS_PORT_AOSG'
DnsPort 127.0.0.1:'$DNS_PORT_AOSG'

SocksPort '$INT_IP':'$SOCKS_PORT_TB'
SocksPort '$INT_IP':'$SOCKS_PORT_IRC'
SocksPort '$INT_IP':'$SOCKS_PORT_TORBIRDY'
SocksPort '$INT_IP':'$SOCKS_PORT_IM'
SocksPort '$INT_IP':'$SOCKS_PORT_APT_GET'
SocksPort '$INT_IP':'$SOCKS_PORT_GPG'
SocksPort '$INT_IP':'$SOCKS_PORT_SSH'
SocksPort '$INT_IP':'$SOCKS_PORT_GIT'
SocksPort '$INT_IP':'$SOCKS_PORT_HTPDATE'
SocksPort '$INT_IP':'$SOCKS_PORT_WGET'
SocksPort '$INT_IP':'$SOCKS_PORT_TORCHECK'
SocksPort '$INT_IP':'$SOCKS_PORT_BITCOIN'
SocksPort '$INT_IP':'$SOCKS_PORT_PRIVOXY'
SocksPort '$INT_IP':'$SOCKS_PORT_POLIPO'

#+# #OptionalFeatureNr.4# Additional Socks Ports.
#SocksPort '$INT_IP':'$SOCKS_PORT_ETC'

#+# #OptionalFeatureNr.1# Isolate Dest Port / Isolate Dest Addr
#SocksPort '$INT_IP':'$SOCKS_PORT_ISOLATE_DEST_PORT' IsolateDestPort
#SocksPort '$INT_IP':'$SOCKS_PORT_ISOLATE_DEST_ADDR' IsolateDestAddr

#########################################
# Hidden Services                       #
#########################################

#+# #OptionalFeatureNr.2# Hidden Services.
#+# Uncomment if you install a hidden service on the aos-Workstation.
#+# Check /var/lib/tor/hidden_service/hostname for your .onion address.
#+# Backup the keys from /var/lib/tor/hidden_service/!
#HiddenServiceDir /var/lib/tor/hidden_service/
#HiddenServicePort 80 192.168.0.2:12345

#########################################
# Using normal (non-obfuscated) bridges #
#########################################
# Also read all information about bridges on https://www.torproject.org!
# https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=proposals/125-bridges.txt
# describes under "3. Bridge users." how to use bridges.

# You have to find bridges yourself!
# - source #1: https://www.torproject.org/docs/bridges#FindingMore
# - source #2: https://bridges.torproject.org/
# - source #3: Ask a friend.

# If you want to use normal (non-obfuscated) bridges, uncomment the line below.
#UseBridges 1 

# This is only an example, to demonstrate the syntax! Do not use it! You still have to find your own bridges!
#bridge 60.16.182.53:9001
#bridge 87.237.118.139:444
#bridge 60.63.97.221:443

#########################################
# Using obfuscated bridges              #
#########################################
# Also read all information about obfuscated bridges and obfsproxy on https://www.torproject.org!
# https://www.torproject.org/projects/obfsproxy-instructions.html.en
#
# You can either use semi-public or private bridges.
#
# Semi-public obfuscated bridges can be found within the Obfsproxy Tor Browser Bundle in ./Data/Tor/torrc.
# https://www.torproject.org/projects/obfsproxy.html.en
# Note, that those bridges might get blocked soon. And it is also not hard for the censurer,
# to find out that you are using those semi-public bridges.
#
# Only friends can setup private obfuscated bridges for you.
# (Or you have to anonymously get a server in a non-censored country yourself.)
# official help: https://www.torproject.org/projects/obfsproxy-instructions.html.en
# unofficial help: https://trac.torproject.org/projects/tor/wiki/TorObfsBridgeSetupForBeginners

# If you want to use obfuscated bridges, uncomment the next two lines below.
#UseBridges 1
#ClientTransportPlugin obfs2 exec /usr/local/bin/obfsproxy --managed

# This is only an example, to demonstrate the syntax! Do not use it! You still have to find your own obfuscated bridges!
#Bridge obfs2 128.31.0.34:1051

#########################################
# end of torrc                          #
#########################################