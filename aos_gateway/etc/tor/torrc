#########################################
# aos torrc                             #
#########################################
# You can find a backup of the original torrc under /etc/tor/torrc.backup.

# https://www.torproject.org/docs/tor-manual.html.en Tor stable manual.
# https://www.torproject.org/docs/tor-manual-dev.html.en Tor alpha manual.

# The "stable" repository now contains Tor 0.2.3, refer to the
# "alpha" manual until they completed transition.

#########################################
# Leak Tests                            #
#########################################

#+# #OptionalFeatureNr.6# Leak Testing.
#+#
#+# Manual Leak Testing:
#+# See aos/LeakTests. Activate this while testing for leaks. (Step 0)
#+# Deactivate after you are done! (Important!) (Step 9)
#+#
#+# Scripted Leak Testing:
#+# If you change the following two lines, beside removing the hash (#),
#+# beside commenting them in, you break the integrated leaktest script.
#+# See leaktest_aos_gateway() ed.
#+# See /aos/LeakTests
#+# on information, how to use the integrated leaktest script.
#+#
#ReachableDirAddresses *:80
#ReachableORAddresses *:443

#########################################
# General Settings                      #
#########################################

# ControlPort is necessary for tor-arm and Vidalia.
# - Vidalia has to set /var/run/tor/control (default) as
#   Control Cookie.
# - Arm autodetects the Control Cookie.
# - Not using HashedControlPassword or CookieAuthentication.
#   aos-Gateway is no multi purpose machine. It is solely a
#   Tor Gateway. As soon as an adversary has physical access
#   or compromised aos-Gateway, its Game Over anyway.
ControlPort 9051
ControlListenAddress 127.0.0.1

Log notice syslog
#Log notice file /var/log/tor/log

User debian-tor

# Not required:
#DataDirectory /...
#PidFile /...
#ControlSocket /...
#ControlSocketsGroupWritable 1
#CookieAuthentication 1
#CookieAuthFileGroupReadable 1
#CookieAuthFile /...

#########################################
# Proxy Settings                        #
#########################################

VirtualAddrNetwork 10.192.0.0/10
AutomapHostsOnResolve 1

##################################
# aos-Workstation Trans/Dns-Port #
##################################

# (comment mirrored from /usr/local/share/aos_firewall)
# Transparent Proxy Ports for aos-Workstation
# TRANS_PORT_AOSW="9040"
#+# #OptionalFeatureNr.5# Best possible protection against Identity correlation through circuit sharing. ^5^
TransPort 192.168.0.10:9040

# (comment mirrored from /usr/local/share/aos_firewall)
# DnsPort_AOSW
# DNS_PORT_AOSW="53"
#+# #OptionalFeatureNr.5# Best possible protection against Identity correlation through circuit sharing. ^5^
DnsPort 192.168.0.10:53

##############################
# aos-Workstation SocksPorts #
##############################

# (comment mirrored from /usr/local/share/aos_firewall)
# Socks Ports for per application circuits.
# SOCKS_PORT_TB="9100"
# SOCKS_PORT_IRC="9101"
# SOCKS_PORT_TORBIRDY="9102"
# SOCKS_PORT_IM="9103"
# SOCKS_PORT_APT_GET="9104"
# SOCKS_PORT_GPG="9105"
# SOCKS_PORT_SSH="9106"
# SOCKS_PORT_GIT="9107"
# SOCKS_PORT_HTPDATE="9108"
# SOCKS_PORT_WGET="9109"
# SOCKS_PORT_TORCHECK="9110"
# SOCKS_PORT_BITCOIN="9111"
# SOCKS_PORT_PRIVOXY="9112"
# SOCKS_PORT_POLIPO="9113"
# SOCKS_PORT_AOS_NEWS="9114"
# SOCKS_PORT_TBB_DOWNLOAD="9115"
# SOCKS_PORT_TBB_GPG="9116"

SocksPort 192.168.0.10:9100
SocksPort 192.168.0.10:9101
SocksPort 192.168.0.10:9102
SocksPort 192.168.0.10:9103
SocksPort 192.168.0.10:9104
SocksPort 192.168.0.10:9105
SocksPort 192.168.0.10:9106
SocksPort 192.168.0.10:9107
SocksPort 192.168.0.10:9108
SocksPort 192.168.0.10:9109
SocksPort 192.168.0.10:9110
SocksPort 192.168.0.10:9111
SocksPort 192.168.0.10:9112
SocksPort 192.168.0.10:9113
SocksPort 192.168.0.10:9114
SocksPort 192.168.0.10:9115
SocksPort 192.168.0.10:9116

# (comment mirrored from /usr/local/share/aos_firewall)
# SOCKS_PORT_ETC="9198"
# SOCKS_PORT_ETC2="9199"
#+# #OptionalFeatureNr.4# Additional Socks Ports.
#SocksPort 192.168.0.10:9198

# (comment mirrored from /usr/local/share/aos_firewall)
# SOCKS_PORT_ISOLATE_DEST_PORT="9200"
# SOCKS_PORT_ISOLATE_DEST_ADDR="9201"
#+# #OptionalFeatureNr.1# Isolate Dest Port / Isolate Dest Addr
#SocksPort 192.168.0.10:9200 IsolateDestPort
#SocksPort 192.168.0.10:9201 IsolateDestAddr

##############################
# aos-Gateway Trans/Dns-Port #
##############################

## TransPort and DnsPort are no longer used on aos-Gateway by default.
##
## (comment mirrored from /usr/local/share/aos_firewall)
## Transparent Proxy Ports for aos-Gateway
## TRANS_PORT_AOSG="9041"
## DNS_PORT_AOSG="54"
##TransPort 127.0.0.1:9041
##DnsPort 127.0.0.1:54

##########################
# aos-Gateway SocksPorts #
##########################

# SOCKS_PORT_APT_GET="9104"
SocksPort 127.0.0.1:9104

# SOCKS_PORT_GPG="9105"
SocksPort 127.0.0.1:9105

# SOCKS_PORT_HTPDATE="9108"
SocksPort 127.0.0.1:9108

# SOCKS_PORT_WGET="9109"
SocksPort 127.0.0.1:9109

# SOCKS_PORT_TORCHECK="9110"
SocksPort 127.0.0.1:9110

# SOCKS_PORT_AOS_NEWS="9114"
SocksPort 127.0.0.1:9114

#########################################
# Hidden Services                       #
#########################################

#+# #OptionalFeatureNr.2# Hidden Services.
#+# Uncomment if you install a hidden service on the aos-Workstation.
#+# Check /var/lib/tor/hidden_service/hostname for your .onion address.
#+# Backup the keys from /var/lib/tor/hidden_service/!
#HiddenServiceDir /var/lib/tor/hidden_service/
#HiddenServicePort 80 192.168.0.11:12345

#########################################
# Using normal (non-obfuscated) bridges #
#########################################
# Also read all information about bridges on https://www.torproject.org!
# https://gitweb.torproject.org/torspec.git?a=blob_plain;hb=HEAD;f=proposals/125-bridges.txt
# describes under "3. Bridge users." how to use bridges.

# You have to find bridges yourself!
# - source #1: https://www.torproject.org/docs/bridges#FindingMore
# - source #2: https://bridges.torproject.org/
# - source #3: Ask a friend.

# If you want to use normal (non-obfuscated) bridges, uncomment the line below.
#UseBridges 1 

# This is only an example, to demonstrate the syntax! Do not use it! You still have to find your own bridges!
#bridge 60.16.182.53:9001
#bridge 87.237.118.139:444
#bridge 60.63.97.221:443

#########################################
# Using obfuscated bridges              #
#########################################
# Also read all information about obfuscated bridges and obfsproxy on https://www.torproject.org!
# https://www.torproject.org/projects/obfsproxy-instructions.html.en
#
# You can either use semi-public or private bridges.
#
# Semi-public obfuscated bridges can be found within the Obfsproxy Tor Browser Bundle in ./Data/Tor/torrc.
# https://www.torproject.org/projects/obfsproxy.html.en
# Note, that those bridges might get blocked soon. And it is also not hard for the censurer,
# to find out that you are using those semi-public bridges.
#
# Only friends can setup private obfuscated bridges for you.
# (Or you have to anonymously get a server in a non-censored country yourself.)
# official help: https://www.torproject.org/projects/obfsproxy-instructions.html.en
# unofficial help: https://trac.torproject.org/projects/tor/wiki/TorObfsBridgeSetupForBeginners

# If you want to use obfuscated bridges, uncomment the next two lines below.
#UseBridges 1
#ClientTransportPlugin obfs2 exec /usr/local/bin/obfsproxy --managed

# This is only an example, to demonstrate the syntax! Do not use it! You still have to find your own obfuscated bridges!
#Bridge obfs2 128.31.0.34:1051

#########################################
# end of aos torrc                      #
#########################################