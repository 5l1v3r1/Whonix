#!/bin/bash
# internally used by whonix_createvm

set -x

backup_shared_pre() {
   #########################
   # Backup Shared Restore #
   #########################

   # This is neccessary in case the copy into is used more then once. (Debugging)
   # It restores the backups and therefore prevents files getting appended more than once.

   cp --recursive --preserve "$CHROOT_FOLDER"/etc/sudoers.backup "$CHROOT_FOLDER"/etc/sudoers || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/rc.local.backup "$CHROOT_FOLDER"/etc/rc.local || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/apt/sources.list.backup "$CHROOT_FOLDER"/etc/apt/sources.list || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/default/grub.backup "$CHROOT_FOLDER"/etc/default/grub || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/sysctl.conf.backup "$CHROOT_FOLDER"/etc/sysctl.conf || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/network/interfaces.backup "$CHROOT_FOLDER"/etc/network/interfaces || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/hosts.backup "$CHROOT_FOLDER"/etc/hosts || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/motd.backup "$CHROOT_FOLDER"/etc/motd || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/issue.backup "$CHROOT_FOLDER"/etc/issue || true
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/inittab.backup "$CHROOT_FOLDER"/etc/inittab || true

   #####################
   # Backup Shared Pre #
   #####################

   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/sudoers "$CHROOT_FOLDER"/etc/sudoers.backup
   chmod --recursive 0440 "$CHROOT_FOLDER"/etc/sudoers.backup
   chown --recursive root:root "$CHROOT_FOLDER"/etc/sudoers.backup

   # Better no backup of localtime.
   #cp --no-clobber "$CHROOT_FOLDER"/etc/localtime "$CHROOT_FOLDER"/etc/localtime.backup

   # Better no backup of dbusmachineid.

   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/rc.local "$CHROOT_FOLDER"/etc/rc.local.backup
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/apt/sources.list "$CHROOT_FOLDER"/etc/apt/sources.list.backup
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/default/grub "$CHROOT_FOLDER"/etc/default/grub.backup
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/sysctl.conf "$CHROOT_FOLDER"/etc/sysctl.conf.backup
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/network/interfaces "$CHROOT_FOLDER"/etc/network/interfaces.backup
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/hosts "$CHROOT_FOLDER"/etc/hosts.backup || true

   touch "$CHROOT_FOLDER"/etc/motd
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/motd "$CHROOT_FOLDER"/etc/motd.backup || true

   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/issue "$CHROOT_FOLDER"/etc/issue.backup || true

   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/etc/inittab "$CHROOT_FOLDER"/etc/inittab.backup || true
}



copy_shared_pre() {
   ###################
   # Copy Shared Pre #
   ###################

   # Delete old swapfile, only in case the script has run before. (Debugging only.)
   rm "$CHROOT_FOLDER"/swapfile1 || true

   # policy-rc.d prevent daemons from starting while using apt-get.
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/sbin/policy-rc.d "$CHROOT_FOLDER"/usr/sbin/policy-rc.d
   chmod --recursive 755 "$CHROOT_FOLDER"/usr/sbin/policy-rc.d

   # Ensure timezone is UTC.
   cp --recursive --preserve "$CHROOT_FOLDER"/usr/share/zoneinfo/UTC "$CHROOT_FOLDER"/etc/localtime

   # This is required because debootstrap will mess up /etc/apt/sources.list.
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/apt/sources.list "$CHROOT_FOLDER"/etc/apt/sources.list

   # Create folder.
   mkdir -p "$CHROOT_FOLDER"/usr/local/share/whonix/

   # dbus machine-id is shared among all Whonix users.
   # We must create the folder, because that file does not exist at this point.
   mkdir -p "$CHROOT_FOLDER"/var
   mkdir -p "$CHROOT_FOLDER"/var/lib
   mkdir -p "$CHROOT_FOLDER"/var/lib/dbus
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/var/lib/dbus/machine-id "$CHROOT_FOLDER"/var/lib/dbus/machine-id

   # copy tails_htpdate binary
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/sbin/htpdate "$CHROOT_FOLDER"/usr/local/sbin/htpdate
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/sbin/htpdate

   # copy hptdate init script
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/init.d/htpdate "$CHROOT_FOLDER"/etc/init.d/htpdate
   chmod --recursive +x "$CHROOT_FOLDER"/etc/init.d/htpdate

   # tails_htp configuration file
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/default/htpdate "$CHROOT_FOLDER"/etc/default/htpdate
   chmod --recursive +x "$CHROOT_FOLDER"/etc/default/htpdate

   # htp anachron script to run it hourly
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/cron.hourly/htpdate "$CHROOT_FOLDER"/etc/cron.hourly/htpdate
   chmod --recursive +x "$CHROOT_FOLDER"/etc/cron.hourly/htpdate
   chmod --recursive o-rwx "$CHROOT_FOLDER"/etc/cron.hourly/htpdate
   chmod --recursive g-rwx "$CHROOT_FOLDER"/etc/cron.hourly/htpdate

   # htp anachorn helper script to add an delay before restarting tails_htp
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/htpdate_hourly "$CHROOT_FOLDER"/usr/local/bin/htpdate_hourly
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/htpdate_hourly
   
   # uwt
   # Using this until the feature to add ip/port through command line
   # reaches upstream torsocks, if ever. Source:
   # https://trac.torproject.org/projects/tor/wiki/doc/torsocks
   # If you make changes to uwt, please also add them "upstream"
   # (link above).
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/uwt "$CHROOT_FOLDER"/usr/local/bin/uwt
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/uwt

   # Copy whonixcheck script into VM image and make it executable.
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/whonixcheck "$CHROOT_FOLDER"/usr/local/bin/whonixcheck
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/whonixcheck

   # whonixcheck_daily
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/whonixcheck_daily "$CHROOT_FOLDER"/usr/local/bin/whonixcheck_daily
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/whonixcheck_daily
   
   # Copy timesync gui script into VM image and make it executable.
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/timesync "$CHROOT_FOLDER"/usr/local/bin/timesync
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/timesync

   # Copy apt-get-update wrapper, required for whonixcheck.
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/apt-get-update "$CHROOT_FOLDER"/usr/local/bin/apt-get-update
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/apt-get-update

   # /etc/fstab
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/fstab "$CHROOT_FOLDER"/etc/fstab

   # Tor Browser signing GPG public key
   # https://www.torproject.org/docs/verifying-signatures.html.en

   # /etc/rc.local
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/rc.local "$CHROOT_FOLDER"/etc/rc.local
   chmod --recursive +x "$CHROOT_FOLDER"/etc/rc.local

   # /etc/motd
   # rm to get ride of the symlink, in case there is any.
   # http://wiki.debian.org/motd
   rm "$CHROOT_FOLDER"/etc/motd || true
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/motd "$CHROOT_FOLDER"/etc/motd

   # /etc/apt/apt.conf.d/20noperiodic
   mkdir -p /etc/apt/
   mkdir -p /etc/apt/apt.conf.d/
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/apt/apt.conf.d/20noperiodic "$CHROOT_FOLDER"/etc/apt/apt.conf.d/20noperiodic

   # /etc/inittab
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/inittab "$CHROOT_FOLDER"/etc/inittab

   # /usr/local/share/whonix/
   cp --preserve --recursive "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/share/whonix/* "$CHROOT_FOLDER"/usr/local/share/whonix/

      ##############
      # Base Files #
      ##############

   # delete default symlink to "$CHROOT_FOLDER"/etc/dpkg/origins/debian
   rm "$CHROOT_FOLDER"/etc/dpkg/origins/default || true

   # dpkg origins file
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/dpkg/origins/whonix "$CHROOT_FOLDER"/etc/dpkg/origins/
   
   # /etc/dpkg/origins/default
   # symlink is created by whonix_internal_install_script

      #######
      # uwt #
      #######

   # SOCKS_PORT_TB="9100"
   # - gui application with socks proxy settings
   # - no wrapper required

   # SOCKS_PORT_IRC="9101"
   # - gui application with socks proxy settings
   # - no wrapper required

   # SOCKS_PORT_TORBIRDY="9102"
   # - gui application with socks proxy settings
   # - no wrapper required
   # - not yet installed by default

   # SOCKS_PORT_IM="9103"
   # - gui application with socks proxy settings
   # - no wrapper required

   # apt-get wrapper
   # SOCKS_PORT_APT_GET="9104"
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/apt-get "$CHROOT_FOLDER"/usr/local/bin/apt-get
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/apt-get

   # gpg wrapper
   # SOCKS_PORT_GPG="9105"
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/gpg "$CHROOT_FOLDER"/usr/local/bin/gpg
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/gpg

   # ssh wrapper
   # SOCKS_PORT_SSH="9106"
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/ssh "$CHROOT_FOLDER"/usr/local/bin/ssh
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/ssh

   # git wrapper
   # SOCKS_PORT_GIT="9107"
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/git "$CHROOT_FOLDER"/usr/local/bin/git
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/git

   # SOCKS_PORT_HTPDATE="9108"
   # - native socks proxy support

   # wget wrapper
   # SOCKS_PORT_WGET="9109"
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/wget "$CHROOT_FOLDER"/usr/local/bin/wget
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/wget

   # SOCKS_PORT_WHONIXCHECK="9110"
   # - pointing uwt directly to this port
   # - no wrapper required

   # SOCKS_PORT_BITCOIN="9111"
   # - gui application with socks proxy settings
   # - not installed by default
   # - no wrapper required

   # SOCKS_PORT_PRIVOXY="9112"
   # - not installed by default
   # - no wrapper required

   # SOCKS_PORT_POLIPO="9113"
   # - not installed by default
   # - no wrapper required

   # curl wrapper
   # SOCKS_PORT_CURL="9117"
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/curl "$CHROOT_FOLDER"/usr/local/bin/curl
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/curl

   # apt-cacher-ng uwt helper script
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/apt-cacher-ng_uwt "$CHROOT_FOLDER"/usr/local/bin/apt-cacher-ng_uwt
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/apt-cacher-ng_uwt

   # mixmaster-update
   cp --recursive --preserve "$WHONIX_SOURCE_FOLDER"/whonix_shared/usr/local/bin/mixmaster-update "$CHROOT_FOLDER"/usr/local/bin/mixmaster-update
   chmod --recursive +x "$CHROOT_FOLDER"/usr/local/bin/mixmaster-update

   # More wrappers...
}



append_shared_pre() {
   #####################
   # Append Shared Pre #
   #####################

   # /etc/default/grub
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/etc/default/grub
   done < "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/default/appendto_grub

   # /etc/sudoers
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/etc/sudoers
   done < "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/appendto_sudoers

   # Ensure correct permissions on sudoers.
   chmod --recursive 0440 "$CHROOT_FOLDER"/etc/sudoers

   # /etc/hosts
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/etc/hosts
   done < "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/appendto_hosts

   # /etc/issue
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/etc/issue
   done < "$WHONIX_SOURCE_FOLDER"/whonix_shared/etc/appendto_issue
}



copy_shared_post() {
   #############################
   # Whonix-Shared Delete Post #
   #############################

   # Make daemons start again.
   rm -f "$CHROOT_FOLDER"/usr/sbin/policy-rc.d

   ###########################
   # Whonix-Shared Copy Post #
   ###########################

      ###########
      # Restore #
      ###########

   # gpg.conf
   # To support re-running the script for debugging.
   cp --recursive --preserve "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf.backup "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf || true
   chown --recursive user:user "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf

      ##########
      # Backup #
      ##########

   # Create backup of gpg.conf.
   # Do not override. This is important.
   cp --no-clobber --recursive --preserve "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf.backup
   chown --recursive user:user "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf.backup

      ########
      # Copy #
      ########

   # copy skel to user home
   cp --recursive --preserve "$CHROOT_FOLDER"/etc/skel/. "$CHROOT_FOLDER"/home/user
   chown --recursive user:user "$CHROOT_FOLDER"/home/user
}



append_shared_post() {
   ######################
   # Shared Append Post #
   ######################

   # gpg.conf
   # Must be post because gpg.conf has not been created by gpg
   # before gpg has not been run at least once.
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf
   done < "$WHONIX_SOURCE_FOLDER"/whonix_workstation/home/user/.gnupg/appendto_gpg.conf
   chown --recursive user:user "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf
}