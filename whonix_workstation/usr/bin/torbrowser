#!/bin/bash

## Whonix /usr/bin/torbrowser

## Tor Browser download script for Whonix.

script_help() {
   echo "
## This script may break when the file name
## or RecommendedTBBVersions format changes!
##
## Do not run as root!
##
## This script is currently only tested
## in Whonix. It could be easily
## made to work in Tails or on any Linux.
##
## -update
## Check if there is an update and ask to
## install it. Will create a backup.
##
## -force-install
## Installs without asking. Will create
## a backup.
##
## -dev-build-passthrough
## For developers only! Do not use!
## Internally used by the build scripts.
##
## -new-tab url
## Opens a new tab or starts Tor Browser and
## opens a new tab.
##
## -doc
## Starts Tor Browser and opens the
## Online Documentation.
##
## -start
## Starts Tor Browser.
##
## -help
## Show this help.
"
}

## -contribute
## -donate
## -forum
## -mailinglist
## -importantblog
## -featureblog
## -recommend



tb_lang_help() {
   echo '
Available languages as in October 2012:
ar
de
en-US
es-ES
fa
fr
it
ko
nl
pl
pt-PT
ru
vi
zh-CN

To check if further languages are supported visit:
https://www.torproject.org/dist/torbrowser/linux/
http://idnxcnkne4qt76tg.onion/dist/torbrowser/linux/

Always use:
    export TB_LANG="<language code>"
to set the language before running
torbrowser -update.

For example, for Vietnamese use:
    export TB_LANG="vi"

Replace "vi" with "zh-CN" for Chinese
and so on.
'
}



## -force-install is internally used by
## chroot-script 70_torbrowser



## Developer comment on this script:
## I would be very happy if this script would not be requried.
## Unfortunately, it is required. It works arround a lot bugs:
## - There is no deb/rpm/whatever package with Tor Browser.
##   https://trac.torproject.org/projects/tor/ticket/5236
##   https://trac.torproject.org/projects/tor/ticket/3994
## - There is no way to keep Tor Browser updated.
##   (Thandy doesn't exist yet.)
## - There is no way to add the Whonix Documentation well visible to Tor Browser:
##   https://trac.torproject.org/projects/tor/ticket/6025
##   https://trac.torproject.org/projects/tor/ticket/6053
## - Tor Browsers support for Isolating and Transparent Proxies is very limited:
##   https://trac.torproject.org/projects/tor/ticket/5611
## - tbb-scripts
##   https://github.com/adrelanos/tbb-scripts



## Debugging.
#set -x



root_check() {
   if [ "$(id -u)" != "0" ]; then
      #echo "INFO: torbrowser script running as user."
      true
   else
      ZENITY_TYPE="--error"
      output "ERROR: do not run this script as root! Please run it as user."
      exit 1
   fi
}



## Fortunately, on linux-image-486 kernel, while "uname --all" returns for example
## "Linux host 3.2.0-4-486 #1 Debian 3.2.41-2 i686 GNU/Linux",
## "uname --machine" returns "i686" and Tor Browser works fine with linux-image-486 kernel.
## (There are no 486 downloads for Tor Browser.)
##ARCH="x86_64"
##ARCH="i686"
ARCH="$(uname --machine)"
echo "INFO: $ARCH detected."



tb_error_handler() {
   local MSG="\
###########################################################
## torbrowser script bug.
## No panic. Nothing is broken. Just some rare condition
## has been hit. Try again later. There is likely a
## solution for this problem. Please see the Whonix News,
## Whonix User Help Forum and Whonix Documentation.
## https://sourceforge.net/p/whonix/wiki/TorBrowser/
## Please report this bug!
##
## BASH_COMMAND: $BASH_COMMAND
##
## Experts only:
## bash -x torbrowser
###########################################################\
"
   echo "$MSG"
   ZENITY_TYPE="--error"
   output "$MSG"
   progress_bar 100
   exit 1
}

trap "tb_error_handler" ERR



debug() {
   ## debug is just a marker for messages which is are not essential for users.
   ## either in cli or gui.
   echo "$*"
}



output() {
   echo "$*"

   #echo "ZENITY_TYPE= $ZENITY_TYPE"

   if [ "$TB_FORCE_INSTALL" = "1" ]; then
      return
   fi

   zenity --title="Tor Browser Update Check" "$ZENITY_TYPE" --text "
Tor Browser Update Check:
----------------------------------------------------------------------

$*"

   return "$?"
}



USERNAME="$(whoami)"

TEMP1="Possible reasons:
- no internet connectivity

Please check: Start menu -> System -> Whonix Check
              or in Terminal: whonixcheck
              or in Terminal with debugging: whonixcheck -v

Run whonixcheck on Whonix-Gatway as well.

If whonixcheck reports no problems with internet activity and this still fails, please report a bug!"

TEMP2="As last resort you can also manually update Tor Browser.

Check Whonix News:
https://sourceforge.net/p/whonix/wiki/Download/#stay-tuned

Check for latest version Tor Browser Bundle version:
https://blog.torproject.org

Manually update:
https://sourceforge.net/p/whonix/wiki/ManualTBupdate/"



DOWNLOAD_FAIL_HELP="$TEMP1

$TEMP2"



VERSION_DETECTION_ERROR="Could not find out latest Tor Browser version!

$TEMP2"



GATEWAY_IP="192.168.0.10"
SOCKS_PORT_TBB_DOWNLOAD="9115"
ICON="--window-icon /usr/share/whonix/icons/tbupdate.ico"

DOC_LINK="https://sourceforge.net/p/whonix/wiki/Documentation/"
CONTRIBUTE_LINK="https://sourceforge.net/p/whonix/wiki/Contribute/"
DONATE_LINK="https://sourceforge.net/p/whonix/donate/"
FORUM_LINK="https://sourceforge.net/p/whonix/discussion/"
MAILINGLIST_LINK="https://sourceforge.net/p/whonix/mailman/"
IMPORTANTBLOG_LINK="https://sourceforge.net/p/whonix/blog/"
FEATUREBLOG_LINK="https://sourceforge.net/p/whonix/featureblog/"
IMPORTANTBLOG_OFFLINE_LINK="file:///var/lib/whonix/whonixcheck/importantblog.html"
FEATUREBLOG_OFFLINE_LINK="file:///var/lib/whonix/whonixcheck/featureblog.html"


## provides tbbversion function
source /usr/lib/whonix/whonixcheck/help_tbbversion

## provides $CURL variable
source /usr/lib/whonix/whonixcheck/help_uwt_tool
uwt_tool



#debug "TB_LANG: $TB_LANG"

## Check if TB_LANG exists and is not empty.
if [[ "$TB_LANG" && "${TB_LANG}" ]]; then
   #debug "INFO: Tor Browser language variable is set to "$TB_LANG"."
   true
else
   #debug "INFO: Tor Browser language variable not found. Setting TB_LANG to the default en-US."
   TB_LANG="en-US"
fi



progress_bar() {
   if [ "$TB_FORCE_INSTALL" = "1" ]; then
      return
   fi
   if [ "$DISPLAY" ]; then
      # zenity
      echo "$1" >&3
   else
      echo "progress: $1"
   fi
}



#########################################################################
## tb_update_check                                                      #
#########################################################################

tb_update_check() {
   trap "tb_error_handler" ERR

   #################################
   ## preparation
   #################################
   ## do not re-download Tor Browser if a previous build already did
   if [ "$DEV_BUILD_PASSTHROUGH" = "1" ]; then
      if [ -d ~/tor-browser_"$TB_LANG"/ ]; then
         echo "torbrowser: Not downloading Tor Browser again,
because ~/tor-browser_"$TB_LANG"/ already exists."
         exit 0
      fi
   fi

   ## progress bar for update check
   if [ "$TB_FORCE_INSTALL" = "1" ]; then
      true
   else
      exec 3> >(zenity --timeout 86400 --no-markup \
   --window-icon /usr/share/whonix/icons/tbupdate.ico \
   --title="Tor Browser Update Check" "--progress" --auto-close --auto-kill --text "Checking Tor Browser version... Will take a moment...")
   fi

   if [ "$DEV_PASSTHROUGH" = "1" ]; then
      CURL_PROXY=""
   else
      CURL_PROXY="--socks5-hostname socks5h://"$GATEWAY_IP":"$SOCKS_PORT_TBB_DOWNLOAD"/"
   fi

   #################################
   ## Getting latest version number
   #################################

   progress_bar 10
   debug "INFO: Find out latest version..."
   LINK="https://check.torproject.org/RecommendedTBBVersions"
   debug "INFO: Downloading: "$LINK""
   
   mkdir --parents ~/.tb
   
   CURL_RETURN="0"
   $CURL \
      $CURL_PROXY \
      --tlsv1 \
      --proto =https \
      --max-time 300 \
      --output ~/.tb/RecommendedTBBVersions \
      "$LINK" \
      || { CURL_RETURN="$?" ; true; };

   progress_bar 95

   ## Check if curl failed.
   if [ ! "$CURL_RETURN" = "0" ]; then
      ZENITY_TYPE="--error"
      output "Failed to download: "$LINK"

$DOWNLOAD_FAIL_HELP"
      progress_bar 100
      exit 1
   fi

   progress_bar 96
}



tb_download() {
   trap "tb_error_handler" ERR

   RecommendedTBBVersions=~/.tb/RecommendedTBBVersions

   tbbversion

   if [ "$TBBVERSION" = "UNKNOWN" ]; then
      ZENITY_TYPE="--error"
      output "$VERSION_DETECTION_ERROR"
      progress_bar 100
      exit 1
   fi

   progress_bar 97

   #################################
   ## Getting currently installed version number
   #################################

   progress_bar 98

   ## Will fail if the file does not exist, i.e. Tor Browser not installed.
   ## Will not break the script.
   TBBINSTALLEDVERSION="$(head -1 ~/tor-browser_"$TB_LANG"/Docs/version)" || true

   progress_bar 100

   if [ "$TBBINSTALLEDVERSION" != "" ]; then
      #debug "INFO: Successfully detected Tor Browser version."
      true
   else
      debug "\
INFO: Could not determine the currently installed Tor Browser version.
INFO: This could be either because none is installed or because the version format changed.\
"
      TBBINSTALLEDVERSION="UNKNOWN OR NONE"
   fi

   if [ "$TBBINSTALLEDVERSION" = "$TBBVERSION" ]; then
      VERSION_CHECK_RESULT="Looks like your Tor Browser version is up to date."
   else
      VERSION_CHECK_RESULT="Looks like there is an update for Tor Browser."
   fi

   answer="0"

   ZENITY_TYPE="--question"

   output "\
"$VERSION_CHECK_RESULT"

Please close Tor Browser if you want to upgrade!
Currently installed version: "$TBBINSTALLEDVERSION"
Online detected version    : "$TBBVERSION"

If your currently installed version is:
   higher: you are likely victim of a downgrade attack, SAY NO NOW!
   equal : only proceed, if you want to create a new browser profile.
   lower : you should upgrade.

YOUR BROWSER WILL BE KILLED.
YOUR WHOLE BROWSER PROFILE INCLUDING BOOKMARKS AND PASSWORDS WILL GET REPLACED!

A backup of your old Tor Browser and settings will be created in your home folder.
It is a good idea to delete old TBB backups once in a while if you are running low with disk space.\
" || { answer=$? ; true; };

   ## zenity return codes
   ## no 1
   ## yes 0

   debug "answer: $answer"

   if [ "$TB_FORCE_INSTALL" = "1" ]; then
      debug "INFO: TB_FORCE_INSTALL = 1"
      true
   else
      if [ "$answer" = "1" ]; then 
         ## Exit this function.
         exit 0
      fi
   fi

   ## progress bar for download
   if [ "$TB_FORCE_INSTALL" = "1" ]; then
      true
   else
      exec 3> >(\
         zenity \
         --timeout 86400 \
         --no-markup \
         --window-icon /usr/share/whonix/icons/tbupdate.ico \
         --title="Tor Browser Update Check" \
         --progress \
         --auto-close \
         --auto-kill \
         --text "Downloading Tor Browser... Will take a while..."\
      )
   fi

   ###########################################################
   debug "INFO: Killing Tor Browser if it is still running..."
   ###########################################################

   progress_bar 5
   killall firefox || true

   #######################################
   debug "INFO: Installing Tor Browser..."
   #######################################

   trap "tb_error_handler" ERR

   rm --recursive --force ~/.tb/gpgtmpdir/
   mkdir --parents ~/.tb/gpgtmpdir/
   chmod 700 ~/.tb/gpgtmpdir/

   gpg --homedir ~/.tb/gpgtmpdir/ --import /usr/share/whonix/keys/tbb-keys.d/*

   ## Download from the torproject.org hidden service, instead over clearnet,
   ## thus not involving any Tor exist nodes.
   ## $WHONIX is an environment variable only set in Whonix (by /etc/environment).
   if [ "$WHONIX" = 1 ]; then
      TBB_REMOTE_FOLDER="http://idnxcnkne4qt76tg.onion/dist/torbrowser/linux"
      ## Connections to hidden services are automatically encrypted end-to-end.
      CURL_FORCE_SSL=""
   else
      ## Should only be the case when building Whonix from source while not being inside Whonix.
      TBB_REMOTE_FOLDER="https://www.torproject.org/dist/torbrowser/linux"
      CURL_FORCE_SSL="--tlsv1 --proto =https"
   fi

   progress_bar 10

   debug "INFO: Downloading GPG signature..."
   TBB_SIG_FILENAME="tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz.asc"
   TBB_SIG_LINK=""$TBB_REMOTE_FOLDER"/"$TBB_SIG_FILENAME""
   debug "INFO: Downloading: "$TBB_SIG_LINK""
   
   CURL_RETURN="0"
   $CURL \
      $CURL_PROXY \
      $CURL_FORCE_SSL \
      --max-time 300 \
      --output ~/.tb/"$TBB_SIG_FILENAME" \
      "$TBB_SIG_LINK" \
      || { CURL_RETURN="$?" ; true; };

   ## Check if curl failed.
   if [ ! "$CURL_RETURN" = "0" ]; then
      ZENITY_TYPE="--error"
      output "Failed to download: "$TBB_SIG_LINK"

$DOWNLOAD_FAIL_HELP"
      progress_bar 100
      exit 1
   fi

   progress_bar 30

   debug "INFO: Downloading Tor Browser Bundle: $TBBVERSION"
   TBB_PACKAGE_FILENAME="tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz"
   TBB_PACKAGE_LINK=""$TBB_REMOTE_FOLDER"/"$TBB_PACKAGE_FILENAME""
   debug "INFO: Downloading: "$TBB_PACKAGE_LINK""
   
   CURL_RETURN="0"
   $CURL \
      $CURL_PROXY \
      $CURL_FORCE_SSL \
      --output ~/.tb/"$TBB_PACKAGE_FILENAME" \
      "$TBB_PACKAGE_LINK" \
      || { CURL_RETURN="$?" ; true; };

   ## Check if curl failed.
   if [ ! "$CURL_RETURN" = "0" ]; then
      ZENITY_TYPE="--error"
      output "Failed to download: "$TBB_PACKAGE_LINK"

$DOWNLOAD_FAIL_HELP"
      progress_bar 100
      exit 1
fi

   progress_bar 90

}

tb_verify() {
   trap "tb_error_handler" ERR

   debug "INFO:
## Verifying GPG signature.
## Not using the users GPG keyring also ensures, that the key can be only
## singed by the GPG keys we added. Signatures from random people from the
## users keyring will be ignored.
"

   TB_GPG_VERIFY_RETURN="0"
   gpg \
   --homedir ~/.tb/gpgtmpdir/ \
   --verify ~/.tb/"$TBB_SIG_FILENAME" \
   ~/.tb/"$TBB_PACKAGE_FILENAME" \
   || { TB_GPG_VERIFY_RETURN="$?" ; true; };

   debug "INFO: Signature valid."
   
   if [ ! "$TB_GPG_VERIFY_RETURN" = "0" ]; then
      ZENITY_TYPE="--error"
output "\
ERROR: GPG download signature could NOT be verified.
ERROR: Tor Browser update failed! Try again later.\
"
      progress_bar 100
      exit 1      
   fi
}



tb_extract() {
   trap "tb_error_handler" ERR

   tar -xzvf ~/.tb/"$TBB_PACKAGE_FILENAME" -C ~/.tb/

   progress_bar 91
   ## The tor-browser_"$TB_LANG"/Docs folder should already exist.
   ## Just to make sure the script will not break in case the get changed by upstream.
   mkdir --parents tor-browser_"$TB_LANG"/Docs

   progress_bar 92
   debug "Moving the Tor Browser Bundle startup script to tor-browser_"$TB_LANG"/Docs/..."
   mv ~/.tb/tor-browser_"$TB_LANG"/start-tor-browser ~/.tb/tor-browser_"$TB_LANG"/Docs/

   ## Tor Browser changelog has been forgotten to update.
   ## https://sourceforge.net/p/whonix/discussion/general/thread/6122990d/
   ## To play it safe and having a chance of finding out the installed version,
   ## we create a file ourselves to remember it.
   debug "Creating version file tor-browser_"$TB_LANG"/Docs/version."
   echo ""$TBBVERSION"" > ~/.tb/tor-browser_"$TB_LANG"/Docs/version

   progress_bar 93
   debug "INFO: Creating Unbundled Tor Browser startup script..."
   ## Using this until Tor Browser upstream patch #7266 gets accepted.
   ##    improve RelativeLink.sh script comments, patch attached
   ##    https://trac.torproject.org/projects/tor/ticket/7266
   ##
   ## After #7266 got accepted, a new patch with TB_STANDALONE will
   ## be proposed.
   ##
   ## Has been copied into Whonix-Workstation at build time.
   cp /usr/share/whonix/start-tor-browser ~/.tb/tor-browser_"$TB_LANG"/start-tor-browser
   chmod +x ~/.tb/tor-browser_"$TB_LANG"/start-tor-browser

   debug "INFO: Moving old folder ~/tor-browser_"$TB_LANG"..."
   mv ~/tor-browser_"$TB_LANG" ~/"tor-browser_"$TB_LANG".old."$(date '+%F-%H:%M:%S')"" || true
   
   debug "INFO: Moving temporary folder ~/.tb/tor-browser_"$TB_LANG" to ~/tor-browser_"$TB_LANG"."
   mv ~/.tb/tor-browser_"$TB_LANG" ~/tor-browser_"$TB_LANG"

   ZENITY_TYPE="--info"
   progress_bar 100
   
   local TEMP=~/tor-browser_"$TB_LANG"/
   output "Finished installing Tor Browser. Can be found in $TEMP."
}



#########################################################################
## tb_start_new_tab                                                     #
#########################################################################

tb_start_new_tab() {
   trap "tb_error_handler" ERR

   if [ ! -d ~/tor-browser_"$TB_LANG"/ ]; then
      ZENITY_TYPE="--error"
      output "Tor Browser is not installed?
The folder ~/tor-browser_"$TB_LANG"/ does not exist.

Please run: Start Menu -> Applications -> System -> Tor Browser Updater
            or in Terminal: torbrowser -update"
      exit 1
   fi

   PID="$(pidof firefox)" || true

   if [ "$PID" = "" ]; then
      debug "INFO: Starting Tor Browser..."
      cd ~/tor-browser_"$TB_LANG"/
      ~/tor-browser_"$TB_LANG"/App/Firefox/firefox --profile Data/profile &
      ## Unfortunately, we must hard code the time to wait before
      ## we try open extra tabs. Just waiting for the pid to exists
      ## does not do the trick. I do not know a way to ask Firefox,
      ## if it is only partially or fully load. When trying to open
      ## a new tab before it is fully load, a popup "profile not found"
      ## will be shown, which is confusing.

      if [ "$LINK" = "" ]; then
         return
      fi
      debug "INFO: Waiting 30 seconds for Tor Browser to start..."
      sleep 30
   else
      debug "INFO: Tor Browser is already running"
   fi

   debug "INFO: Opening link..."

   #debug "tb_start_new_tab debug: ~/tor-browser_"$TB_LANG"/App/Firefox/firefox --profile Data/profile -new-tab \"$LINK\" &"

   cd ~/tor-browser_"$TB_LANG"/
   ~/tor-browser_"$TB_LANG"/App/Firefox/firefox --profile Data/profile -new-tab "$LINK" &
}



################################################################ 
## -update                                                     #
################################################################ 
if [[ "$1" = "-update" ]]; then
   root_check
   tb_update_check
   tb_download
   tb_verify
   tb_extract
   exit 0
fi



################################################################ 
## -force-install                                              #
################################################################ 
if [[ "$1" = "-force-install" ]]; then
   root_check
   export TB_FORCE_INSTALL="1"
   tb_update_check
   tb_download
   tb_verify
   tb_extract
   export TB_FORCE_INSTALL="0"
   exit 0
fi



################################################################ 
## -dev-build-passthrough                                      #
################################################################ 
if [[ "$1" = "-dev-build-passthrough" ]]; then
   root_check
   DEV_BUILD_PASSTHROUGH="1"
   DEV_PASSTHROUGH="1"
   TB_FORCE_INSTALL="1"
   tb_update_check
   tb_download
   tb_verify
   tb_extract
   DEV_BUILD_PASSTHROUGH="0"
   DEV_PASSTHROUGH="0"
   TB_FORCE_INSTALL="0"
   exit 0
fi



################################################################ 
## -noreadme                                                   #
################################################################ 
## for compatibility
if [[ "$1" = "-noreadme" ]]; then
   root_check
   LINK=""
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -start                                                      #
################################################################ 
if [[ "$1" = "-start" ]]; then
   root_check
   LINK=""
   tb_start_new_tab
   exit 0
fi


################################################################ 
## -readme                                                     #
################################################################ 
## for compatibility
if [[ "$1" = "-readme" ]]; then
   root_check
   LINK="$DOC_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -doc                                                        #
################################################################ 
if [[ "$1" = "-doc" ]]; then
   root_check
   LINK="$DOC_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -contribute                                                 #
################################################################ 
if [[ "$1" = "-contribute" ]]; then
   root_check
   LINK="$CONTRIBUTE_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -donate                                                     #
################################################################ 
if [[ "$1" = "-donate" ]]; then
   root_check
   LINK="$DONATE_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi


################################################################ 
## -forum                                                      #
################################################################ 
if [[ "$1" = "-forum" ]]; then
   root_check
   LINK="$FORUM_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -mailinglist                                                #
################################################################ 
if [[ "$1" = "-mailinglist" ]]; then
   root_check
   LINK="$MAILINGLIST_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -importantblog                                              #
################################################################ 
if [[ "$1" = "-importantblog" ]]; then
   root_check
   LINK="$IMPORTANTBLOG_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -featureblog                                                #
################################################################ 
if [[ "$1" = "-featureblog" ]]; then
   root_check
   LINK="$FEATUREBLOG_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -recommend                                                  #
################################################################ 
if [[ "$1" = "-recommend" ]]; then
   root_check
   LINK="$IMPORTANTBLOG_OFFLINE_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   LINK="$FEATUREBLOG_OFFLINE_LINK"
   debug "INFO: Setting link to $LINK"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -new-tab                                                    #
################################################################ 
if [[ "$1" = "-new-tab" ]]; then
   root_check
   debug "INFO: Setting link to $2" 
   LINK="$2"
   tb_start_new_tab
   exit 0
fi



################################################################ 
## -help                                                       #
################################################################ 
if [[ "$1" = "-help" ]]; then
   script_help
   exit 0
fi



################################################################ 
## -lang                                                       #
################################################################ 
if [[ "$1" = "-lang" ]]; then
   tb_lang_help
   exit 0
fi



################################################################ 
## no option chosen                                            # 
################################################################ 
if [[ "$1" = "" ]]; then 
   echo "torbrowser: No option chosen. Please run with -help to find out more."
   exit 0
fi

## End of Whonix /usr/bin/torbrowser

