#!/bin/bash
## /usr/local/bin/torbrowser

WHONIX_README="http://sourceforge.net/p/whonix/wiki/Readme/"

## Only in case you are not on Whonix and interested in this script.
##
## 	apt-get install --no-install-recommends torsocks
## 	apt-get install ed

script_help() {
echo "
## Not a multiuser script!
## Do not run as root!
## Only tested for user \"user\".
##
## This script depends on torsocks,
## uwt and ed. (Available in Whonix.)
##
## -update
## Check if there is an update and ask to
## install it. Will create a backup.
##
## -force-install
## Installs without asking. Will create
## a backup. Also internally used by
## whonix_workstation script.
##
## -force-install-uwt-dev-passthrough
## For developers only! Do not use!
## Downloads while circumventing uwt,
## thus though TransPort when using Whonix.
##
## -new-tab url
## Opens a new tab or starts Tor Browser and
## opens a new tab.
##
## -readme
## Starts Tor Browser and opens the Whonix
## online Readme.
##
## -noreadme
## Starts Tor Browser without opening
## the Whonix online Readme.
##
## -help
## Show this help.
"
}



## Comment on this script:
## I would be very happy if this script would not be requried.
## Unfortunately, it is required. It works arround a lot bugs:
## - There is no deb/rpm/whatever package with Tor Browser.
##   https://trac.torproject.org/projects/tor/ticket/5236
##   https://trac.torproject.org/projects/tor/ticket/3994
## - There is no way to keep Tor Browser updated.
##   (Thandy doesn't exist yet.)
## - There is no way to add the Whonix Readme well visible to Tor Browser:
##   https://trac.torproject.org/projects/tor/ticket/6025
##   https://trac.torproject.org/projects/tor/ticket/6053
## - Tor Browsers support for Isolating and Transparent Proxies is very limited:
##   https://trac.torproject.org/projects/tor/ticket/5611
## This script may break when the file name or RecommendedTBBVersions format changes!



## For developers:
## Please keep in mind, we allow running this without root. If you ever
## make some changes, which require root, please disallow running the
## script without root.



## Debugging.
#set -x



## Available languages as in October 2012:
## ar
## de
## en-US
## es-ES
## fa
## fr
## it
## ko
## nl
## pl
## pt-PT
## ru
## vi
## zh-CN

#echo "TB_LANG: $TB_LANG"

# Check if TB_LANG exists and is not empty.
if [[ "$TB_LANG" && "${TB_LANG}" ]]; then
   echo "INFO: Tor Browser language variable is set to "$TB_LANG"."
else
   echo "INFO: Tor Browser language variable not found. Setting TB_LANG to the default en-US."
   TB_LANG="en-US"
fi

## Currently hardcoded. Will change if we start offering 64 bit builds.
## ARCH="x86_64"
ARCH="i686"



tb_error_handler() {
   echo "
#########################################################
## Whonix script bug.
## BASH_COMMAND: $BASH_COMMAND
## Please report this bug.
## You can enable debugging in /usr/local/bin/torbrowser
## Uncomment set -x.
#########################################################
"
   exit 1
}

trap "tb_error_handler" ERR



USERNAME="user"
GATEWAY_IP="192.168.0.10"
SOCKS_PORT_TBB_DOWNLOAD="9115"
SOCKS_PORT_TBB_GPG="9116"



#########################################################################
## gpg_key_verification_error                                           #
#########################################################################

gpg_key_verification_error() {
trap "tb_error_handler" ERR

echo "ERROR: Could not verify GPG key."
echo "INFO: Tor Browser Download failed. Try again later using:"
echo "      torbrowser -update"
exit 1
}



gpg_download_verification_error() {
trap "tb_error_handler" ERR

echo "ERROR: GPG download signature could NOT be verified."

## No longer deleting, might be interesting in case an adversary
## tampered with it.
#echo "INFO: Deleting tor-browser-gnu-linux-*.tar.gz*..."
#rm tor-browser-gnu-linux-*.tar.gz*

cd "/home/"$USERNAME""
## Tell about failure.
touch TorBrowser_installation_FAILED
echo "ERROR: Tor Browser update failed!" >&2
echo "INFO: Tor Browser Download failed. Try again later using:"
echo "      torbrowser -update"
exit 1
}



#########################################################################
## tb_update_check                                                      #
#########################################################################

tb_update_check() {
trap "tb_error_handler" ERR

#################################
## preparation
#################################
## Get into correct directory is required for relative paths.
cd "/home/"$USERNAME""

## Delete old tbbdownload folder.
rm -r "tbbdownload/" || true

## Create new tbbdownload folder.
mkdir -p "tbbdownload"

## Get into the tbbdownload folder.
cd "tbbdownload"

echo "
#################################
## Getting latest version number
#################################
"

echo "INFO: Find out latest version..."
/usr/bin/curl --socks5-hostname socks5h://"$GATEWAY_IP":"$SOCKS_PORT_TBB_DOWNLOAD"/ \
--tlsv1 --proto =https --output RecommendedTBBVersions https://check.torproject.org/RecommendedTBBVersions

TBBVERSION="`grep Linux-"$ARCH" RecommendedTBBVersions`"
TBBVERSION="`echo "$TBBVERSION" | sed 's/"//g'`"
TBBVERSION="`echo "$TBBVERSION" | sed 's/,//g'`"
TBBVERSION="`echo "$TBBVERSION" | sed 's/-i686//g'`"
TBBVERSION="`echo "$TBBVERSION" | sed 's/-x86_64//g'`"
TBBVERSION="`echo "$TBBVERSION" | sed 's/-Linux//g'`"

echo "
#################################
## Getting currently installed version number
#################################
"

## Will fail if the file does not exist, i.e. Tor Browser not installed.
## Will not break the script.
TBBINSTALLEDVERSION="`head -1 ../tor-browser_"$TB_LANG"/Docs/changelog`" || true
TBBINSTALLEDVERSION="`echo "$TBBINSTALLEDVERSION" | sed 's/Tor Browser Bundle (//g'`"
TBBINSTALLEDVERSION="`echo "$TBBINSTALLEDVERSION" | sed 's/); suite=linux//g'`"

if [ "$TBBINSTALLEDVERSION" != "" ]; then
   #echo "INFO: Successfully detected Tor Browser version."
   true
else
   echo "INFO: Could not determine the currently installed Tor Browser version."
   echo "INFO: This could be either because none is installed or because the version format changed."
   TBBINSTALLEDVERSION="UNKNOWN"
fi

if [ "$TBBINSTALLEDVERSION" = "$TBBVERSION" ]; then
   echo "INFO: Looks like your Tor Browser version is up to date."
else
   echo "INFO: Looks like there is an update for Tor Browser."
fi

echo "INFO: Please close Tor Browser if you want to upgrade!"
echo "INFO: Locally installed version: "$TBBINSTALLEDVERSION""
echo "INFO: Online detected version  : "$TBBVERSION""
echo 'INFO: If your currently installed version is higher, you are likely victim of a downgrade attack, SAY NO NOW!'
echo "INFO: If your currently installed version is lower, you should upgrade, if it matches say no now."
echo "WARNING: YOUR BROWSER WILL BE KILLED."
echo "WARNING: YOUR WHOLE BROWSER PROFILE INCLUDING BOOKMARKS AND PASSWORDS WILL GET REPLACED!"
echo "INFO: A backup of your old Tor Browser and settings will be created in your home folder." 
echo "INFO: It is a good idea to delete old TBB backups once in a while if you are running low with disk space."

if [ "$TB_FORCE_INSTALL" = "1" ]; then
	echo "INFO: TB_FORCE_INSTALL = 1"
	true
else
	echo -n "Do you want to upgrade? [y/N]"
	read answer
	if [ "$answer" != "Y" -a "$answer" != "y" ]; then 
		cd "/home/"$USERNAME""
		echo "INFO: Deleting temporary folder tbbdownload."
		rm -r "tbbdownload" || true
		## Exit this function.
		exit 0
	fi
fi

echo "
#################################
## Killing Tor Browser if it is still running.
#################################
"

killall firefox || true

echo "
#################################
## Installing Tor Browser...
#################################
"

## Importing GPG keys...
echo "INFO: Importing GPG keys to the temporary directory gpgtmpdir..."
echo "INFO: The GPG keys will not be permanently added to your keyring."
mkdir "gpgtmpdir"
chmod 700 "gpgtmpdir/"

echo "INFO: Getting the GPG keys... Verify the fingerprints."

## !!!VERIFY!!!
##
## https://www.torproject.org/docs/signing-keys.html.en
## http://idnxcnkne4qt76tg.onion/docs/signing-keys.html.en

## !!!VERIFY!!!
echo "INFO: Getting Erinn Clark's GPG key..."
echo "INFO: You can ignore the libtorsocks warning about the DNS leak. See Whonix Design. There can be no DNS leaks."
/usr/local/bin/uwt -t 5 -i "$GATEWAY_IP" -p "$SOCKS_PORT_TBB_GPG" /usr/bin/gpg \
--homedir gpgtmpdir --keyserver hkp://2eghzlv2wwcq7u7y.onion --recv 8738A680B84B3031A630F2DB416F061063FEE659

## !!!VERIFY!!!
echo "INFO: Getting Sebastian Hahn's GPG key..."
echo "INFO: You can ignore the libtorsocks warning about the DNS leak. See Whonix Design. There can be no DNS leaks."
/usr/local/bin/uwt -t 5 -i "$GATEWAY_IP" -p "$SOCKS_PORT_TBB_GPG" /usr/bin/gpg \
--homedir gpgtmpdir --keyserver hkp://2eghzlv2wwcq7u7y.onion --recv 261C5FBE77285F88FB0C343266C8C2D7C5AA446D

## !!!VERIFY!!!
echo "INFO: Verifying Erinn Clark's GPG key..."
trap "gpg_key_verification_error" ERR
gpg --homedir "gpgtmpdir" --fingerprint 8738A680B84B3031A630F2DB416F061063FEE659
echo "INFO: Successfully verified Erinn Clark's GPG key."

## !!!VERIFY!!!
echo "INFO: Verifying Sebastian Hahn's GPG key..."
trap "gpg_key_verification_error" ERR
gpg --homedir "gpgtmpdir" --fingerprint 261C5FBE77285F88FB0C343266C8C2D7C5AA446D
echo "INFO: Successfully verified Sebastian Hahn's GPG key."

trap "tb_error_handler" ERR

echo "INFO: Downloading latest Tor Browser Bundle..."
## http://idnxcnkne4qt76tg.onion/dist/torbrowser/linux/tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz
/usr/bin/curl --socks5-hostname socks5h://"$GATEWAY_IP":"$SOCKS_PORT_TBB_DOWNLOAD"/ \
--tlsv1 --proto =https --output tor-browser-gnu-linux-"$ARCH"-$TBBVERSION-dev-"$TB_LANG".tar.gz \
https://www.torproject.org/dist/torbrowser/linux/tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz

echo "INFO: Downloading GPG signature..."
## http://idnxcnkne4qt76tg.onion/dist/torbrowser/linux/tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz.asc
/usr/bin/curl --socks5-hostname socks5h://"$GATEWAY_IP":"$SOCKS_PORT_TBB_DOWNLOAD"/ \
--tlsv1 --proto =https --output tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz.asc \
https://www.torproject.org/dist/torbrowser/linux/tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz.asc

echo "INFO:
## Verifying GPG signature.
## Not using the users GPG keyring also ensures, that the key can be only
## singed by the GPG keys we added. Signatures from random people from the
## users keyring will be ignored.
"
trap "gpg_download_verification_error" ERR
gpg --homedir "gpgtmpdir" --verify tor-browser*.asc

trap "tb_error_handler" ERR
echo "INFO: Signature valid."

if [ -f tor-browser-gnu-linux-*.tar.gz ]; then
	echo "INFO: Regular file tor-browser-gnu-linux-*.tar.gz exists."
	echo "INFO: Unpacking..."
	 tar -xzvf tor-browser-gnu-linux-*.tar.gz
else
	echo "FATAL ERROR: Regular file tor-browser-gnu-linux-*.tar.gz exists. Please report this bug!"
fi

echo "Fixing the start script..."
ed -s tor-browser_"$TB_LANG"/start-tor-browser <<< $',s/.\/App\/vidalia --datadir Data\/Vidalia\//.\/App\/Firefox\/firefox --profile Data\/profile/g\nw'

#echo "INFO: Deleting stuff we do not need..."
## Overwrite with true in case filenames change.
## In past minor things changed, like Tor was renamed to tor.
#rm "./tor-browser_"$TB_LANG"/App/tor" || true
#rm "./tor-browser_"$TB_LANG"/App/vidalia" || true
#rm -r "./tor-browser_"$TB_LANG"/Data/Tor" || true
#rm -r "./tor-browser_"$TB_LANG"/Data/Vidalia" || true
## We should not delete it, contains licenses.
#rm -r "./tor-browser_"$TB_LANG"/Docs/{Tor,Vidalia,Qt,README-TorBrowserBundle}" || true
#rm -r "./tor-browser_"$TB_LANG"/Lib" || true

echo "INFO: Calling the function tb_create_user_js()..."
tb_create_user_js

echo "INFO: Moving old folder tor-browser_"$TB_LANG"..."
mv /home/"$USERNAME"/tor-browser_"$TB_LANG" /home/"$USERNAME"/tor-browser_"$TB_LANG".old."`date '+%F-%H:%M:%S'`" || true
echo "INFO: Moving temporary folder tbbdownload/tor-browser_"$TB_LANG" to /home/"$USERNAME"/tor-browser_"$TB_LANG""
mv "/home/"$USERNAME"/tbbdownload/tor-browser_"$TB_LANG"" "/home/"$USERNAME"/tor-browser_"$TB_LANG""
echo "INFO: Deleting temporary folder tbbdownload..."
rm -r "/home/"$USERNAME"/tbbdownload"
echo "INFO: Finished installing TBB. Can be found in /home/"$USERNAME"/tor-browser_"$TB_LANG"."
}



#########################################################################
## tb_create_user_js                                                    #
#########################################################################

tb_create_user_js() {
trap "tb_error_handler" ERR

## Editing /home/"$USERNAME"/tor-browser_"$TB_LANG"/Data/profile/users.js
## http://kb.mozillazine.org/User.js_file
## Configuring Tor Button to use SOCKSPort 9100 on 192.168.0.10 (Whonix-Gateway);
## expanding extensions.torbutton.banned_ports with Whonix specific ports.

echo '
## Begin of Whonix user.js.
## If you edit this file while Firefox is running, your changes will be
## overwritten, when you close Firefox.

## How to create the user.js network settings:
## 1. Make a backup of prefs.js.
## 1. Start Tor Browser with the patched start script.
## 2. Apply Whonix proxy settings using the Tor Button settings dialog..
## 3. Make a diff from the old and the new pref.js.
## 4. Copy the relevant changes to user.js.

## network settings
user_pref("network.proxy.socks", "192.168.0.10");
user_pref("network.proxy.socks_port", 9100);
user_pref("extensions.torbutton.use_privoxy", false);
user_pref("extensions.torbutton.settings_method", "custom");
user_pref("extensions.torbutton.socks_host", "192.168.0.10");
user_pref("extensions.torbutton.socks_port", 9100);
user_pref("extensions.torbutton.custom.socks_host", "192.168.0.10");
user_pref("extensions.torbutton.custom.socks_port", 9100);

## misc settings
user_pref("extensions.torbutton.prompt_torbrowser", false);
user_pref("general.autoScroll", true);

## banned ports
## https://www.torproject.org/torbutton/en/design/
## http://idnxcnkne4qt76tg.onion/torbutton/en/design/
## and search for extensions.torbutton.banned_ports
user_pref\
("extensions.torbutton.banned_ports", "\
8118,8123,9050,9051,\
9100,9101,9102,9103,9104,9105,9106,9107,9108,9109,\
9110,9111,9112,9113,9114,9115,9116,9117,9118,9119,\
9150,9151,9152,9153,9154,9155,9156,9157,9158,9159,\
9160,9161,9162,9163,9164,9165,9166,9167,9168,9169,\
9170,9171,9172,9173,9174,9175,9176,9177,9178,9179,\
9180,9181,9182,9183,9184,9185,9186,9187,9188,9189,\
");

## End of Whonix user.js.
' | tee /home/"$USERNAME"/tbbdownload/tor-browser_"$TB_LANG"/Data/profile/user.js
}



#########################################################################
## tb_start_new_tab                                                     #
#########################################################################

tb_start_new_tab() {
   trap "tb_error_handler" ERR

   PID="`pidof firefox`" || true

   if [ "$PID" = "" ]; then
      echo "INFO: Starting Tor Browser..."
      ~/tor-browser_"$TB_LANG"/start-tor-browser &
   else
      echo "INFO: Tor Browser is already running"
   fi

   while [ "$PID" = "" ]
   do
      echo "INFO: Waiting 10 seconds for Tor Browser to start..."
      sleep 10
      PID="`pidof firefox`" || true
   done

   echo "INFO: Opening link..."

   #echo "tb_start_new_tab debug: ~/tor-browser_"$TB_LANG"/App/Firefox/firefox --profile Data/profile -new-tab \"$LINK\" &"

   ~/tor-browser_"$TB_LANG"/App/Firefox/firefox --profile Data/profile -new-tab "$LINK" &
}



################################################################
## tb_start_without_readme                                     #
################################################################

tb_start_without_readme() {
   trap "tb_error_handler" ERR

   ~/tor-browser_"$TB_LANG"/start-tor-browser &
}



################################################################ 
## -update                                                     #
################################################################ 
if [[ "$1" = "-update" ]]; then
tb_update_check
exit 0
fi



################################################################ 
## -force-install                                              #
################################################################ 
if [[ "$1" = "-force-install" ]]; then
export TB_FORCE_INSTALL="1"
tb_update_check
export TB_FORCE_INSTALL="0"
exit 0
fi



################################################################ 
## -force-install-uwt-dev-passthrough                          #
################################################################ 
if [[ "$1" = "-force-install-uwt-dev-passthrough" ]]; then
export TB_FORCE_INSTALL="1"
export UWT_DEV_PASSTHROUGH="1"
tb_update_check
export UWT_DEV_PASSTHROUGH="0"
export TB_FORCE_INSTALL="0"
exit 0
fi



################################################################ 
## -noreadme                                                   #
################################################################ 
if [[ "$1" = "-noreadme" ]]; then
tb_start_without_readme
exit 0
fi



################################################################ 
## -readme                                                     #
################################################################ 
if [[ "$1" = "-readme" ]]; then
LINK="$WHONIX_README"
echo "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -new-tab                                                    #
################################################################ 
if [[ "$1" = "-new-tab" ]]; then
echo "INFO: Setting link to $2" 
LINK="$2"
tb_start_new_tab
exit 0
fi



################################################################ 
## -help                                                       #
################################################################ 
if [[ "$1" = "-help" ]]; then
script_help
exit 0
fi



################################################################ 
## no option chosen                                            # 
################################################################ 
if [[ "$1" = "" ]]; then 
echo "torbrowser: No option chosen. Please run with -help to find out more."
## This script gets sources by whonix_internal_install_script. 
## an exit 0 at the end would break it.
#exit 0
fi
