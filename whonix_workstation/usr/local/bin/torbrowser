#!/bin/bash
## /usr/local/bin/torbrowser

## Tor Browser download script for Whonix.

script_help() {
echo "
## This script may break when the file name
## or RecommendedTBBVersions format changes!
##
## Do not run as root!
##
## This script is currently only tested
## in Whonix. It could be easily
## made to work in Tails or on any Linux.
##
## -update
## Check if there is an update and ask to
## install it. Will create a backup.
##
## -force-install
## Installs without asking. Will create
## a backup.
##
## -dev-build-passthrough
## For developers only! Do not use!
## Internally used by the build scripts.
##
## -new-tab url
## Opens a new tab or starts Tor Browser and
## opens a new tab.
##
## -doc
## Starts Tor Browser and opens the
## Online Documentation.
##
## -start
## Starts Tor Browser.
##
## -help
## Show this help.
"
}

## -contribute
## -donate
## -forum
## -mailinglist
## -importantblog
## -featureblog
## -recommend



tb_lang_help() {
echo '
Available languages as in October 2012:
ar
de
en-US
es-ES
fa
fr
it
ko
nl
pl
pt-PT
ru
vi
zh-CN

To check if further languages are supported visit:
https://www.torproject.org/dist/torbrowser/linux/
http://idnxcnkne4qt76tg.onion/dist/torbrowser/linux/

Always use:
    export TB_LANG="<language code>"
to set the language before running
torbrowser -update.

For example, for Vietnamese use:
    export TB_LANG="vi"

Replace "vi" with "zh-CN" for Chinese
and so on.
'
}



## -force-install is internally used by whonix_internal_install_script.



## Developer comment on this script:
## I would be very happy if this script would not be requried.
## Unfortunately, it is required. It works arround a lot bugs:
## - There is no deb/rpm/whatever package with Tor Browser.
##   https://trac.torproject.org/projects/tor/ticket/5236
##   https://trac.torproject.org/projects/tor/ticket/3994
## - There is no way to keep Tor Browser updated.
##   (Thandy doesn't exist yet.)
## - There is no way to add the Whonix Documentation well visible to Tor Browser:
##   https://trac.torproject.org/projects/tor/ticket/6025
##   https://trac.torproject.org/projects/tor/ticket/6053
## - Tor Browsers support for Isolating and Transparent Proxies is very limited:
##   https://trac.torproject.org/projects/tor/ticket/5611
## - tbb-scripts
##   https://github.com/adrelanos/tbb-scripts



## Debugging.
#set -x



root_check() {
  if [ "$(id -u)" != "0" ]; then
       #echo "INFO: torbrowser script running as user."
       true
  else
       ZENITY_TYPE="--error"
       output "FATAL ERROR: do not run this script as root! Please run it as user."
       exit 1
  fi
}



## ARCH="x86_64"
## ARCH="i686"
ARCH="`uname --machine`"
echo "INFO: $ARCH detected."



tb_error_handler() {
   local MSG="\
###########################################################
## torbrowser script bug.
## No panic. Nothing is broken. Just some rare condition
## has been hit. Try again later. There is likely a
## solution for this problem. Please see the Whonix News,
## Whonix User Help Forum and Whonix Documentation.
## https://sourceforge.net/p/whonix/wiki/TorBrowser/
## Please report this bug!
##
## BASH_COMMAND: $BASH_COMMAND
##
## Experts only:
## You can enable debugging in /usr/local/bin/torbrowser
## Uncomment set -x.
###########################################################\
"
   echo "$MSG"
   ZENITY_TYPE="--error"
   output "$MSG"
   progress_bar 100
   exit 1
}



debug() {
   # debug is just a marker for messages which is are not essential for users.
   # either in cli or gui.
   echo "$*"
}



output() {
   echo "$*"

   #echo "ZENITY_TYPE= $ZENITY_TYPE"

   if [ "$TB_FORCE_INSTALL" = "1" ]; then
      return
   fi

   zenity --title="Tor Browser Update Check" "$ZENITY_TYPE" --text "
Tor Browser Update Check:
----------------------------------------------------------------------

$*"

}



USERNAME="`whoami`"

DOWNLOAD_FAIL_HELP="Possible reasons:
- no internet connectivity

Please check: Start menu -> System -> Whonix Check
              or in Terminal: whonixcheck
              or in Terminal with debugging: whonixcheck -v

Run whonixcheck on Whonix-Gatway as well.

If whonixcheck reports no problems with internet activity and this still fails, please report a bug!

As last resort you can also manually update Tor Browser.

Check Whonix News:
https://sourceforge.net/p/whonix/wiki/Download/#stay-tuned

Check for latest version Tor Browser Bundle version:
https://blog.torproject.org

Manually update:
https://sourceforge.net/p/whonix/wiki/ManualTBupdate/"



GATEWAY_IP="192.168.0.10"
SOCKS_PORT_TBB_DOWNLOAD="9115"
ICON="--window-icon /usr/local/share/whonix/tbupdate.ico"

DOC_LINK="https://sourceforge.net/p/whonix/wiki/Documentation/"
CONTRIBUTE_LINK="https://sourceforge.net/p/whonix/wiki/Contribute/"
DONATE_LINK="https://sourceforge.net/p/whonix/donate/"
FORUM_LINK="https://sourceforge.net/p/whonix/discussion/"
MAILINGLIST_LINK="https://sourceforge.net/p/whonix/mailman/"
IMPORTANTBLOG_LINK="https://sourceforge.net/p/whonix/blog/"
FEATUREBLOG_LINK="https://sourceforge.net/p/whonix/featureblog/"
IMPORTANTBLOG_OFFLINE_LINK="file:///home/user/.rawdog/importantblog.html"
FEATUREBLOG_OFFLINE_LINK="file:///home/user/.rawdog/featureblog.html"



#debug "TB_LANG: $TB_LANG"

# Check if TB_LANG exists and is not empty.
if [[ "$TB_LANG" && "${TB_LANG}" ]]; then
   #debug "INFO: Tor Browser language variable is set to "$TB_LANG"."
   true
else
   #debug "INFO: Tor Browser language variable not found. Setting TB_LANG to the default en-US."
   TB_LANG="en-US"
fi



progress_bar() {
   if [ "$TB_FORCE_INSTALL" = "1" ]; then
      return
   fi
   if [ "$DISPLAY" ]; then
      # zenity
      echo "$1" >&3
   else
      echo "progress: $1"
   fi
}



gpg_download_verification_error() {
trap "tb_error_handler" ERR

ZENITY_TYPE="--error"
output "\
ERROR: GPG download signature could NOT be verified.
ERROR: Tor Browser update failed! Try again later.\
"

## No longer deleting, might be interesting in case an adversary
## tampered with it.
#debug "INFO: Deleting tor-browser-gnu-linux-*.tar.gz*..."
#rm --force tor-browser-gnu-linux-*.tar.gz*

cd "/home/"$USERNAME""
## Tell about failure.
touch TorBrowser_installation_FAILED
progress_bar 100
exit 1
}



#########################################################################
## tbbversion                                                           #
#########################################################################

tbbversion() {
   # code shared between torbrowser and whonixcheck

   #trap "tb_error_handler" ERR

   # fallback
   TBBVERSION="UNKNOWN"

   if [ -f "RecommendedTBBVersions" ]; then
      local i="0"
      while read LINE; do
         let i "i=i+1" ||  true

         echo "$LINE" | grep -q -i -s "alpha"
         if [ $? -eq 0 ]; then            
            continue
         fi 
         echo "$LINE" | grep -q -i -s "MacOS"
         if [ $? -eq 0 ]; then            
            continue
         fi 
         echo "$LINE" | grep -q -i -s "Windows"
         if [ $? -eq 0 ]; then            
            continue
         fi 

         LINE="`echo "$LINE" | sed 's/"//g'`"
         LINE="`echo "$LINE" | sed 's/,//g'`"

         echo "$LINE" | grep -q -i -s "Linux"
         if [ $? -eq 0 ]; then            
            TBBVERSION="$LINE"
            TBBVERSION="`echo "$TBBVERSION" | sed 's/-i686//g'`"
            TBBVERSION="`echo "$TBBVERSION" | sed 's/-x86_64//g'`"
            TBBVERSION="`echo "$TBBVERSION" | sed 's/-Linux//g'`"
         fi 

      done < "RecommendedTBBVersions"
   else
      trap "tb_error_handler" ERR
      error "RecommendedTBBVersions does not exist."
   fi

   #echo "TBBVERSION: $TBBVERSION"
}



#########################################################################
## tb_update_check                                                      #
#########################################################################

tb_update_check() {
trap "tb_error_handler" ERR

#################################
## preparation
#################################
## do not re-download Tor Browser if a previous build already did
if [ "$DEV_BUILD_PASSTHROUGH" = "1" ]; then
   if [ -d ~/tor-browser_"$TB_LANG"/ ]; then
      echo "torbrowser: Not downloading Tor Browser again,
because ~/tor-browser_"$TB_LANG"/ already exists."
      exit 0
   fi
fi

## progress bar for update check
if [ "$TB_FORCE_INSTALL" = "1" ]; then
   true
else
   exec 3> >(zenity --timeout 86400 --no-markup \
   --window-icon /usr/local/share/whonix/tbupdate.ico \
   --title="Tor Browser Update Check" "--progress" --auto-close --auto-kill --text "Checking Tor Browser version... Will take a moment...")
fi

if [ "$DEV_PASSTHROUGH" = "1" ]; then
   CURL_PROXY=""
else
   CURL_PROXY="--socks5-hostname socks5h://"$GATEWAY_IP":"$SOCKS_PORT_TBB_DOWNLOAD"/"
fi

progress_bar 5
## Get into correct directory is required for relative paths.
cd "/home/"$USERNAME""

progress_bar 6
## Delete old tbbdownload folder.
rm --force --recursive "tbbdownload/"
progress_bar 7
rm --force TorBrowser_installation_FAILED

progress_bar 8
## Create new tbbdownload folder.
mkdir -p "tbbdownload"

progress_bar 9
## Get into the tbbdownload folder.
cd "tbbdownload"

#################################
## Getting latest version number
#################################

progress_bar 10
debug "INFO: Find out latest version..."
LINK="https://check.torproject.org/RecommendedTBBVersions"
debug "INFO: Downloading: "$LINK""
/usr/bin/curl $CURL_PROXY \
--tlsv1 --proto =https --max-time 300 --output RecommendedTBBVersions "$LINK" || NETWORK_DOWN="1"

progress_bar 95

# Check if curl failed.
if [ "$NETWORK_DOWN" = "1" ]; then
   ZENITY_TYPE="--error"
   output "Failed to download: "$LINK"

$DOWNLOAD_FAIL_HELP"
   progress_bar 100
   exit 1
fi

progress_bar 96

tbbversion

progress_bar 97

#################################
## Getting currently installed version number
#################################

progress_bar 98

## Will fail if the file does not exist, i.e. Tor Browser not installed.
## Will not break the script.
TBBINSTALLEDVERSION="`head -1 ../tor-browser_"$TB_LANG"/Docs/version`" || true

progress_bar 100

if [ "$TBBINSTALLEDVERSION" != "" ]; then
   #debug "INFO: Successfully detected Tor Browser version."
   true
else
   debug "\
INFO: Could not determine the currently installed Tor Browser version.
INFO: This could be either because none is installed or because the version format changed.\
"
   TBBINSTALLEDVERSION="UNKNOWN OR NONE"
fi

if [ "$TBBINSTALLEDVERSION" = "$TBBVERSION" ]; then
   VERSION_CHECK_RESULT="Looks like your Tor Browser version is up to date."
else
   VERSION_CHECK_RESULT="Looks like there is an update for Tor Browser."
fi

## Setting default answer to 1, which means no.
## Just in case the question dialog fails for
## some reason, the default will be no.
answer="1"

## Need to deactivate the trap, otherwise answering
## no will throw an error.
trap "" ERR

ZENITY_TYPE="--question"
output "\
"$VERSION_CHECK_RESULT"

Please close Tor Browser if you want to upgrade!
Currently installed version: "$TBBINSTALLEDVERSION"
Online detected version    : "$TBBVERSION"

If your currently installed version is:
   higher: you are likely victim of a downgrade attack, SAY NO NOW!
   equal : only proceed, if you want to create a new browser profile.
   lower : you should upgrade.

YOUR BROWSER WILL BE KILLED.
YOUR WHOLE BROWSER PROFILE INCLUDING BOOKMARKS AND PASSWORDS WILL GET REPLACED!

A backup of your old Tor Browser and settings will be created in your home folder.
It is a good idea to delete old TBB backups once in a while if you are running low with disk space.\
"

## zenity return codes
## no 1
## yes 0
answer="$?"

debug "answer: $answer"

trap "tb_error_handler" ERR

if [ "$TB_FORCE_INSTALL" = "1" ]; then
	debug "INFO: TB_FORCE_INSTALL = 1"
	true
else
	if [ "$answer" = "1" ]; then 
		cd "/home/"$USERNAME""
		debug "INFO: Deleting temporary folder tbbdownload."
		rm --force --recursive "tbbdownload" || true
		## Exit this function.
		exit 0
	fi
fi

## progress bar for download
if [ "$TB_FORCE_INSTALL" = "1" ]; then
   true
else
   exec 3> >(zenity --timeout 86400 --no-markup \
   --window-icon /usr/local/share/whonix/tbupdate.ico \
   --title="Tor Browser Update Check" "--progress" --auto-close --auto-kill --text "Downloading Tor Browser... Will take a while...")
fi


#################################
debug "INFO: Killing Tor Browser if it is still running..."
#################################

progress_bar 5
killall firefox || true

#################################
debug "INFO: Installing Tor Browser..."
#################################

trap "tb_error_handler" ERR

mkdir "gpgtmpdir"
chmod 700 "gpgtmpdir/"

gpg --homedir gpgtmpdir --import /usr/local/share/whonix/sebastian.asc
gpg --homedir gpgtmpdir --import /usr/local/share/whonix/erinn.asc

TBB_REMOTE_FOLDER="https://www.torproject.org/dist/torbrowser/linux"
#TBB_REMOTE_FOLDER="http://idnxcnkne4qt76tg.onion/dist/torbrowser/linux"

progress_bar 50

debug "INFO: Downloading Tor Browser Bundle: $TBBVERSION"
TBB_PACKAGE_FILENAME="tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz"
TBB_PACKAGE_LINK=""$TBB_REMOTE_FOLDER"/"$TBB_PACKAGE_FILENAME""
debug "INFO: Downloading: "$TBB_PACKAGE_LINK""
/usr/bin/curl $CURL_PROXY \
--tlsv1 --proto =https --output "$TBB_PACKAGE_FILENAME" "$TBB_PACKAGE_LINK" || NETWORK_DOWN="1"

# Check if curl failed.
if [ "$NETWORK_DOWN" = "1" ]; then
   ZENITY_TYPE="--error"
   output "Failed to download: "$TBB_PACKAGE_LINK"

$DOWNLOAD_FAIL_HELP"
   progress_bar 100
   exit 1
fi

progress_bar 80

debug "INFO: Downloading GPG signature..."
TBB_SIG_FILENAME="tor-browser-gnu-linux-"$ARCH"-"$TBBVERSION"-dev-"$TB_LANG".tar.gz.asc"
TBB_SIG_LINK=""$TBB_REMOTE_FOLDER"/"$TBB_SIG_FILENAME""
debug "INFO: Downloading: "$TBB_SIG_LINK""
/usr/bin/curl $CURL_PROXY \
--tlsv1 --proto =https --output "$TBB_SIG_FILENAME" "$TBB_SIG_LINK" || NETWORK_DOWN="1"

# Check if curl failed.
if [ "$NETWORK_DOWN" = "1" ]; then
   ZENITY_TYPE="--error"
   output "Failed to download: "$TBB_SIG_LINK"

$DOWNLOAD_FAIL_HELP"
   progress_bar 100
   exit 1
fi

progress_bar 90

debug "INFO:
## Verifying GPG signature.
## Not using the users GPG keyring also ensures, that the key can be only
## singed by the GPG keys we added. Signatures from random people from the
## users keyring will be ignored.
"
trap "gpg_download_verification_error" ERR
gpg --homedir "gpgtmpdir" --verify tor-browser*.asc

trap "tb_error_handler" ERR
debug "INFO: Signature valid."

if [ -f tor-browser-gnu-linux-*.tar.gz ]; then
	debug "INFO: Regular file tor-browser-gnu-linux-*.tar.gz exists."
	debug "INFO: Unpacking..."
	tar -xzvf tor-browser-gnu-linux-*.tar.gz
else
        ZENITY_TYPE="--error"
	output "FATAL ERROR: Regular file tor-browser-gnu-linux-*.tar.gz exists. Please report this bug!"
fi

progress_bar 91
# The tor-browser_"$TB_LANG"/Docs folder should already exist.
# Just to make sure the script will not break in case the get changed by upstream.
mkdir -p tor-browser_"$TB_LANG"/Docs

progress_bar 92
debug "Moving the Tor Browser Bundle startup script to tor-browser_"$TB_LANG"/Docs/..."
mv tor-browser_"$TB_LANG"/start-tor-browser tor-browser_"$TB_LANG"/Docs/

## Tor Browser changelog has been forgotten to update.
## https://sourceforge.net/p/whonix/discussion/general/thread/6122990d/
## To play it safe and having a chance of finding out the installed version,
## we create a file ourselves to remember it.
debug "Creating version file tor-browser_"$TB_LANG"/Docs/version."
echo ""$TBBVERSION"" > "tor-browser_"$TB_LANG"/Docs/version"

progress_bar 93
debug "INFO: Creating Unbundled Tor Browser startup script..."
## Using this until Tor Browser upstream patch #7266 gets accepted.
##    improve RelativeLink.sh script comments, patch attached
##    https://trac.torproject.org/projects/tor/ticket/7266
##
## After #7266 got accepted, a new patch with TB_STANDALONE will
## be proposed.
##
## Has been copied into Whonix-Workstation at build time.
cp /usr/local/share/whonix/start-tor-browser /home/"$USERNAME"/tbbdownload/tor-browser_"$TB_LANG"/start-tor-browser
chmod +x /home/"$USERNAME"/tbbdownload/tor-browser_"$TB_LANG"/start-tor-browser

progress_bar 94
debug "INFO: Calling the function tb_create_user_js()..."
tb_create_user_js

progress_bar 95
debug "INFO: Moving old folder tor-browser_"$TB_LANG"..."
mv /home/"$USERNAME"/tor-browser_"$TB_LANG" /home/"$USERNAME"/tor-browser_"$TB_LANG".old."`date '+%F-%H:%M:%S'`" || true
progress_bar 96
debug "INFO: Moving temporary folder tbbdownload/tor-browser_"$TB_LANG" to /home/"$USERNAME"/tor-browser_"$TB_LANG""
mv "/home/"$USERNAME"/tbbdownload/tor-browser_"$TB_LANG"" "/home/"$USERNAME"/tor-browser_"$TB_LANG""
progress_bar 97
debug "INFO: Deleting temporary folder tbbdownload..."
progress_bar 98
rm --force --recursive "/home/"$USERNAME"/tbbdownload"
ZENITY_TYPE="--info"
progress_bar 100
output "Finished installing Tor Browser. Can be found in /home/"$USERNAME"/tor-browser_"$TB_LANG"."
}



#########################################################################
## tb_create_user_js                                                    #
#########################################################################

tb_create_user_js() {
trap "tb_error_handler" ERR

## Editing /home/"$USERNAME"/tor-browser_"$TB_LANG"/Data/profile/users.js
## http://kb.mozillazine.org/User.js_file
## Configuring Tor Button to use SOCKSPort;
## expanding extensions.torbutton.banned_ports with Whonix specific ports.

echo '
## Begin of patched user.js.
## If you edit this file while Firefox is running, your changes will be
## overwritten, when you close Firefox.

## How to create the user.js network settings:
## 1. Make a backup of prefs.js.
## 1. Start Tor Browser with the patched start script.
## 2. Apply proxy settings using the Tor Button settings dialog..
## 3. Make a diff from the old and the new pref.js.
## 4. Copy the relevant changes to user.js.

## network settings
## are now set in /etc/environment
#user_pref("extensions.torbutton.use_privoxy", false);
#user_pref("extensions.torbutton.settings_method", "custom");
#user_pref("extensions.torbutton.socks_host", "192.168.0.10");
#user_pref("extensions.torbutton.socks_port", 9100);
#user_pref("network.proxy.socks", "192.168.0.10");
#user_pref("network.proxy.socks_port", 9100);
#user_pref("extensions.torbutton.custom.socks_host", "192.168.0.10");
#user_pref("extensions.torbutton.custom.socks_port", 9100);

## misc settings
user_pref("extensions.torbutton.prompt_torbrowser", false);
user_pref("general.autoScroll", true);

## banned ports
## https://www.torproject.org/torbutton/en/design/
## http://idnxcnkne4qt76tg.onion/torbutton/en/design/
## and search for extensions.torbutton.banned_ports
user_pref\
("extensions.torbutton.banned_ports", "\
8118,8123,9050,9051,\
9100,9101,9102,9103,9104,9105,9106,9107,9108,9109,\
9110,9111,9112,9113,9114,9115,9116,9117,9118,9119,\
9150,9151,9152,9153,9154,9155,9156,9157,9158,9159,\
9160,9161,9162,9163,9164,9165,9166,9167,9168,9169,\
9170,9171,9172,9173,9174,9175,9176,9177,9178,9179,\
9180,9181,9182,9183,9184,9185,9186,9187,9188,9189,\
");
## End of Whonix user.js.
' >> /home/"$USERNAME"/tbbdownload/tor-browser_"$TB_LANG"/Data/profile/user.js

}



#########################################################################
## tb_start_new_tab                                                     #
#########################################################################

tb_start_new_tab() {
   trap "tb_error_handler" ERR

   PID="`pidof firefox`" || true

   if [ "$PID" = "" ]; then
      debug "INFO: Starting Tor Browser..."
      cd ~/tor-browser_"$TB_LANG"/
      ~/tor-browser_"$TB_LANG"/start-tor-browser &
      ## Unfortunately, we must hard code the time to wait before
      ## we try open extra tabs. Just waiting for the pid to exists
      ## does not do the trick. I do not know a way to ask Firefox,
      ## if it is only partially or fully load. When trying to open
      ## a new tab before it is fully load, a popup "profile not found"
      ## will be shown, which is confusing.
      debug "INFO: Waiting 30 seconds for Tor Browser to start..."
      sleep 30
   else
      debug "INFO: Tor Browser is already running"
   fi

   debug "INFO: Opening link..."

   #debug "tb_start_new_tab debug: ~/tor-browser_"$TB_LANG"/App/Firefox/firefox --profile Data/profile -new-tab \"$LINK\" &"

   cd ~/tor-browser_"$TB_LANG"/
   ~/tor-browser_"$TB_LANG"/App/Firefox/firefox --profile Data/profile -new-tab "$LINK" &
}



################################################################
## tb_start                                                    #
################################################################

tb_start() {
   trap "tb_error_handler" ERR

   cd ~/tor-browser_"$TB_LANG"/
   ~/tor-browser_"$TB_LANG"/start-tor-browser &
}



################################################################ 
## -update                                                     #
################################################################ 
if [[ "$1" = "-update" ]]; then
root_check
tb_update_check
exit 0
fi



################################################################ 
## -force-install                                              #
################################################################ 
if [[ "$1" = "-force-install" ]]; then
root_check
export TB_FORCE_INSTALL="1"
tb_update_check
export TB_FORCE_INSTALL="0"
exit 0
fi



################################################################ 
## -dev-build-passthrough                                      #
################################################################ 
if [[ "$1" = "-dev-build-passthrough" ]]; then
root_check
DEV_BUILD_PASSTHROUGH="1"
DEV_PASSTHROUGH="1"
TB_FORCE_INSTALL="1"
tb_update_check
DEV_BUILD_PASSTHROUGH="0"
DEV_PASSTHROUGH="0"
TB_FORCE_INSTALL="0"
exit 0
fi



################################################################ 
## -noreadme                                                   #
################################################################ 
## for compatibility
if [[ "$1" = "-noreadme" ]]; then
root_check
tb_start
exit 0
fi



################################################################ 
## -start                                                      #
################################################################ 
if [[ "$1" = "-start" ]]; then
root_check
tb_start
exit 0
fi


################################################################ 
## -readme                                                     #
################################################################ 
## for compatibility
if [[ "$1" = "-readme" ]]; then
root_check
LINK="$DOC_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -doc                                                        #
################################################################ 
if [[ "$1" = "-doc" ]]; then
root_check
LINK="$DOC_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -contribute                                                 #
################################################################ 
if [[ "$1" = "-contribute" ]]; then
root_check
LINK="$CONTRIBUTE_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -donate                                                     #
################################################################ 
if [[ "$1" = "-donate" ]]; then
root_check
LINK="$DONATE_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi


################################################################ 
## -forum                                                      #
################################################################ 
if [[ "$1" = "-forum" ]]; then
root_check
LINK="$FORUM_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -mailinglist                                                #
################################################################ 
if [[ "$1" = "-mailinglist" ]]; then
root_check
LINK="$MAILINGLIST_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -importantblog                                              #
################################################################ 
if [[ "$1" = "-importantblog" ]]; then
root_check
LINK="$IMPORTANTBLOG_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -featureblog                                                #
################################################################ 
if [[ "$1" = "-featureblog" ]]; then
root_check
LINK="$FEATUREBLOG_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -recommend                                                  #
################################################################ 
if [[ "$1" = "-recommend" ]]; then
root_check
LINK="$IMPORTANTBLOG_OFFLINE_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
LINK="$FEATUREBLOG_OFFLINE_LINK"
debug "INFO: Setting link to $LINK"
tb_start_new_tab
exit 0
fi



################################################################ 
## -new-tab                                                    #
################################################################ 
if [[ "$1" = "-new-tab" ]]; then
root_check
debug "INFO: Setting link to $2" 
LINK="$2"
tb_start_new_tab
exit 0
fi



################################################################ 
## -help                                                       #
################################################################ 
if [[ "$1" = "-help" ]]; then
script_help
exit 0
fi



################################################################ 
## -lang                                                       #
################################################################ 
if [[ "$1" = "-lang" ]]; then
tb_lang_help
exit 0
fi



################################################################ 
## no option chosen                                            # 
################################################################ 
if [[ "$1" = "" ]]; then 
echo "torbrowser: No option chosen. Please run with -help to find out more."
## This script gets sources by whonix_internal_install_script. 
## an exit 0 at the end would break it.
#exit 0
fi
