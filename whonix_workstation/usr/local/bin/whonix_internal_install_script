#!/bin/bash
# Needs to be bash because we use "trap ERR".
# Will be copied into whonix_workstation: /usr/local/bin/whonix_workstation
# by whonix_image copyinto. Will run inside VM.

# See LICENSE in root of Whonix source for copyright, license and authors.

script_help() {
echo \
"
############################################################################
#       INFO                                                               #
#                                                                          #
# Read https://trac.torproject.org/projects/tor/wiki/doc/TorBOX/DISCLAIMER #
#                                                                          #
#       ASSUMPTIONS                                                        #
# 1) You use Ubuntu                                                        #
# 2) The main username is "user"                                           #
#    (search for HARDCODED! and check the variable "USERNAME")             #
# 3) You are using following network settings:                             #
#    Your primary (and only) network interface is eth0                     #
#    Whonix-Workstation IP: 192.168.0.11                                      #
#    Whonix-Gateway IP: 192.168.0.10                                          #
# 4) Whonix-Gateway is already read and started, host build environment has   #
#    a working internet                                                    #
#    connection to ubuntu mirrors                                          #
# 5) you read and understood the script and verified all hardcoded gpg     #
#    fingerprints tagged with !!!VERIFY!!!                                 #
#                                                                          #
#       CHOOSE ONE OF THE FOLLOWING FLAGS                                  #
# Available options:                                                       #
#                                                                          #
# -install                                                                 #
############################################################################
"
}

############################################################################
# SCRIPT STARTS HERE
############################################################################

set -x
set -E

######################################################
# Variables
######################################################
# Set the linux username.
# "export USERNAME=$(whoami)" will not work, since the
# script gets, in most cases, started as root.
USERNAME="user"

# change to home dir so relative paths work correctly
cd /home/$USERNAME

# Unattended (un)installation of packages.
# Thanks to http://snowulf.com/2008/12/04/truly-non-interactive-unattended-apt-get-install/
export DEBIAN_FRONTEND=noninteractive



error_handler() {
echo "
##################################################
# whonix_workstation script: ERROR detected.        #
##################################################
"
exit 1
}



root_check() {
  if [ "$(id -u)" != "0" ]; then
       echo "ERROR: This must be run as root (sudo)!"
       exit 1
  else
       echo "INFO: Script running as root."
  fi
}



workstation_source() {
trap "error_handler" ERR INT TERM

source /usr/share/Whonix/whonix_internal_checks
source /usr/share/Whonix/whonix_create_swap_file
source /usr/share/Whonix/whonix_config_uuids
source /usr/share/Whonix/whonix_slim_down
source /usr/share/Whonix/patch_torsocks
source /usr/share/Whonix/import_tpo_archive_key
source /usr/local/bin/torbrowser
}



apt_get() {
trap "error_handler" ERR INT TERM

echo "
######################################################
# Updating system, removing problematic software
######################################################
"

echo "INFO: Running apt-get update..."
apt-get update

echo "INFO: Running apt-get dist-upgrade..."
apt-get --yes dist-upgrade

echo "INFO: Removing problematic software..."
apt-get --yes remove --purge ntpdate popularity-contest resolvconf ufw network-manager network-manager-gnome 

# required for patch_torsocks:
#      build-essential
# required for tails_htp:
#      libdatetime-perl libdatetime-format-dateparse-perl libgetopt-long-descriptive-perl libtry-tiny-perl
# required for whonixcheck, provides /usr/lib/update-notifier/apt-check:
#      update-notifier-common
echo "INFO: Installing required software..."
apt-get --yes install --no-install-recommends nano wget gnupg ed torsocks mingetty build-essential dbus dnsutils \
libdatetime-perl libdatetime-format-dateparse-perl libgetopt-long-descriptive-perl libtry-tiny-perl \
update-notifier-common
}



base_desktop() {
trap "error_handler" ERR INT TERM

echo "
######################################################
# Installing base desktop
######################################################
"

# required for gnome-terminal:
# gnome-themes-standard

apt-get --yes install --no-install-recommends xserver-xorg xinit openbox obmenu pcmanfm evince \
libasound2 file-roller xchat gpicview gnome-mplayer tint2 unrar-free alsa alsa-utils \
mplayer leafpad gnome-terminal zenity gnome-themes-standard

# We should install the following at some later point...
# - Thunderbird with TorBirdy, once added to deb repository.
# - Pidgin, once torproject.org solved the remaining issues.
# - Pidgin OTR
# - Pidgin TorChat https://github.com/prof7bit/TorChat
}



config_audio() {
trap "error_handler" ERR INT TERM

echo "
######################################################
# Set up audio
######################################################
"

usermod -a -G audio "$USERNAME"
sudo -u "$USERNAME" amixer
sudo -u "$USERNAME" amixer set Master 70 unmute
sudo -u "$USERNAME" amixer set PCM 70 unmute
}



config_home() {
trap "error_handler" ERR INT TERM

# Thanks to:
# https://bbs.archlinux.org/viewtopic.php?id=116451
# http://askubuntu.com/questions/98135/gnome-terminal-ignores-gtk-theme

# Fixing black on black for gnome-terminal.
# Thanks to: http://ubuntuforums.org/showthread.php?t=1513791
# Thanks to: https://gist.github.com/1397104
sudo -u "$USERNAME" gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_background" --type bool false
sudo -u "$USERNAME" gconftool-2 --set "/apps/gnome-terminal/profiles/Default/use_theme_colors" --type bool false
sudo -u "$USERNAME" gconftool-2 --set "/apps/gnome-terminal/profiles/Default/foreground_color" --type string "#FFFFFFFFFFFF"

# Run gpg at least once to create the GPG default files
# gpg.conf, pubring.gpg and trustdb.gpg.
# The --fingerprint option will do nothing and has been
# added to let GPG terminate itself after creating the
# configuration files. GPG run with no options would
# result in GPG running interactively.
# old: sudo -u $USERNAME gpg --fingerprint --homedir /home/"$USERNAME"/.gnupg
# new:
sudo -u "$USERNAME" gpg --fingerprint
# gpg.conf gets appened by whonix_image append post.
}



config_htp() {
   trap "error_handler" ERR INT TERM

   echo "Creating the htp user..."
   adduser --system --quiet --group --no-create-home htp || :
   echo "Adding htpdate init script..."
   update-rc.d htpdate defaults
}

config_irc_xchat() {
   trap "error_handler" ERR INT TERM

   /usr/local/bin/xchat-reset
}


whonix_slim_down() {
trap "error_handler" ERR INT TERM

echo "
######################################################
Slim down the system.
######################################################
"
# Remove unnecessary packages to slim down the system.
# This list contains only packages, which waste space and are not required.
# Unsafe or problematic packages are being removed with apt_get().
apt-get --yes remove --purge xserver-xorg-video-all xserver-xorg-video-ati xserver-xorg-video-fbdev \
xserver-xorg-video-geode xserver-xorg-video-intel xserver-xorg-video-mach64 xserver-xorg-video-mga \
xserver-xorg-video-neomagic xserver-xorg-video-nouveau xserver-xorg-video-openchrome \
xserver-xorg-video-qxl xserver-xorg-video-r128  xserver-xorg-video-radeon xserver-xorg-video-s3 \
xserver-xorg-video-savage xserver-xorg-video-siliconmotion xserver-xorg-video-sis xserver-xorg-video-sisusb \
xserver-xorg-video-tdfx xserver-xorg-video-trident xserver-xorg-video-vmware fuse command-not-found* \
geoip-database sound-theme-freedesktop fuse-utils aptitude pciutils hdparm lshw ftp parted telnet \
mlocate ppp pppconfig pppoeconf bind9-host dosfstools strace mtr-tiny

echo "Cleaning up..."

# This assumes you rebooted after the last kernel update.
# Can not be used together with debootstrap!
apt-get --config-file /usr/share/Whonix/apt.conf --yes remove --purge $(dpkg -l|egrep '^ii  linux-(im|he)'|awk '{print $2}'|grep -v `uname -r`) || true

# Kill dhclient3 to prevent rewrite of /var/lib/dhcp/*.
killall dhclient3 || true
# There are .leases.
rm /var/lib/dhcp/*.leases || true
# And there are .lease.
rm /var/lib/dhcp/*.lease || true
# We are best of deleting the whole folder.
rm -r /var/lib/dhcp/* || true

# Cleanup.
apt-get --yes autoremove --purge || true
apt-get --yes clean || true

# Killing rsyslog so we can remove logs.
stop rsyslog || true

# Delete logs and other stuff.
rm -r /tmp/* || true
rm /var/log/installer/* || true
rm -r /var/cache/apt/* || true
rm -r /var/lib/apt/lists/* || true
rm -r /var/log/installer || true
rm /var/lib/dpkg/*-old || true
rm /var/cache/debconf/*-old || true
# Erase rotated logs (usually wont appear unless you left your VM running for several days).
rm /var/log/*.[0-9] || true
rm /var/log/*.[0-9].gz || true

# Truncate all log files, keeping user group and perms.
find /var/log -type f -exec cp /dev/null {} \;

# TODO
# Which are safe?
# rm /usr/share/icons/nuoveXT2/icon-theme.cache
# cd /usr/share/locale &&  ls | grep -v en | xargs rm -r && cd /home/$USERNAME
# rm -r /usr/share/doc/* #(are we even allowed to do that, see licenses?)

# Take care of development leaks and make resulting ova image smaller.
# Since VBox export works below the FS level it will keep deleted files (and the ova will stay large). 
# This also ensure that possible leaks we deleted before are really deleted.
echo "INFO: Wiping free space. This can take a while."
dd if=/dev/zero of=./zerofile bs=1024 || true

# Flush the zero-file to disk before removing it.
sync

# Delete the zero-file.
rm ./zerofile || true

# Flush again after rm.
sync

# Delete bash history.
rm /home/$USERNAME/.bash_history
history -c
}



######################################################
# -install
######################################################
if [[ "$1" = "-install" ]]; then
root_check                # Depends on nothing.

workstation_source        # Depends on nothing.
whonix_internal_checks       # Depends on nothing.
whonix_create_swap_file      # Depends on root_check, not being run again when in use.
whonix_config_uuids_fstab    # Depends on root_check, not being run again after adding new hdds.
#import_tpo_archive_key   # Not yet required.
apt_get                   # Depends on root_check, working internet connection, UTC.
update-grub2              # /etc/grub/default gets appended by whonix_image copyinto.
patch_torsocks            # Depends on root_check, working internet connection.
base_desktop              # Depends on root_check, working internet connection.
tb_force_install          # Depends on working internet connection.
config_irc_xchat          # Depends on root_check.
config_audio              # Depends on base_desktop.
config_home               # Depends on nothing.
config_htp                # Depends on root_check.
whonix_slim_down             # Depends on root_check, being last function.

echo "Script completed, this indicates neither success nor failure." >&2
exit 0
fi



################################################################ 
# -help                                                        #
################################################################ 
if [[ "$1" = "-help" ]]; then
script_help
exit 0
fi



################################################################ 
# no option chosen                                             # 
################################################################ 
if [[ "$1" = "" ]]; then 
echo "
INFO: No option chosen.

Please run whonix_workstation -help to find out more.
"

exit 0
fi