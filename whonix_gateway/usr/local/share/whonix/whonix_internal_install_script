#!/bin/bash
## Needs to be bash because we use "trap ERR".
## Will be copied into whonix_gateway: /usr/local/bin/whonix_gateway
## by whonix_image copyinto. Will be run inside VM.

## Version: Whonix 0.3.0-developers-only

## See LICENSE in root of Whonix source for copyright, license and authors.

script_help() {
echo "
## -install

## Note for debugging:
## If you start the script without command line options, it will do nothing
## important. You can also check for some syntax errors,
## such as unbalanced apostrophes etc. And if you want for testing purposes,
## simply to run only one module and not the whole script, that is also
## possible. Scroll down the the bottom of the script, one one the last things
## will be "INFO: No option chosen.". Make space there and add the name of the
## function, you want to test, for example create_swap_file. Leave the "exit 0"
## and fi below intact.

## For extensive debugging use:
## sudo bash -x 2>/tmp/log whonix_internal_install_script
## This will set -x and redirect everything bash does to /tmp/log.
## nano /tmp/log
"
}

############################################################################
## SCRIPT STARTS HERE
############################################################################

## Enable debugging.
set -x

######################################################
## Variables
######################################################
## Set the linux username.
## "export USERNAME=$(whoami)" will not work, since the
## script gets, in most cases, started as root.
USERNAME="user"

## Unattended (un)installation of packages.
## Thanks to http://snowulf.com/2008/12/04/truly-non-interactive-unattended-apt-get-install/
export DEBIAN_FRONTEND=noninteractive

######################################################
## Checking script environment
######################################################

root_check() {
   if [ "$(id -u)" != "0" ]; then
      echo "ERROR: This must be run as root (sudo)"
      exit 1
   else
      echo "INFO: Script running as root."
   fi
}

######################################################
## error_handler
######################################################

error_handler() {
   echo "
##########################
## ERROR: Script failed! #
##########################
"
   echo "ERROR: Script failed!" >&2

   sleep 5
   exit 1
}



gateway_source() {
   trap "error_handler" ERR INT TERM

   source /usr/local/share/whonix/whonix_internal_checks
   source /usr/local/share/whonix/whonix_create_swap_file
   source /usr/local/share/whonix/whonix_config_uuids
   source /usr/local/share/whonix/whonix_chroot_shared
}



adduser_clearnet() {
   trap "error_handler" ERR INT TERM

   echo "Creating clearnet user..."
   ## setting password of user clearnet to changeme
   ##
   ## How this password was created:
   ## sudo apt-get install whois
   ## mkpasswd
   ## changeme
   ## Resulted in: aTayYxVyw5kDo
   ##
   ## True in case script gets run again. (Debugging.)
   useradd --create-home --password aTayYxVyw5kDo --shell /bin/bash clearnet || true
   chown --recursive clearnet:clearnet /home/clearnet
}



config_symlinks() {
   trap "error_handler" ERR INT TERM
   ## /etc/dpkg/origins/default
   ## || true to support re-running the script
   ln -s /etc/dpkg/origins/whonix /etc/dpkg/origins/default || true
}



################################################################
## -install
################################################################
if [[ "$1" = "-install" ]]; then
   root_check                ## Depends on nothing.

   gateway_source            ## Depends on nothing.

   whonix_internal_checks    ## Depends on nothing.
   whonix_create_swap_file   ## Depends on root_check, not being run again when in use.

   whonix_config_uuids_fstab ## Depends on root_check, not being run again after adding new hdds.
   adduser_user              ## Depends on root_check. (/usr/local/share/whonix/whonix_chroot_shared)
   add_crontab_for_user      ## Depends on nothing. (/usr/local/share/whonix/whonix_chroot_shared)

   config_htp                ## Depends on root_check. (/usr/local/share/whonix/whonix_chroot_shared)
   adduser_clearnet          ## Depends on root_check.
   config_symlinks           ## Depends on root_check.

   whonix_chroot_misc        ## Depends on root_check. (/usr/local/share/whonix/whonix_chroot_shared)
   whonix_bannned_packages   ## Depends on root_check. (/usr/local/share/whonix/whonix_chroot_shared)
   whonix_slim_down          ## Must be run last. (/usr/local/share/whonix/whonix_chroot_shared)

   sync                      ## Ensure changes get written to disk.

   echo 'INFO: Script completed.' >&2
   exit 0

fi



################################################################
## Help                                                        #
################################################################
if [[ "$1" = "-help" ]]; then
   script_help
   exit 0
fi



################################################################
## No option chosen.                                           #
################################################################
if [[ "$1" = "" ]]; then

   echo "
INFO: No option chosen.

Please run Whonix-Gateway -help to find out more.
"
   exit 0

fi