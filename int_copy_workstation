#!/bin/bash

set -x

copy_workstation_pre() {
   #############################
   # aos-Workstation Copy Pre  #
   #############################

   # UGLY WORKAROUND:
   echo '#!/bin/bash

        echo "aos_firewall not active during build (aos_internal_install_script)."
        exit 0
   ' > "$CHROOT_FOLDER"/usr/local/bin/aos_firewall
   chmod +x "$CHROOT_FOLDER"/usr/local/bin/aos_firewall

   # Copy VM script into VM image and make it executable.
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/local/bin/aos_internal_install_script "$CHROOT_FOLDER"/usr/local/bin/
   chmod +x "$CHROOT_FOLDER"/usr/local/bin/aos_internal_install_script

   # /usr/local/bin/hiddenserver-install
   # TODO: Needs documentation, revision, gui, menu integration.
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/local/bin/hiddenserver-install "$CHROOT_FOLDER"/usr/local/bin/hiddenserver-install
   chmod +x "$CHROOT_FOLDER"/usr/local/bin/hiddenserver-install

   # Copy the torbrowser update script.
   # TODO: Needs documentation.
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/local/bin/torbrowser "$CHROOT_FOLDER"/usr/local/bin/torbrowser
   chmod +x "$CHROOT_FOLDER"/usr/local/bin/torbrowser

      #########
      # xchat #
      #########

   # Prepare /usr/share/aos/xchat2 folder.
   mkdir -p "$CHROOT_FOLDER"/usr/share/aos/
   chown user "$CHROOT_FOLDER"/usr/share/aos/
   mkdir -p "$CHROOT_FOLDER"/usr/share/aos/xchat2
   chown user "$CHROOT_FOLDER"/usr/share/aos/xchat2

   # Copy xchat configuration files.
   cp -r "$AOS_SOURCE_FOLDER"/aos_workstation/usr/share/aos/xchat2 "$CHROOT_FOLDER"/usr/share/aos/xchat2

   # /usr/local/bin/xchat-reset
   # TODO: Needs documentation, warning, gui, menu integration.
   cp -r "$AOS_SOURCE_FOLDER"/aos_workstation/usr/local/bin/xchat-reset "$CHROOT_FOLDER"/usr/local/bin/xchat-reset
   chmod +x "$CHROOT_FOLDER"/usr/local/bin/xchat-reset

      ############
      # leaktest #
      ############

   # Create the leaktest folder.
   mkdir -p "$CHROOT_FOLDER"/usr/share/aos/leaktest

   # /usr/share/aos/leaktest/simple_ping.py
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/share/aos/leaktest/simple_ping.py \
"$CHROOT_FOLDER"/usr/share/aos/leaktest/simple_ping.py

   # /usr/share/aos/leaktest/exhaustive_ip_send.py
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/share/aos/leaktest/exhaustive_ip_send.py \
"$CHROOT_FOLDER"/usr/share/aos/leaktest/exhaustive_ip_send.py

   # /usr/share/aos/leaktest/tcp_test.py
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/share/aos/leaktest/tcp_test.py \
"$CHROOT_FOLDER"/usr/share/aos/leaktest/tcp_test.py

   # /usr/share/aos/leaktest/udp_test.py
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/share/aos/leaktest/udp_test.py \
"$CHROOT_FOLDER"/usr/share/aos/leaktest/udp_test.py

   # /usr/local/bin/leaktest
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/local/bin/leaktest \
"$CHROOT_FOLDER"/usr/local/bin/leaktest
   chmod +x "$CHROOT_FOLDER"/usr/local/bin/leaktest

   # Just a marker that it is an aos_gateway. Used by aoscheck script.
   touch "$CHROOT_FOLDER"/usr/share/aos/aos_workstation
}

append_workstation_pre() {
   ###############################
   # aos-Workstation Append Pre  #
   ###############################

   # .bashrc
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/home/user/.bashrc
   done < "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/appendto_.bashrc

   # /etc/sysctl.conf
   # IPv6 off, Forwarding off, fs.file-max to 100000, vm.swappiness to 0
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/etc/sysctl.conf
   done < "$AOS_SOURCE_FOLDER"/aos_workstation/etc/appendto_sysctl.conf
}

copy_workstation_post() {
   ##################################
   # aos-Workstation Copy Post      #
   ##################################

   # /etc/network/interfaces
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/etc/network/interfaces "$CHROOT_FOLDER"/etc/network/interfaces

   # /etc/resolv.conf
   # We do not need chattr +i for aos-W resolv.conf, because
   # dhcp is never used and resolvconf was uninstalled.
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/etc/resolv.conf "$CHROOT_FOLDER"/etc/resolv.conf

   # firewall script
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/usr/local/bin/aos_firewall "$CHROOT_FOLDER"/usr/local/bin/aos_firewall
   chmod +x "$CHROOT_FOLDER"/usr/local/bin/aos_firewall

   # /etc/cron.daily/aoscheck
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/etc/cron.daily/aoscheck "$CHROOT_FOLDER"/etc/cron.daily/aoscheck
   chmod +x "$CHROOT_FOLDER"/etc/cron.daily/aoscheck

   # Enable sub pixel rendering.
   cp -n "$CHROOT_FOLDER"/etc/fonts/conf.avail/10-sub-pixel-rgb.conf "$CHROOT_FOLDER"/etc/fonts/conf.d/

   # Ensure folder exist.
   mkdir -p "$CHROOT_FOLDER"/etc/init/

   # Autologin.
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/etc/init/tty6.conf "$CHROOT_FOLDER"/etc/init/tty6.conf

   # Prepare dirs.
   mkdir -p "$CHROOT_FOLDER"/home/user/.config/
   chown user "$CHROOT_FOLDER"/home/user/.config/
   mkdir -p "$CHROOT_FOLDER"/home/user/.config/openbox
   chown user "$CHROOT_FOLDER"/home/user/.config/openbox
   mkdir -p "$CHROOT_FOLDER"/home/user/.config/tint2
   chown user "$CHROOT_FOLDER"/home/user/.config/tint2
   mkdir -p "$CHROOT_FOLDER"/home/user/.config/libfm
   chown user "$CHROOT_FOLDER"/home/user/.config/libfm
   mkdir -p "$CHROOT_FOLDER"/home/user/.config/autostart
   chown user "$CHROOT_FOLDER"/home/user/.config/autostart
   mkdir -p "$CHROOT_FOLDER"/home/user/.config/gtk-3.0
   chown user "$CHROOT_FOLDER"/home/user/.config/gtk-3.0

   # Create backup of menu.xml.
   cp -n "$CHROOT_FOLDER"/home/user/.config/openbox/menu.xml \
"$CHROOT_FOLDER"/home/user/.config/openbox/menu.xml.backup || true
   chown user "$CHROOT_FOLDER"/home/user/.config/openbox/menu.xml.backup || true

   # .config/openbox/menu.xml
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/.config/openbox/menu.xml \
"$CHROOT_FOLDER"/home/user/.config/openbox/menu.xml
   chown user "$CHROOT_FOLDER"/home/user/.config/openbox/menu.xml

   # .config/openbox/menu.xml_howto
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/.config/openbox/menu.xml_howto \
"$CHROOT_FOLDER"/home/user/.config/openbox/menu.xml_howto
   chown user "$CHROOT_FOLDER"/home/user/.config/openbox/menu.xml_howto

   # Copy default files to home.
   # Tint2 example file is Ubuntu specific.
   cp "$CHROOT_FOLDER"/usr/share/doc/tint2/examples/icon_and_text_1.tint2rc \
"$CHROOT_FOLDER"/home/user/.config/tint2/tint2rc
   chown user "$CHROOT_FOLDER"/home/user/.config/tint2/tint2rc
   cp "$CHROOT_FOLDER"/etc/xdg/openbox/rc.xml "$CHROOT_FOLDER"/home/user/.config/openbox/
   chown user "$CHROOT_FOLDER"/home/user/.config/openbox/

   # .config/libfm/libfm.conf
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/.config/libfm/libfm.conf \
"$CHROOT_FOLDER"/home/user/.config/libfm/libfm.conf
   chown user "$CHROOT_FOLDER"/home/user/.config/libfm/libfm.conf

   # .config/autostart/aoscheck.desktop
   # ~/.config/autostart is a freedesktop.org standard and should work cross desktop.
   # Create aoscheck autostart.
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/.config/autostart/aoscheck.desktop \
"$CHROOT_FOLDER"/home/user/.config/autostart/aoscheck.desktop
   chown user "$CHROOT_FOLDER"/home/user/.config/autostart/aoscheck.desktop

   # .config/gtk-3.0/settings.ini
   cp "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/.config/gtk-3.0/settings.ini \
"$CHROOT_FOLDER"/home/user/.config/gtk-3.0/settings.ini
   chown user "$CHROOT_FOLDER"/home/user/.config/gtk-3.0/settings.ini
}

append_workstation_post() {
   ###############################
   # aos-Workstation Append Post #
   ###############################

      ###########
      # Restore #
      ###########

   cp "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf.backup "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf || true
   cp "$CHROOT_FOLDER"/home/user/.gtkrc-2.0.backup "$CHROOT_FOLDER"/home/user/.gtkrc-2.0 || true
   cp "$CHROOT_FOLDER"/home/user/.profile.backup "$CHROOT_FOLDER"/home/user/.profile || true
   cp "$CHROOT_FOLDER"/home/user/.xinitrc.backup "$CHROOT_FOLDER"/home/user/.xinitrc || true
   cp "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf.backup "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf || true

      ##########
      # Backup #
      ##########

   # Create backup of gpg.conf.
   # Do not override. This is important.
   cp -n "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf.backup
   chown user "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf.backup

   # Create backup of .gtkrc-2.0.
   cp -n "$CHROOT_FOLDER"/home/user/.gtkrc-2.0 "$CHROOT_FOLDER"/home/user/.gtkrc-2.0.backup || true
   chown user "$CHROOT_FOLDER"/home/user/.gtkrc-2.0.backup || true

   # Create backup of .profile.
   cp -n "$CHROOT_FOLDER"/home/user/.profile "$CHROOT_FOLDER"/home/user/.profile.backup || true
   chown user "$CHROOT_FOLDER"/home/user/.profile.backup || true

   # Create backup of .xinitrc.
   cp -n "$CHROOT_FOLDER"/home/user/.xinitrc "$CHROOT_FOLDER"/home/user/.xinitrc.backup || true
   chown user "$CHROOT_FOLDER"/home/user/.xinitrc.backup || true

      ##########
      # Append #
      ##########

   # gpg.conf
   # Must be post because gpg.conf has not been created by gpg
   # before gpg has not been run at least once.
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf
   done < "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/.gnupg/appendto_gpg.conf
   chown user "$CHROOT_FOLDER"/home/user/.gnupg/gpg.conf

   # .gtkrc-2.0
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/home/user/.gtkrc-2.0
   done < "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/appento_.gtkrc-2.0
   chown user "$CHROOT_FOLDER"/home/user/.gtkrc-2.0

   # .profile
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/home/user/.profile
   done < "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/appendto_.profile
   chown user "$CHROOT_FOLDER"/home/user/.profile

   # .xinitrc
   while read LINE; do
      echo $LINE >> "$CHROOT_FOLDER"/home/user/.xinitrc
   done < "$AOS_SOURCE_FOLDER"/aos_workstation/home/user/appendto_.xinitrc
   chown user "$CHROOT_FOLDER"/home/user/.xinitrc
}